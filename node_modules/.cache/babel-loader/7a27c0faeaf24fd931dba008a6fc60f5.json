{"ast":null,"code":"import _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _readOnlyError from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/readOnlyError\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/views/Employee/List.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\"; // import Table from \"components/Table/Table.js\";\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport { makeStyles } from \"@material-ui/core/styles\"; // import Button from '@material-ui/core/Button'\n\nimport Button from \"components/CustomButtons/Button.js\";\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { showEmployee } from 'redux/EmployeeAction';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar'; // import ExpansionPanel from 'components/ExpansionPanel/ExpansionPanel'\n// import Modal from 'components/Modal/Modal';\n\nvar styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n      fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\"\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\"\n    }\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    display: 'inline-block',\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  },\n  table: {\n    border: 0\n  },\n  tableCell: {\n    border: 0,\n    padding: 3 // minWidth:'auto',\n    // width:'140px'\n    // maxWidth:'5%'\n\n  },\n  tableRow: {\n    marginTop: 25,\n    marginBottom: 5\n  },\n  addBtn: {\n    \"float\": 'right',\n    display: 'inline-block'\n  } // button:{\n  //     flexDirection: 'row', \n  //     justifyContent: 'flex-end',\n  //     alignSelf: 'flex-end',\n  //     alignItems: 'flex-end'\n  // }\n\n};\nvar useStyles = makeStyles(styles);\n\nfunction Employee(props) {\n  var classes = useStyles();\n  var data = useSelector(function (state) {\n    return state;\n  });\n  var dispatch = useDispatch();\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      counter = _useState2[0],\n      setCounter = _useState2[1];\n\n  var pictureBlob = new Blob(data.picture, {\n    type: 'image/jpeg'\n  });\n  var pictureBlobUrl = URL.createObjectURL(pictureBlob);\n  var currentAddressUrl = [];\n  data.currentAddressProof.map(function (p) {\n    var currentAddressProofBlob = new Blob([p], {\n      type: 'application/pdf'\n    });\n    currentAddressUrl.push(URL.createObjectURL(currentAddressProofBlob));\n  });\n  console.log(currentAddressUrl);\n  var permanentAddressUrl = [];\n  data.permanentAddressProof.map(function (p) {\n    var permanentAddressProofBlob = new Blob([p], {\n      type: 'application/pdf'\n    });\n    permanentAddressUrl.push(URL.createObjectURL(permanentAddressProofBlob));\n  });\n  var idProofUrl = [];\n  data.idProof.map(function (p) {\n    var idProofBlob = new Blob([p], {\n      type: 'application/pdf'\n    });\n    idProofUrl.push(URL.createObjectURL(idProofBlob));\n  }); //  console.log(\"bloburl\",blobUrl)\n  // let currentAddressBlob = new Blob(data.currentAddressProof,{type:'application/pdf'});\n  // const currentAddressUrl = URL.createObjectURL(currentAddressBlob)\n  // let permanentAddressBlob = new Blob(data.permanentAddressProof, { type: 'application/pdf' });\n  // const permanentAddressUrl = URL.createObjectURL(permanentAddressBlob)\n  // let idProofBlob = new Blob(data.idProof, { type: 'application/pdf' });\n  // const idProofUrl = URL.createObjectURL(idProofBlob)\n\n  useEffect(function () {\n    // dispatch({ type:'SHOW_EMPLOYEE' })\n    dispatch(showEmployee());\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 9,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: classes.cardTitleWhite,\n    style: {\n      display: 'inline-block'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Employee Details\")), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.addBtn,\n    color: \"info\",\n    component: Link,\n    to: \"/admin/addEmployee\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"Add Employee\")))), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, data.fullName != \"\" ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 5,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    height: \"auto\",\n    width: \"100%\",\n    src: pictureBlobUrl,\n    style: {\n      borderRadius: '50%',\n      padding: \"30\",\n      maxWidth: '300px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 5,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    colSpan: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.tableRow,\n    variant: \"h6\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"Employee Information\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.tableCell,\n    style: {\n      width: '150px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"Full Name:\"), React.createElement(TableCell, {\n    className: classes.tableCell,\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, data.fullName ? data.fullName : \"Not Set\")), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.tableCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, \"BirthDate:\"), React.createElement(TableCell, {\n    className: classes.tableCell,\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, data.birthDate ? data.birthDate : \"Not Set\")), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.tableCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, \"Gender:\"), React.createElement(TableCell, {\n    className: classes.tableCell,\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, data.gender ? data.gender : \"Not Set\")), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.tableCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, \"Marital Status:\"), React.createElement(TableCell, {\n    className: classes.tableCell,\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, data.maritalStatus ? data.maritalStatus : \"Not Set\")))), React.createElement(Table, {\n    \"aria-label\": \"simple table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    colSpan: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, \" \", React.createElement(Typography, {\n    className: classes.tableRow,\n    variant: \"h6\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, \"Current Address\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.tableCell,\n    style: {\n      width: '150px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, \"Street 1:\"), React.createElement(TableCell, {\n    className: classes.tableCell,\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, data.currentStreet1 ? data.currentStreet1 : \"Not Set\")), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.tableCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, \"Street 2:\"), React.createElement(TableCell, {\n    className: classes.tableCell,\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, data.currentStreet2 ? data.currentStreet2 : \"Not Set\")), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.tableCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, \"City:\"), React.createElement(TableCell, {\n    className: classes.tableCell,\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, data.currentCity ? data.currentCity : \"Not Set\")), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.tableCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, \"State:\"), React.createElement(TableCell, {\n    className: classes.tableCell,\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, data.currentState ? data.currentState : \"Not Set\")), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.tableCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, \"Country:\"), React.createElement(TableCell, {\n    className: classes.tableCell,\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, data.currentCountry ? data.currentCountry : \"Not Set\")), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.tableCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, \"Current Address Proof:\"), React.createElement(TableCell, {\n    className: classes.tableCell,\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, data.currentAddressProof.map(function (file) {\n    // console.log(file.name)\n    console.log(\"a\", counter);\n    console.log(\"b\", currentAddressUrl[counter]);\n    return React.createElement(\"a\", {\n      href: currentAddressUrl[counter],\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, file.name, setCounter((_readOnlyError(\"counter\"), counter++)), \" \");\n  }))))), React.createElement(Table, {\n    \"aria-label\": \"simple table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, \" \", React.createElement(Typography, {\n    className: classes.tableRow,\n    variant: \"h6\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, \"Permanent Address\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.tableCell,\n    style: {\n      width: '150px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, \"Street 1\"), React.createElement(TableCell, {\n    className: classes.tableCell,\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, data.permanentStreet1 ? data.permanentStreet1 : \"Not Set\")), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.tableCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, \"Street 2\"), React.createElement(TableCell, {\n    className: classes.tableCell,\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, data.permanentStreet2 ? data.permanentStreet2 : \"Not Set\")), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.tableCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, \"City\"), React.createElement(TableCell, {\n    className: classes.tableCell,\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, data.permanentCity ? data.permanentCity : \"Not Set\")), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.tableCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, \"State\"), React.createElement(TableCell, {\n    className: classes.tableCell,\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, data.permanentState ? data.permanentState : \"Not Set\")), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.tableCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }, \"Country\"), React.createElement(TableCell, {\n    className: classes.tableCell,\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, data.permanentCountry ? data.permanentCountry : \"Not Set\")), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.tableCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, \"Permanent Address Proof:\"), React.createElement(TableCell, {\n    className: classes.tableCell,\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, data.permanentAddressProof.map(function (file) {\n    var i = 0;\n    return React.createElement(\"a\", {\n      href: permanentAddressUrl[i],\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, file.name, \" \");\n    i = i + 1;\n  }))))), React.createElement(Table, {\n    \"aria-label\": \"simple table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    colSpan: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  }, \" \", React.createElement(Typography, {\n    className: classes.tableRow,\n    variant: \"h6\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  }, \"Emergency Contact\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.tableCell,\n    style: {\n      width: '150px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294\n    },\n    __self: this\n  }, \"Name:\"), React.createElement(TableCell, {\n    className: classes.tableCell,\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  }, data.emergencyName1 ? data.emergencyName1 : \"Not Set\")), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.tableCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }, \"Mobile:\"), React.createElement(TableCell, {\n    className: classes.tableCell,\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299\n    },\n    __self: this\n  }, data.emergencyMobile1 ? data.emergencyMobile1 : \"Not Set\")), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.tableCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302\n    },\n    __self: this\n  }, \"RealtionShip:\"), React.createElement(TableCell, {\n    className: classes.tableCell,\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303\n    },\n    __self: this\n  }, data.emergencyRelationship1 ? data.emergencyRelationship1 : \"Not Set\")))), React.createElement(Table, {\n    \"aria-label\": \"simple table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    colSpan: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310\n    },\n    __self: this\n  }, \" \", React.createElement(Typography, {\n    className: classes.tableRow,\n    variant: \"h6\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310\n    },\n    __self: this\n  }, \"Job Details\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.tableCell,\n    style: {\n      width: '150px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316\n    },\n    __self: this\n  }, \"Hire Date:\"), React.createElement(TableCell, {\n    className: classes.tableCell,\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317\n    },\n    __self: this\n  }, data.jobHireDate ? data.jobHireDate : \"Not Set\")), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.tableCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320\n    },\n    __self: this\n  }, \"Salary:\"), React.createElement(TableCell, {\n    className: classes.tableCell,\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321\n    },\n    __self: this\n  }, data.jobSalary ? data.jobSalary : \"Not Set\")), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.tableCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324\n    },\n    __self: this\n  }, \"Current Salary:\"), React.createElement(TableCell, {\n    className: classes.tableCell,\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325\n    },\n    __self: this\n  }, data.jobCurrentSalary ? data.jobCurrentSalary : \"Not Set\")), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.tableCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328\n    },\n    __self: this\n  }, \"Bond:\"), React.createElement(TableCell, {\n    className: classes.tableCell,\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329\n    },\n    __self: this\n  }, data.jobBond ? data.jobBond : \"Not Set\")))), React.createElement(Table, {\n    \"aria-label\": \"simple table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    colSpan: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335\n    },\n    __self: this\n  }, \" \", React.createElement(Typography, {\n    className: classes.tableRow,\n    variant: \"h6\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335\n    },\n    __self: this\n  }, \"Id Proof\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.tableCell,\n    style: {\n      width: '150px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341\n    },\n    __self: this\n  }, \"Id Proof:\"), React.createElement(TableCell, {\n    className: classes.tableCell,\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342\n    },\n    __self: this\n  }, data.idProof.map(function (file) {\n    var i = 0;\n    return React.createElement(\"a\", {\n      href: idProofUrl[i],\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, file.name, \" \");\n    i = i + 1;\n  })))))))) : \"\")))));\n}\n\nexport default Employee;\n{\n  /* <Table aria-label=\"simple table\">\n         <TableHead>\n           <TableRow>\n             <TableCell>Name</TableCell>\n             <TableCell align=\"right\">City</TableCell>\n             <TableCell align=\"right\">State</TableCell>\n             <TableCell align=\"right\">Country</TableCell>\n             <TableCell align=\"right\">Salary</TableCell>\n             <TableCell align=\"center\" colSpan={2}>Action</TableCell>\n           </TableRow>\n         </TableHead>\n         <TableBody>\n           {rows.map(row => (\n             <TableRow key={row.name}>\n               <TableCell component=\"th\" scope=\"row\">\n                 {row.name}\n               </TableCell>\n               <TableCell align=\"right\">{row.calories}</TableCell>\n               <TableCell align=\"right\">{row.fat}</TableCell>\n               <TableCell align=\"right\">{row.carbs}</TableCell>\n               <TableCell align=\"right\">{row.protein}</TableCell>\n               <TableCell align=\"right\"><Button variant=\"contained\" color=\"primary\"  component={Link} to=\"/admin/editEmployee\">\n                 Edit\n             </Button></TableCell>\n               <TableCell align=\"right\"><Button variant=\"contained\" color=\"primary\"  component={Link} to=\"/admin/deleteEmployee\">\n                 Delete\n             </Button></TableCell>\n             </TableRow>\n           ))}\n         </TableBody>\n       </Table> */\n}\n{\n  /* <Table\n               tableHeaderColor=\"primary\"\n               tableHead={[\"Name\", \"State\",\"Country\", \"City\", \"Salary\"]}\n               tableData={[\n                 // data\n                 [\"1\", \"Dakota Rice\", \"$36,738\", \"Niger\", \"Oud-Turnhout\"],\n                 [\"2\", \"Minerva Hooper\", \"$23,789\", \"Curaçao\", \"Sinaai-Waas\"],\n                 [\"3\", \"Sage Rodriguez\", \"$56,142\", \"Netherlands\", \"Baileux\"],\n                 [\n                   \"4\",\n                   \"Philip Chaney\",\n                   \"$38,735\",\n                   \"Korea, South\",\n                   \"Overland Park\"\n                 ],\n                 [\n                   \"5\",\n                   \"Doris Greene\",\n                   \"$63,542\",\n                   \"Malawi\",\n                   \"Feldkirchen in Kärnten\"\n                 ],\n                 [\"6\", \"Mason Porter\", \"$78,615\", \"Chile\", \"Gloucester\"]\n               ]}\n             /> */\n}","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/views/Employee/List.js"],"names":["React","useState","useContext","useEffect","GridItem","GridContainer","Table","TableBody","TableCell","TableHead","TableRow","Card","CardHeader","CardBody","makeStyles","Button","Link","useSelector","useDispatch","showEmployee","EditIcon","DeleteIcon","Typography","Avatar","styles","cardCategoryWhite","color","margin","fontSize","marginTop","marginBottom","fontFamily","cardTitleWhite","minHeight","fontWeight","display","textDecoration","lineHeight","table","border","tableCell","padding","tableRow","addBtn","useStyles","Employee","props","classes","data","state","dispatch","counter","setCounter","pictureBlob","Blob","picture","type","pictureBlobUrl","URL","createObjectURL","currentAddressUrl","currentAddressProof","map","p","currentAddressProofBlob","push","console","log","permanentAddressUrl","permanentAddressProof","permanentAddressProofBlob","idProofUrl","idProof","idProofBlob","fullName","borderRadius","maxWidth","width","birthDate","gender","maritalStatus","currentStreet1","currentStreet2","currentCity","currentState","currentCountry","file","name","permanentStreet1","permanentStreet2","permanentCity","permanentState","permanentCountry","i","emergencyName1","emergencyMobile1","emergencyRelationship1","jobHireDate","jobSalary","jobCurrentSalary","jobBond"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\n// import Table from \"components/Table/Table.js\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n// import Button from '@material-ui/core/Button'\nimport Button from \"components/CustomButtons/Button.js\";\nimport { Link } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { showEmployee } from 'redux/EmployeeAction'\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Typography from '@material-ui/core/Typography'\nimport Avatar from '@material-ui/core/Avatar';\n// import ExpansionPanel from 'components/ExpansionPanel/ExpansionPanel'\n// import Modal from 'components/Modal/Modal';\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n      fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\"\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\"\n    }\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    display: 'inline-block',\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  },\n  table: {\n    border: 0,\n\n  },\n  tableCell: {\n    border: 0,\n    padding: 3,\n    // minWidth:'auto',\n    // width:'140px'\n    // maxWidth:'5%'\n  },\n  tableRow: {\n    marginTop: 25,\n    marginBottom: 5,\n  },\n  addBtn: {\n    float: 'right',\n    display: 'inline-block',\n\n  }\n  // button:{\n  //     flexDirection: 'row', \n  //     justifyContent: 'flex-end',\n  //     alignSelf: 'flex-end',\n  //     alignItems: 'flex-end'\n  // }\n};\n\nconst useStyles = makeStyles(styles);\n\n\nfunction Employee(props) {\n\n  const classes = useStyles();\n  const data = useSelector(state => state)\n  const dispatch = useDispatch();\n  const [counter,setCounter]=useState(0)\n  let pictureBlob = new Blob(data.picture, { type: 'image/jpeg' });\n  const pictureBlobUrl = URL.createObjectURL(pictureBlob)\n\n  var currentAddressUrl = []\n  data.currentAddressProof.map(p => {\n   let currentAddressProofBlob = new Blob([p], { type: 'application/pdf' });\n    currentAddressUrl.push(URL.createObjectURL(currentAddressProofBlob))\n\n  })\nconsole.log(currentAddressUrl)\n  var permanentAddressUrl = []\n  data.permanentAddressProof.map(p => {\n   let permanentAddressProofBlob = new Blob([p], { type: 'application/pdf' });\n    permanentAddressUrl.push(URL.createObjectURL(permanentAddressProofBlob))\n\n  })\n\n  var idProofUrl = []\n  data.idProof.map(p => {\n   let idProofBlob = new Blob([p], { type: 'application/pdf' });\n    idProofUrl.push(URL.createObjectURL(idProofBlob))\n\n  })\n  //  console.log(\"bloburl\",blobUrl)\n  // let currentAddressBlob = new Blob(data.currentAddressProof,{type:'application/pdf'});\n  // const currentAddressUrl = URL.createObjectURL(currentAddressBlob)\n  // let permanentAddressBlob = new Blob(data.permanentAddressProof, { type: 'application/pdf' });\n  // const permanentAddressUrl = URL.createObjectURL(permanentAddressBlob)\n  // let idProofBlob = new Blob(data.idProof, { type: 'application/pdf' });\n  // const idProofUrl = URL.createObjectURL(idProofBlob)\n  useEffect(() => {\n    // dispatch({ type:'SHOW_EMPLOYEE' })\n    dispatch(showEmployee())\n\n  }, [])\n\n  return (\n    <div>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={9}>\n          <Card>\n            {/* in cardheader we can use plain attribute */}\n\n            <CardHeader color=\"primary\">\n              <GridContainer>\n                <GridItem xs={12} sm={12} md={6}>\n                  <h4 className={classes.cardTitleWhite} style={{ display: 'inline-block' }}>\n                    Employee Details\n            </h4>\n                </GridItem>\n                <GridItem xs={12} sm={12} md={6}>\n                  <Button className={classes.addBtn} color=\"info\" component={Link} to=\"/admin/addEmployee\">\n                    Add Employee\n            </Button>\n                </GridItem></GridContainer>\n            </CardHeader>\n            <CardBody>\n              {/* <ExpansionPanel orderstatus=\"Inactive\" createddate=\"dsada\" ordernumber=\"12\">\n                    fdsd\n          </ExpansionPanel>\n          <ExpansionPanel orderstatus=\"active\" createddate=\"dsada\" ordernumber=\"12\">\n                    fdsd\n          </ExpansionPanel> */}\n              {/* <Modal orderstatus=\"active\" createddate=\"dsada\" ordernumber=\"12\">dghj</Modal> */}\n\n              {data.fullName != \"\" ?\n                <div>\n                  <GridContainer spacing={2}>\n                    <GridItem xs={12} sm={5} md={4}>\n                      {/* <Avatar alt=\"Remy Sharp\" src={data.image} height=\"300px\" width=\"400px\" /> */}\n                      {/* {data.image ? */}\n                      <img height=\"auto\" width=\"100%\" src={pictureBlobUrl} style={{ borderRadius: '50%', padding: \"30\", maxWidth: '300px' }} />\n                      {/* : \"\"} */}\n                    </GridItem>\n                    <GridItem xs={12} sm={5} md={6}>\n                      <Table className={classes.table}>\n                        <TableHead>\n                          <TableRow colSpan={2}>\n                            <Typography className={classes.tableRow} variant=\"h6\" component=\"h2\">\n                              Employee Information\n                              </Typography>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          <TableRow>\n                            <TableCell className={classes.tableCell} style={{ width: '150px' }}>Full Name:</TableCell>\n                            <TableCell className={classes.tableCell} align=\"left\">{data.fullName ? data.fullName : \"Not Set\"}</TableCell>\n                          </TableRow>\n                          <TableRow>\n                            <TableCell className={classes.tableCell}>BirthDate:</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">{data.birthDate ? data.birthDate : \"Not Set\"}</TableCell>\n                          </TableRow>\n                          <TableRow>\n                            <TableCell className={classes.tableCell}>Gender:</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">{data.gender ? data.gender : \"Not Set\"}</TableCell>\n                          </TableRow>\n                          <TableRow>\n                            <TableCell className={classes.tableCell}>Marital Status:</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">{data.maritalStatus ? data.maritalStatus : \"Not Set\"}</TableCell>\n                          </TableRow>\n                        </TableBody>\n                      </Table>\n                      <Table aria-label=\"simple table\">\n                        <TableHead>\n                          <TableRow colSpan={2}> <Typography className={classes.tableRow} variant=\"h6\" component=\"h2\">\n                            Current Address</Typography>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          <TableRow>\n                            <TableCell className={classes.tableCell} style={{ width: '150px' }}>Street 1:</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">{data.currentStreet1 ? data.currentStreet1 : \"Not Set\"}</TableCell>\n                          </TableRow>\n                          <TableRow>\n                            <TableCell className={classes.tableCell}>Street 2:</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">{data.currentStreet2 ? data.currentStreet2 : \"Not Set\"}</TableCell>\n                          </TableRow>\n                          <TableRow>\n                            <TableCell className={classes.tableCell}>City:</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">{data.currentCity ? data.currentCity : \"Not Set\"}</TableCell>\n                          </TableRow>\n                          <TableRow>\n                            <TableCell className={classes.tableCell}>State:</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">{data.currentState ? data.currentState : \"Not Set\"}</TableCell>\n                          </TableRow>\n                          <TableRow>\n                            <TableCell className={classes.tableCell}>Country:</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">{data.currentCountry ? data.currentCountry : \"Not Set\"}</TableCell>\n                          </TableRow>\n                          <TableRow>\n                            <TableCell className={classes.tableCell}>Current Address Proof:</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">\n                             \n                              {\n                                \n                              data.currentAddressProof.map(file => {\n                                \n                                // console.log(file.name)\n                                console.log(\"a\",counter)\n                                console.log(\"b\",currentAddressUrl[counter])\n                                return (\n                                  <a href={currentAddressUrl[counter]} target=\"_blank\">{file.name}{\n                                    setCounter(counter++)\n                                  } </a>\n                                  \n                                )\n                              }\n                            \n                              )}\n                            </TableCell>\n                          </TableRow>\n                        </TableBody>\n                      </Table>\n                      <Table aria-label=\"simple table\">\n                        <TableHead>\n                          <TableRow> <Typography className={classes.tableRow} variant=\"h6\" component=\"h2\">\n                            Permanent Address</Typography>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          <TableRow>\n                            <TableCell className={classes.tableCell} style={{ width: '150px' }}>Street 1</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">{data.permanentStreet1 ? data.permanentStreet1 : \"Not Set\"}</TableCell>\n                          </TableRow>\n                          <TableRow>\n                            <TableCell className={classes.tableCell}>Street 2</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">{data.permanentStreet2 ? data.permanentStreet2 : \"Not Set\"}</TableCell>\n                          </TableRow>\n                          <TableRow>\n                            <TableCell className={classes.tableCell}>City</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">{data.permanentCity ? data.permanentCity : \"Not Set\"}</TableCell>\n                          </TableRow>\n                          <TableRow>\n                            <TableCell className={classes.tableCell}>State</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">{data.permanentState ? data.permanentState : \"Not Set\"}</TableCell>\n                          </TableRow>\n                          <TableRow>\n                            <TableCell className={classes.tableCell}>Country</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">{data.permanentCountry ? data.permanentCountry : \"Not Set\"}</TableCell>\n                          </TableRow>\n                          <TableRow>\n                            <TableCell className={classes.tableCell}>Permanent Address Proof:</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">\n                              {data.permanentAddressProof.map(file => {\n                                var i = 0\n                                return (\n                                  <a href={permanentAddressUrl[i]} target=\"_blank\">{file.name} </a>\n                                )\n                                i=i+1\n                              })}\n                            </TableCell>\n                          </TableRow>\n                        </TableBody>\n                      </Table>\n                      <Table aria-label=\"simple table\">\n                        <TableHead>\n                          <TableRow colSpan={2}> <Typography className={classes.tableRow} variant=\"h6\" component=\"h2\">\n                            Emergency Contact</Typography>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          <TableRow>\n                            <TableCell className={classes.tableCell} style={{ width: '150px' }}>Name:</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">{data.emergencyName1 ? data.emergencyName1 : \"Not Set\"}</TableCell>\n                          </TableRow>\n                          <TableRow>\n                            <TableCell className={classes.tableCell}>Mobile:</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">{data.emergencyMobile1 ? data.emergencyMobile1 : \"Not Set\"}</TableCell>\n                          </TableRow>\n                          <TableRow>\n                            <TableCell className={classes.tableCell}>RealtionShip:</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">{data.emergencyRelationship1 ? data.emergencyRelationship1 : \"Not Set\"}</TableCell>\n                          </TableRow>\n\n                        </TableBody>\n                      </Table>\n                      <Table aria-label=\"simple table\">\n                        <TableHead>\n                          <TableRow colSpan={2}> <Typography className={classes.tableRow} variant=\"h6\" component=\"h2\">\n                            Job Details</Typography>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          <TableRow>\n                            <TableCell className={classes.tableCell} style={{ width: '150px' }}>Hire Date:</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">{data.jobHireDate ? data.jobHireDate : \"Not Set\"}</TableCell>\n                          </TableRow>\n                          <TableRow>\n                            <TableCell className={classes.tableCell}>Salary:</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">{data.jobSalary ? data.jobSalary : \"Not Set\"}</TableCell>\n                          </TableRow>\n                          <TableRow>\n                            <TableCell className={classes.tableCell}>Current Salary:</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">{data.jobCurrentSalary ? data.jobCurrentSalary : \"Not Set\"}</TableCell>\n                          </TableRow>\n                          <TableRow>\n                            <TableCell className={classes.tableCell}>Bond:</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">{data.jobBond ? data.jobBond : \"Not Set\"}</TableCell>\n                          </TableRow>\n                        </TableBody>\n                      </Table>\n                      <Table aria-label=\"simple table\">\n                        <TableHead>\n                          <TableRow colSpan={2}> <Typography className={classes.tableRow} variant=\"h6\" component=\"h2\">\n                            Id Proof</Typography>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          <TableRow>\n                            <TableCell className={classes.tableCell} style={{ width: '150px' }}>Id Proof:</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">\n                              {data.idProof.map(file => {\n                                var i = 0\n                                return (\n                                  <a href={idProofUrl[i]} target=\"_blank\">{file.name} </a>\n                                )\n                                i=i+1\n                              })}\n                            </TableCell>\n                          </TableRow>\n                        </TableBody>\n                      </Table>\n                    </GridItem>\n                  </GridContainer>\n                </div>\n                : \"\"}\n\n            </CardBody>\n          </Card>\n        </GridItem>\n\n      </GridContainer>\n    </div>\n  );\n}\n\nexport default Employee;\n\n{/* <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell align=\"right\">City</TableCell>\n            <TableCell align=\"right\">State</TableCell>\n            <TableCell align=\"right\">Country</TableCell>\n            <TableCell align=\"right\">Salary</TableCell>\n            <TableCell align=\"center\" colSpan={2}>Action</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.name}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">{row.calories}</TableCell>\n              <TableCell align=\"right\">{row.fat}</TableCell>\n              <TableCell align=\"right\">{row.carbs}</TableCell>\n              <TableCell align=\"right\">{row.protein}</TableCell>\n              <TableCell align=\"right\"><Button variant=\"contained\" color=\"primary\"  component={Link} to=\"/admin/editEmployee\">\n                Edit\n            </Button></TableCell>\n              <TableCell align=\"right\"><Button variant=\"contained\" color=\"primary\"  component={Link} to=\"/admin/deleteEmployee\">\n                Delete\n            </Button></TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table> */}\n{/* <Table\n              tableHeaderColor=\"primary\"\n              tableHead={[\"Name\", \"State\",\"Country\", \"City\", \"Salary\"]}\n              tableData={[\n                // data\n                [\"1\", \"Dakota Rice\", \"$36,738\", \"Niger\", \"Oud-Turnhout\"],\n                [\"2\", \"Minerva Hooper\", \"$23,789\", \"Curaçao\", \"Sinaai-Waas\"],\n                [\"3\", \"Sage Rodriguez\", \"$56,142\", \"Netherlands\", \"Baileux\"],\n                [\n                  \"4\",\n                  \"Philip Chaney\",\n                  \"$38,735\",\n                  \"Korea, South\",\n                  \"Overland Park\"\n                ],\n                [\n                  \"5\",\n                  \"Doris Greene\",\n                  \"$63,542\",\n                  \"Malawi\",\n                  \"Feldkirchen in Kärnten\"\n                ],\n                [\"6\", \"Mason Porter\", \"$78,615\", \"Chile\", \"Gloucester\"]\n              ]}\n            /> */}"]},"metadata":{},"sourceType":"module"}