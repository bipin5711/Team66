{"ast":null,"code":"import _defineProperty from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/components/AddEmployeeForms/PermanentAddress.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from 'react';\nimport { FormLabel } from \"@material-ui/core\";\nimport { TextField } from 'formik-material-ui';\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Dropzone from 'react-dropzone';\nimport StepperNavigationButtons from 'views/Employee/StepperNavigationButtons';\nimport { EmployeeContext } from 'views/Employee/AddEmployee';\nimport * as Yup from 'yup';\nimport { Formik, Form, Field } from 'formik';\nimport { StepContext } from 'views/Employee/AddEmployee';\nvar ValidationSchema = Yup.object().shape({\n  street1: Yup.string().required('Required'),\n  city: Yup.string().required('Required') //  addressProof: Yup.file().required('Required')\n\n});\n\nfunction PermanentAddress(props) {\n  var _useContext = useContext(EmployeeContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      employeeData = _useContext2[0],\n      setEmployeeData = _useContext2[1];\n\n  var _useContext3 = useContext(StepContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      activeStep = _useContext4[0],\n      setActiveStep = _useContext4[1];\n\n  var _useState = useState(new Set()),\n      _useState2 = _slicedToArray(_useState, 2),\n      skipped = _useState2[0],\n      setSkipped = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filename = _useState4[0],\n      setFilename = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      file = _useState6[0],\n      setFile = _useState6[1];\n\n  function handleOnDrop(files, rejectedFiles) {\n    var curfile = files[0];\n    console.log(files[0].name);\n    setFilename(files[0].name);\n    var reader = new FileReader();\n    reader.addEventListener(\"load\", function () {\n      setFile(reader.result);\n    }, false);\n    reader.readAsDataURL(curfile);\n  }\n\n  return React.createElement(Formik, {\n    initialValues: employeeData // validationSchema={ValidationSchema}\n    ,\n    onSubmit: function onSubmit(values) {\n      //handleNext()\n      var newSkipped = skipped;\n\n      var isStepSkipped = function isStepSkipped(step) {\n        return skipped.has(step);\n      };\n\n      if (isStepSkipped(activeStep)) {\n        newSkipped = new Set(newSkipped.values());\n        newSkipped[\"delete\"](activeStep);\n      }\n\n      setActiveStep(function (prevActiveStep) {\n        return prevActiveStep + 1;\n      });\n      setSkipped(newSkipped);\n      setEmployeeData(_objectSpread({}, employeeData, {\n        permanentStreet1: values.street1,\n        permanentStreet2: values.street2,\n        permanentCity: values.city,\n        permanentState: values.state,\n        permanentCountry: values.country,\n        permanentAddressProof: filename\n      }));\n    },\n    render: function render(_ref) {\n      var errors = _ref.errors,\n          values = _ref.values,\n          touched = _ref.touched,\n          handleChange = _ref.handleChange,\n          handleSubmit = _ref.handleSubmit;\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Street 1\",\n        id: \"street1\",\n        name: \"street1\",\n        value: values.street1,\n        component: TextField,\n        onChange: handleChange,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Street 2\",\n        id: \"street2\",\n        name: \"street2\",\n        value: values.street2,\n        component: TextField,\n        onChange: handleChange,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"City\",\n        id: \"city\",\n        name: \"city\",\n        value: values.city,\n        component: TextField,\n        onChange: handleChange,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"State\",\n        id: \"state\",\n        name: \"state\",\n        value: values.state,\n        component: TextField,\n        onChange: handleChange,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Country\",\n        id: \"country\",\n        name: \"country\",\n        value: values.country,\n        component: TextField,\n        onChange: handleChange,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        style: {\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Image\"), React.createElement(Dropzone, {\n        onDrop: handleOnDrop,\n        multiple: \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, function (_ref2) {\n        var getRootProps = _ref2.getRootProps,\n            getInputProps = _ref2.getInputProps;\n        return React.createElement(\"section\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, React.createElement(\"div\", Object.assign({}, getRootProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        })), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, filename === \"\" ? \"Drag and drop file here, or click to select file\" : filename)));\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(StepperNavigationButtons, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  });\n}\n\nexport default PermanentAddress;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/components/AddEmployeeForms/PermanentAddress.js"],"names":["React","useState","useContext","FormLabel","TextField","GridItem","GridContainer","Dropzone","StepperNavigationButtons","EmployeeContext","Yup","Formik","Form","Field","StepContext","ValidationSchema","object","shape","street1","string","required","city","PermanentAddress","props","employeeData","setEmployeeData","activeStep","setActiveStep","Set","skipped","setSkipped","filename","setFilename","file","setFile","handleOnDrop","files","rejectedFiles","curfile","console","log","name","reader","FileReader","addEventListener","result","readAsDataURL","values","newSkipped","isStepSkipped","step","has","prevActiveStep","permanentStreet1","permanentStreet2","street2","permanentCity","permanentState","state","permanentCountry","country","permanentAddressProof","errors","touched","handleChange","handleSubmit","textAlign","getRootProps","getInputProps"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { FormLabel } from \"@material-ui/core\";\nimport { TextField } from 'formik-material-ui'; \nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Dropzone from 'react-dropzone';\nimport StepperNavigationButtons from 'views/Employee/StepperNavigationButtons';\nimport { EmployeeContext } from 'views/Employee/AddEmployee'\nimport * as Yup from 'yup'\nimport { Formik, Form, Field } from 'formik'\nimport { StepContext } from 'views/Employee/AddEmployee'\n\nconst ValidationSchema = Yup.object().shape({\n  street1: Yup.string()\n    .required('Required'),\n  city: Yup.string()\n    .required('Required'),\n  //  addressProof: Yup.file().required('Required')\n\n});\nfunction PermanentAddress(props) {\n  const [employeeData, setEmployeeData] = useContext(EmployeeContext)\n  const [activeStep, setActiveStep] = useContext(StepContext);\n  const [skipped, setSkipped] = useState(new Set());\n  const [filename, setFilename] = useState('')\n  const [file, setFile] = useState('')\n\n  function handleOnDrop(files, rejectedFiles) {\n    const curfile = files[0]\n    console.log(files[0].name)\n    setFilename(files[0].name)\n    const reader = new FileReader()\n    reader.addEventListener(\"load\", () => {\n      setFile(reader.result)\n    }, false)\n    reader.readAsDataURL(curfile)\n  }\n  return (\n\n      <Formik\n        initialValues={employeeData}\n        // validationSchema={ValidationSchema}\n        onSubmit={values => {\n          //handleNext()\n          let newSkipped = skipped;\n          const isStepSkipped = step => {\n            return skipped.has(step);\n          };\n          if (isStepSkipped(activeStep)) {\n            newSkipped = new Set(newSkipped.values());\n            newSkipped.delete(activeStep);\n          }\n          setActiveStep(prevActiveStep => prevActiveStep + 1);\n          setSkipped(newSkipped);\n          setEmployeeData({\n            ...employeeData,\n            permanentStreet1: values.street1,\n            permanentStreet2: values.street2,\n            permanentCity: values.city,\n            permanentState: values.state,\n            permanentCountry: values.country,\n            permanentAddressProof: filename\n          })\n        }}\n        render={({ errors, values, touched, handleChange, handleSubmit }) => (\n          <Form>\n            <GridContainer>\n\n              <GridItem xs={12} sm={12} md={12}>\n                <Field\n                  label=\"Street 1\"\n                  id=\"street1\"\n                  name=\"street1\"\n                  value={values.street1}\n                  component={TextField}\n                  onChange={handleChange}\n                  fullWidth\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={12}>\n                <Field\n                  label=\"Street 2\"\n                  id=\"street2\"\n                  name=\"street2\"\n                  value={values.street2}\n                  component={TextField}\n                  onChange={handleChange}\n                  fullWidth\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={12}>\n                <Field\n                  label=\"City\"\n                  id=\"city\"\n                  name=\"city\"\n                  value={values.city}\n                  component={TextField}\n                  onChange={handleChange}\n                  fullWidth\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={12}>\n                <Field\n                  label=\"State\"\n                  id=\"state\"\n                  name=\"state\"\n                  value={values.state}\n                  component={TextField}\n                  onChange={handleChange}\n                  fullWidth\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={12}>\n                <Field\n                  label=\"Country\"\n                  id=\"country\"\n                  name=\"country\"\n                  value={values.country}\n                  component={TextField}\n                  onChange={handleChange}\n                  fullWidth\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={12}>\n                <FormLabel component=\"legend\" style={{ textAlign: 'left' }}>Image</FormLabel>\n                <Dropzone onDrop={handleOnDrop} multiple=\"true\">\n                  {({ getRootProps, getInputProps }) => (\n                    <section>\n                      <div {...getRootProps()}>\n                        <input {...getInputProps()} />\n                        <p>{filename === \"\" ? \"Drag and drop file here, or click to select file\" : filename}</p>\n                      </div>\n                    </section>\n                  )}\n                </Dropzone>\n              </GridItem>\n              <GridItem xs={12} sm={12} md={12}>\n                <StepperNavigationButtons />\n              </GridItem>\n            </GridContainer>\n          </Form>\n        )}\n      >\n      </Formik>\n  );\n}\n\nexport default PermanentAddress;"]},"metadata":{},"sourceType":"module"}