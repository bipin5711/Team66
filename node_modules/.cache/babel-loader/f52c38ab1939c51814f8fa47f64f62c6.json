{"ast":null,"code":"import _defineProperty from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/components/AddEmployeeForms/EmergencyContact.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from 'react';\nimport { TextField } from 'formik-material-ui';\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport { Formik, Field, Form } from 'formik';\nimport { StepContext, EmployeeContext } from 'views/Employee/Add';\nimport StepperNavigationButtons from 'components/Stepper/StepperNavigationButtons';\nimport * as Yup from 'yup';\nimport { makeStyles } from \"@material-ui/core/styles\";\nvar useStyles = makeStyles({\n  field: {\n    marginTop: \"32px\"\n  }\n});\nvar validationSchema = Yup.object().shape({\n  emergencyName1: Yup.string().min(2, 'too Short!').required('Required'),\n  emergencyMobile1: Yup.number().typeError('Mobile must be number').required('Required'),\n  emergencyRelationship1: Yup.string().required('Required')\n});\n\nfunction EmergencyContact(props) {\n  var classes = useStyles();\n\n  var _useContext = useContext(EmployeeContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      employeeData = _useContext2[0],\n      setEmployeeData = _useContext2[1];\n\n  var _useContext3 = useContext(StepContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      activeStep = _useContext4[0],\n      setActiveStep = _useContext4[1];\n\n  var _useState = useState(new Set()),\n      _useState2 = _slicedToArray(_useState, 2),\n      skipped = _useState2[0],\n      setSkipped = _useState2[1];\n\n  return React.createElement(Formik, {\n    initialValues: employeeData,\n    validationSchema: validationSchema,\n    onSubmit: function onSubmit(values) {\n      //handleNext()\n      var newSkipped = skipped;\n\n      var isStepSkipped = function isStepSkipped(step) {\n        return skipped.has(step);\n      };\n\n      if (isStepSkipped(activeStep)) {\n        newSkipped = new Set(newSkipped.values());\n        newSkipped[\"delete\"](activeStep);\n      }\n\n      setActiveStep(function (prevActiveStep) {\n        return prevActiveStep + 1;\n      });\n      setSkipped(newSkipped);\n      setEmployeeData(_objectSpread({}, employeeData, {\n        emergencyName1: values.emergencyName1,\n        emergencyMobile1: values.emergencyMobile1,\n        emergencyRelationship1: values.emergencyRelationship1,\n        emergencyName2: values.emergencyName2,\n        emergencyMobile2: values.emergencyMobile2,\n        emergencyRelationship2: values.emergencyRelationship2\n      }));\n    },\n    render: function render() {\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Name1\",\n        id: \"emergencyName1\",\n        name: \"emergencyName1\",\n        className: classes.field,\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Mobile\",\n        id: \"emergencyMobile1\",\n        name: \"emergencyMobile1\",\n        className: classes.field,\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Relationship\",\n        id: \"emergencyRelationship1\",\n        name: \"emergencyRelationship1\",\n        className: classes.field,\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Name 2\",\n        id: \"emergencyName2\",\n        name: \"emergencyName2\",\n        className: classes.field,\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Mobile\",\n        id: \"emergencyMobile2\",\n        name: \"emergencyMobile2\",\n        className: classes.field,\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Relationship\",\n        id: \"emergencyRelationship2\",\n        className: classes.field,\n        name: \"emergencyRelationship2\",\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(StepperNavigationButtons, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  });\n}\n\nexport default EmergencyContact;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/components/AddEmployeeForms/EmergencyContact.js"],"names":["React","useState","useContext","TextField","GridItem","GridContainer","Formik","Field","Form","StepContext","EmployeeContext","StepperNavigationButtons","Yup","makeStyles","useStyles","field","marginTop","validationSchema","object","shape","emergencyName1","string","min","required","emergencyMobile1","number","typeError","emergencyRelationship1","EmergencyContact","props","classes","employeeData","setEmployeeData","activeStep","setActiveStep","Set","skipped","setSkipped","values","newSkipped","isStepSkipped","step","has","prevActiveStep","emergencyName2","emergencyMobile2","emergencyRelationship2"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { TextField } from 'formik-material-ui'; \nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport { Formik, Field, Form } from 'formik'\nimport { StepContext, EmployeeContext } from 'views/Employee/Add'\nimport StepperNavigationButtons from 'components/Stepper/StepperNavigationButtons';\nimport * as Yup from 'yup'\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles=makeStyles({\n  field:{\n    marginTop: \"32px\"\n  }\n})\n\nconst validationSchema = Yup.object().shape({\n  emergencyName1: Yup.string()\n    .min(2, 'too Short!')\n    .required('Required'),\n  emergencyMobile1: Yup.number().typeError('Mobile must be number').required('Required'),\n  emergencyRelationship1: Yup.string().required('Required')\n\n});\n\nfunction EmergencyContact(props) {\n  const classes=useStyles()\n  const [employeeData, setEmployeeData] = useContext(EmployeeContext)\n  const [activeStep, setActiveStep] = useContext(StepContext);\n  const [skipped, setSkipped] = useState(new Set());\n\n  return (\n\n      <Formik\n        initialValues={employeeData}\n        validationSchema={validationSchema}\n        onSubmit={values => {\n          //handleNext()\n          let newSkipped = skipped;\n          const isStepSkipped = step => {\n            return skipped.has(step);\n          };\n          if (isStepSkipped(activeStep)) {\n            newSkipped = new Set(newSkipped.values());\n            newSkipped.delete(activeStep);\n          }\n          setActiveStep(prevActiveStep => prevActiveStep + 1);\n          setSkipped(newSkipped);\n          setEmployeeData({\n            ...employeeData,\n            emergencyName1: values.emergencyName1,\n            emergencyMobile1: values.emergencyMobile1,\n            emergencyRelationship1: values.emergencyRelationship1,\n            emergencyName2: values.emergencyName2,\n            emergencyMobile2: values.emergencyMobile2,\n            emergencyRelationship2: values.emergencyRelationship2\n          })\n        }}\n        render={() => (\n          <Form>\n            <GridContainer>\n              <GridItem xs={12} sm={12} md={5}>\n                <Field\n                  label=\"Name1\"\n                  id=\"emergencyName1\"\n                  name=\"emergencyName1\"\n                  className={classes.field}\n                  component={TextField}\n                  fullWidth\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={4}>\n                <Field\n                  label=\"Mobile\"\n                  id=\"emergencyMobile1\"\n                  name=\"emergencyMobile1\"\n                  className={classes.field}\n                  component={TextField}\n                  fullWidth\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={3}>\n                <Field\n                  label=\"Relationship\"\n                  id=\"emergencyRelationship1\"\n                  name=\"emergencyRelationship1\"\n                  className={classes.field}\n                  component={TextField}\n                  fullWidth\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={5}>\n                <Field\n                  label=\"Name 2\"\n                  id=\"emergencyName2\"\n                  name=\"emergencyName2\"\n                  className={classes.field}\n                  component={TextField}\n                  fullWidth\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={4}>\n                <Field\n                  label=\"Mobile\"\n                  id=\"emergencyMobile2\"\n                  name=\"emergencyMobile2\"\n                  className={classes.field}\n                  component={TextField}\n                  fullWidth\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={3}>\n                <Field\n                  label=\"Relationship\"\n                  id=\"emergencyRelationship2\"\n                  className={classes.field}\n                  name=\"emergencyRelationship2\"\n                  component={TextField}\n                  fullWidth\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={12}>\n                <StepperNavigationButtons />\n              </GridItem>\n\n            </GridContainer>\n          </Form>\n        )}\n      >\n      </Formik>\n  );\n}\n\nexport default EmergencyContact;"]},"metadata":{},"sourceType":"module"}