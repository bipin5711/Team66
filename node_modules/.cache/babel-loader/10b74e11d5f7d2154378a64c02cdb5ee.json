{"ast":null,"code":"import _defineProperty from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/components/AddEmployeeForms/JobDetails.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from 'react';\nimport { FormLabel, Radio, FormControlLabel } from \"@material-ui/core\";\nimport { TextField, RadioGroup } from 'formik-material-ui';\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomDatePicker from 'components/Pickers/DatePicker';\nimport { Formik, Field, Form } from 'formik';\nimport { StepContext, EmployeeContext, TitleContext } from 'views/Employee/Add';\nimport StepperNavigationButtons from 'components/Stepper/StepperNavigationButtons';\nimport * as Yup from 'yup';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { format } from 'date-fns';\nvar useStyles = makeStyles({\n  field: {\n    marginTop: \"32px\"\n  }\n});\nvar validationSchema = Yup.object().shape({\n  hireDate: Yup.date().nullable().min(new Date('01-01-1960'), 'Hire date must be greater than 01-01-1960').max(new Date(), 'Hire date is cannot greater than current day').required('Hire date is Required'),\n  salary: Yup.number().typeError('Salary must be number'),\n  currentSalary: Yup.number().typeError('Current salary must be number') // bond: Yup.number()\n  //   .required('Required'),\n\n});\n\nfunction JobDetails(props) {\n  var classes = useStyles();\n\n  var _useContext = useContext(EmployeeContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      employeeData = _useContext2[0],\n      setEmployeeData = _useContext2[1];\n\n  var _useContext3 = useContext(StepContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      activeStep = _useContext4[0],\n      setActiveStep = _useContext4[1];\n\n  var _useState = useState(new Set()),\n      _useState2 = _slicedToArray(_useState, 2),\n      skipped = _useState2[0],\n      setSkipped = _useState2[1];\n\n  var _useContext5 = useContext(TitleContext),\n      _useContext6 = _slicedToArray(_useContext5, 2),\n      title = _useContext6[0],\n      setTitle = _useContext6[1];\n\n  setTitle('Job Details');\n  console.log(\"raina\", employeeData);\n  return React.createElement(Formik, {\n    initialValues: employeeData,\n    validationSchema: validationSchema,\n    onSubmit: function onSubmit(values) {\n      //handleNext()\n      var newSkipped = skipped;\n\n      var isStepSkipped = function isStepSkipped(step) {\n        return skipped.has(step);\n      };\n\n      if (isStepSkipped(activeStep)) {\n        newSkipped = new Set(newSkipped.values());\n        newSkipped[\"delete\"](activeStep);\n      }\n\n      setActiveStep(function (prevActiveStep) {\n        return prevActiveStep + 1;\n      });\n      setSkipped(newSkipped);\n      setEmployeeData(_objectSpread({}, employeeData, {\n        hireDate: format(values.hireDate, 'yyyy-MM-dd'),\n        salary: values.salary,\n        currentSalary: values.currentSalary,\n        bond: values.bond\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, function (_ref) {\n    var values = _ref.values,\n        setFieldValue = _ref.setFieldValue;\n    console.log(\"values\", values);\n    return React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(GridContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      component: \"legend\",\n      style: {\n        textAlign: 'left'\n      },\n      className: classes.field,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Hire Date\"), React.createElement(Field, {\n      name: \"hireDate\",\n      component: CustomDatePicker // label=\"Date\"\n      ,\n      placeholder: \"Enter Hire Date\",\n      fullWidth: true,\n      format: \"dd-MM-yyyy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Field, {\n      label: \"Salary\",\n      className: classes.field // placeholder=\"Please Provide salary when you have joined\"\n      ,\n      helperText: \"Please provide salary when you have joined\",\n      id: \"salary\",\n      name: \"salary\",\n      component: TextField,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Field, {\n      label: \"Current Salary\",\n      className: classes.field,\n      id: \"currentSalary\",\n      helperText: \"Please provide your current salary\",\n      name: \"currentSalary\",\n      component: TextField,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      component: \"legend\",\n      style: {\n        textAlign: 'left'\n      },\n      className: classes.field,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Have you signed/agreed any bond?\"), React.createElement(Field, {\n      fullWidth: true,\n      id: \"bond\",\n      name: \"bond\",\n      component: RadioGroup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      id: \"bond\",\n      label: \"1 Year\",\n      control: React.createElement(Radio, {\n        id: \"bond\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }),\n      value: \"1 Year\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      id: \"bond\",\n      value: \"2 Year\",\n      control: React.createElement(Radio, {\n        id: \"bond\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }),\n      label: \"2 Year\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      id: \"bond\",\n      value: \"No\",\n      control: React.createElement(Radio, {\n        id: \"bond\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }),\n      label: \"No\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }))), React.createElement(GridItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(StepperNavigationButtons, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }))));\n  });\n}\n\nexport default JobDetails;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/components/AddEmployeeForms/JobDetails.js"],"names":["React","useState","useContext","FormLabel","Radio","FormControlLabel","TextField","RadioGroup","GridItem","GridContainer","CustomDatePicker","Formik","Field","Form","StepContext","EmployeeContext","TitleContext","StepperNavigationButtons","Yup","makeStyles","format","useStyles","field","marginTop","validationSchema","object","shape","hireDate","date","nullable","min","Date","max","required","salary","number","typeError","currentSalary","JobDetails","props","classes","employeeData","setEmployeeData","activeStep","setActiveStep","Set","skipped","setSkipped","title","setTitle","console","log","values","newSkipped","isStepSkipped","step","has","prevActiveStep","bond","setFieldValue","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { FormLabel, Radio, FormControlLabel } from \"@material-ui/core\";\nimport { TextField, RadioGroup } from 'formik-material-ui';\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomDatePicker from 'components/Pickers/DatePicker'\nimport { Formik, Field, Form } from 'formik'\nimport { StepContext, EmployeeContext, TitleContext } from 'views/Employee/Add'\nimport StepperNavigationButtons from 'components/Stepper/StepperNavigationButtons';\nimport * as Yup from 'yup'\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { format } from 'date-fns';\n\nconst useStyles = makeStyles({\n  field: {\n    marginTop: \"32px\"\n  }\n})\nconst validationSchema = Yup.object().shape({\n  hireDate: Yup.date().nullable()\n    .min(new Date('01-01-1960'), 'Hire date must be greater than 01-01-1960')\n    .max(new Date(), 'Hire date is cannot greater than current day')\n    .required('Hire date is Required'),\n  salary: Yup.number().typeError('Salary must be number'),\n  currentSalary: Yup.number().typeError('Current salary must be number')\n  // bond: Yup.number()\n  //   .required('Required'),\n\n});\nfunction JobDetails(props) {\n  const classes = useStyles()\n  const [employeeData, setEmployeeData] = useContext(EmployeeContext)\n  const [activeStep, setActiveStep] = useContext(StepContext);\n  const [skipped, setSkipped] = useState(new Set());\n  const [title, setTitle] = useContext(TitleContext);\n  setTitle('Job Details')\n  console.log(\"raina\",employeeData)\n  return (\n    <Formik\n      initialValues={employeeData}\n      validationSchema={validationSchema}\n      onSubmit={values => {\n        //handleNext()\n        let newSkipped = skipped;\n        const isStepSkipped = step => {\n          return skipped.has(step);\n        };\n        if (isStepSkipped(activeStep)) {\n          newSkipped = new Set(newSkipped.values());\n          newSkipped.delete(activeStep);\n        }\n        setActiveStep(prevActiveStep => prevActiveStep + 1);\n        setSkipped(newSkipped);\n        setEmployeeData({\n          ...employeeData,\n          hireDate: format(values.hireDate, 'yyyy-MM-dd'),\n          salary: values.salary,\n          currentSalary: values.currentSalary,\n          bond: values.bond\n        })\n      }}>\n        \n      {({ values, setFieldValue }) => {\n        console.log(\"values\",values)\n        return (\n        <Form>\n          <GridContainer>\n\n            <GridItem xs={12} sm={12} md={12}>\n              <FormLabel component=\"legend\" style={{ textAlign: 'left' }} className={classes.field}>Hire Date</FormLabel>\n              <Field\n                name=\"hireDate\"\n                component={CustomDatePicker}\n                // label=\"Date\"\n                placeholder=\"Enter Hire Date\"\n                fullWidth\n                format=\"dd-MM-yyyy\"\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <Field\n                label=\"Salary\"\n                className={classes.field}\n                // placeholder=\"Please Provide salary when you have joined\"\n                helperText=\"Please provide salary when you have joined\"\n                id=\"salary\"\n                name=\"salary\"\n                component={TextField}\n                fullWidth\n\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <Field\n                label=\"Current Salary\"\n                className={classes.field}\n                id=\"currentSalary\"\n                helperText=\"Please provide your current salary\"\n                name=\"currentSalary\"\n                component={TextField}\n                fullWidth\n              />\n            </GridItem>\n\n            <GridItem xs={12} sm={12} md={12}>\n              <FormLabel component=\"legend\" style={{ textAlign: 'left' }} className={classes.field}>Have you signed/agreed any bond?</FormLabel>\n              <Field fullWidth\n                id=\"bond\"\n                name=\"bond\"\n                component={RadioGroup}\n              >\n                <FormControlLabel\n                  id=\"bond\"\n                  label=\"1 Year\"\n                  control={<Radio id=\"bond\" />}\n                  value=\"1 Year\"\n                />\n                <FormControlLabel\n                  id=\"bond\"\n                  value=\"2 Year\"\n                  control={<Radio id=\"bond\" />}\n                  label=\"2 Year\"\n                />\n\n                <FormControlLabel\n                  id=\"bond\"\n                  value=\"No\"\n                  control={<Radio id=\"bond\" />}\n                  label=\"No\"\n                />\n              </Field>\n            </GridItem>\n\n            <GridItem>\n              <StepperNavigationButtons />\n            </GridItem>\n          </GridContainer>\n        </Form>\n      )\n    }}\n  \n    </Formik>\n  );\n}\n\nexport default JobDetails;"]},"metadata":{},"sourceType":"module"}