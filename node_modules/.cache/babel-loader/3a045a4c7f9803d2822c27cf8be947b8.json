{"ast":null,"code":"import _defineProperty from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/components/AddEmployeeForms/PermanentAddress.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from 'react';\nimport { FormLabel } from \"@material-ui/core\";\nimport { TextField } from 'formik-material-ui';\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Dropzone from 'react-dropzone';\nimport StepperNavigationButtons from 'components/Stepper/StepperNavigationButtons';\nimport { StepContext, EmployeeContext, TitleContext } from 'views/Employee/Add';\nimport * as Yup from 'yup';\nimport { Formik, Form, Field } from 'formik';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CustomDropzone from 'components/Dropzone/Dropzone';\nimport { PermanentAddressProofContext } from 'views/Employee/Add';\nimport Chip from '@material-ui/core/Chip';\nvar useStyles = makeStyles({\n  field: {\n    marginTop: \"32px\"\n  }\n});\nvar validationSchema = Yup.object().shape({\n  permanentStreet1: Yup.string().required('Required'),\n  permanentCity: Yup.string().required('Required') //  addressProof: Yup.file().required('Required')\n\n});\n\nfunction PermanentAddress(props) {\n  var classes = useStyles();\n\n  var _useContext = useContext(EmployeeContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      employeeData = _useContext2[0],\n      setEmployeeData = _useContext2[1];\n\n  var _useContext3 = useContext(StepContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      activeStep = _useContext4[0],\n      setActiveStep = _useContext4[1];\n\n  var _useState = useState(new Set()),\n      _useState2 = _slicedToArray(_useState, 2),\n      skipped = _useState2[0],\n      setSkipped = _useState2[1];\n\n  var _useContext5 = useContext(TitleContext),\n      _useContext6 = _slicedToArray(_useContext5, 2),\n      title = _useContext6[0],\n      setTitle = _useContext6[1];\n\n  var fileList = [];\n  var fileNameList = [];\n\n  var _useContext7 = useContext(PermanentAddressProofContext),\n      _useContext8 = _slicedToArray(_useContext7, 2),\n      permanentAddressProof = _useContext8[0],\n      setPermanentAddressProof = _useContext8[1];\n\n  setTitle('Permanent Address');\n  return React.createElement(Formik, {\n    initialValues: employeeData,\n    validationSchema: validationSchema,\n    onSubmit: function onSubmit(values) {\n      //handleNext()\n      var newSkipped = skipped;\n\n      var isStepSkipped = function isStepSkipped(step) {\n        return skipped.has(step);\n      };\n\n      if (isStepSkipped(activeStep)) {\n        newSkipped = new Set(newSkipped.values());\n        newSkipped[\"delete\"](activeStep);\n      }\n\n      setActiveStep(function (prevActiveStep) {\n        return prevActiveStep + 1;\n      });\n      setSkipped(newSkipped);\n      setEmployeeData(_objectSpread({}, employeeData, {\n        permanentStreet1: values.permanentStreet1,\n        permanentStreet2: values.permanentStreet2,\n        permanentCity: values.permanentCity,\n        permanentState: values.permanentState,\n        permanentCountry: values.permanentCountry,\n        permanentAddressProof: permanentAddressProof\n      }));\n    },\n    render: function render() {\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Street 1\",\n        id: \"permanentStreet1\",\n        name: \"permanentStreet1\",\n        className: classes.field,\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Street 2\",\n        id: \"permanentStreet2\",\n        name: \"permanentStreet2\",\n        className: classes.field,\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"City\",\n        id: \"permanentCity\",\n        name: \"permanentCity\",\n        className: classes.field,\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"State\",\n        id: \"permanentState\",\n        name: \"permanentState\",\n        className: classes.field,\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Country\",\n        id: \"permanentCountry\",\n        name: \"permanentCountry\",\n        className: classes.field,\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        style: {\n          textAlign: 'left'\n        },\n        className: classes.field,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Permanent Address Proof\"), React.createElement(CustomDropzone, {\n        list: permanentAddressProof,\n        callBack: function callBack(files) {\n          files.map(function (file) {\n            fileList.push(file);\n            fileNameList.push(file.name); // console.log(\"myfile\",file)\n          });\n          console.log(\"filelist\", fileList);\n          setPermanentAddressProof(fileList);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(StepperNavigationButtons, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  });\n}\n\nexport default PermanentAddress;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/components/AddEmployeeForms/PermanentAddress.js"],"names":["React","useState","useContext","FormLabel","TextField","GridItem","GridContainer","Dropzone","StepperNavigationButtons","StepContext","EmployeeContext","TitleContext","Yup","Formik","Form","Field","makeStyles","CustomDropzone","PermanentAddressProofContext","Chip","useStyles","field","marginTop","validationSchema","object","shape","permanentStreet1","string","required","permanentCity","PermanentAddress","props","classes","employeeData","setEmployeeData","activeStep","setActiveStep","Set","skipped","setSkipped","title","setTitle","fileList","fileNameList","permanentAddressProof","setPermanentAddressProof","values","newSkipped","isStepSkipped","step","has","prevActiveStep","permanentStreet2","permanentState","permanentCountry","textAlign","files","map","file","push","name","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { FormLabel } from \"@material-ui/core\";\nimport { TextField } from 'formik-material-ui';\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Dropzone from 'react-dropzone';\nimport StepperNavigationButtons from 'components/Stepper/StepperNavigationButtons';\nimport { StepContext, EmployeeContext, TitleContext } from 'views/Employee/Add'\nimport * as Yup from 'yup'\nimport { Formik, Form, Field } from 'formik'\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CustomDropzone from 'components/Dropzone/Dropzone'\nimport { PermanentAddressProofContext } from 'views/Employee/Add';\nimport Chip from '@material-ui/core/Chip';\nconst useStyles = makeStyles({\n  field: {\n    marginTop: \"32px\"\n  }\n})\n\nconst validationSchema = Yup.object().shape({\n  permanentStreet1: Yup.string()\n    .required('Required'),\n  permanentCity: Yup.string()\n    .required('Required'),\n  //  addressProof: Yup.file().required('Required')\n\n});\nfunction PermanentAddress(props) {\n  const classes = useStyles()\n  const [employeeData, setEmployeeData] = useContext(EmployeeContext)\n  const [activeStep, setActiveStep] = useContext(StepContext);\n  const [skipped, setSkipped] = useState(new Set());\n  const [title, setTitle] = useContext(TitleContext);\n  const fileList=[]\n  const fileNameList=[]\n  const [permanentAddressProof,setPermanentAddressProof]=useContext(PermanentAddressProofContext)\n  setTitle('Permanent Address')\n\n  return (\n\n    <Formik\n      initialValues={employeeData}\n      validationSchema={validationSchema}\n      onSubmit={values => {\n        //handleNext()\n        let newSkipped = skipped;\n        const isStepSkipped = step => {\n          return skipped.has(step);\n        };\n        if (isStepSkipped(activeStep)) {\n          newSkipped = new Set(newSkipped.values());\n          newSkipped.delete(activeStep);\n        }\n        setActiveStep(prevActiveStep => prevActiveStep + 1);\n        setSkipped(newSkipped);\n        setEmployeeData({\n          ...employeeData,\n          permanentStreet1: values.permanentStreet1,\n          permanentStreet2: values.permanentStreet2,\n          permanentCity: values.permanentCity,\n          permanentState: values.permanentState,\n          permanentCountry: values.permanentCountry,\n          permanentAddressProof: permanentAddressProof\n        })\n      }}\n      render={() => (\n        <Form>\n          <GridContainer>\n\n            <GridItem xs={12} sm={12} md={6}>\n              <Field\n                label=\"Street 1\"\n                id=\"permanentStreet1\"\n                name=\"permanentStreet1\"\n                className={classes.field}\n                component={TextField}\n                fullWidth\n              />\n            </GridItem>\n\n            <GridItem xs={12} sm={12} md={6}>\n              <Field\n                label=\"Street 2\"\n                id=\"permanentStreet2\"\n                name=\"permanentStreet2\"\n                className={classes.field}\n                component={TextField}\n                fullWidth\n              />\n            </GridItem>\n\n            <GridItem xs={12} sm={12} md={4}>\n              <Field\n                label=\"City\"\n                id=\"permanentCity\"\n                name=\"permanentCity\"\n                className={classes.field}\n                component={TextField}\n                fullWidth\n              />\n            </GridItem>\n\n            <GridItem xs={12} sm={12} md={4}>\n              <Field\n                label=\"State\"\n                id=\"permanentState\"\n                name=\"permanentState\"\n                className={classes.field}\n                component={TextField}\n                fullWidth\n              />\n            </GridItem>\n\n            <GridItem xs={12} sm={12} md={4}>\n              <Field\n                label=\"Country\"\n                id=\"permanentCountry\"\n                name=\"permanentCountry\"\n                className={classes.field}\n                component={TextField}\n                fullWidth\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={12}>\n              <FormLabel component=\"legend\" style={{ textAlign: 'left' }}\n                className={classes.field}>Permanent Address Proof</FormLabel>\n              <CustomDropzone list={permanentAddressProof} callBack={files=>{\n                \n                files.map(file=>{\n                  fileList.push(file)\n                  fileNameList.push(file.name)\n                  // console.log(\"myfile\",file)\n                })\n                console.log(\"filelist\",fileList)\n                setPermanentAddressProof(fileList)\n              }} />\n             \n              {/* <Field\n                // label=\"Image\"\n                id=\"permanentAddressProof\"\n                name=\"permanentAddressProof\"\n                component={CustomDropzone}\n                fullWidth\n              /> */}\n              {/* {permanentAddressProof?permanentAddressProof.map(a=>{\n                return(<div>\n               <Chip label={a.name} color=\"primary\" /><br/><br/></div>\n              //  onDelete={handleDelete}\n                )})\n              :\"\"} */}\n            </GridItem>\n            <GridItem xs={12} sm={12} md={12}>\n              <StepperNavigationButtons />\n            </GridItem>\n          </GridContainer>\n        </Form>\n      )}\n    >\n    </Formik>\n  );\n}\n\nexport default PermanentAddress;"]},"metadata":{},"sourceType":"module"}