{"ast":null,"code":"var _jsxFileName = \"/home/bipin/Downloads/team66/src/components/Dropzone/Dropzone.js\";\nimport { Box } from '@material-ui/core';\nimport { default as React, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone'; // import { fileIcon } from '../load-steps/UploadDocs';\n\nexport default function CustomDropzone(_ref) {\n  var callBack = _ref.callBack,\n      list = _ref.list;\n  var onDrop = useCallback(function (acceptedFiles) {\n    acceptedFiles.forEach(function (file) {\n      list.push(file);\n      callBack(list);\n    });\n  }, []);\n\n  var _useDropzone = useDropzone({\n    onDrop: onDrop\n  }),\n      getRootProps = _useDropzone.getRootProps,\n      getInputProps = _useDropzone.getInputProps,\n      isDragActive = _useDropzone.isDragActive;\n\n  var handleDelete = function handleDelete(file) {\n    var array = list; // make a separate copy of the array\n\n    console.log(\"1\", array);\n    var index = array.indexOf(file);\n    console.log(\"2\", index);\n\n    if (index !== -1) {\n      array.splice(index, 1);\n      list = array;\n      console.log(\"3\", list);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", Object.assign({}, getRootProps(), {\n    style: {\n      height: '100px',\n      minWidth: '300px',\n      backgroundColor: '#f1f1ff',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      border: '2px dotted #9830b0',\n      borderRadius: '5px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), isDragActive ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Drop the files here ...\") : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Drag 'n' drop files here\")));\n} // import React, { useState, useContext } from 'react';\n// import PropTypes from 'prop-types';\n// import Dropzone from 'react-dropzone';\n// // import {DropzoneArea} from 'material-ui-dropzone'\n// import Chip from '@material-ui/core/Chip';\n// import Typography from '@material-ui/core/Typography';\n// const dropzoneStyle = {\n//   width: \"100%\",\n//   height: \"auto\",\n//   borderWidth: 2,\n//   borderColor: \"rgb(102, 102, 102)\",\n//   borderStyle: \"dashed\",\n//   borderRadius: 5,\n// }\n// function CustomDropzone(props) {\n//   const { field, form,values, ...rest } = props;\n//   console.log(\"docs\",document)\n//   const error = form.touched[field.name] && form.errors[field.name];\n//   const [filename, setFilename] = useState('')\n//   const [file, setFile] = useState('')\n//   const handleDelete = () => {\n//     console.info('You clicked the delete icon.');\n//   };\n//   // function handleOnDrop(files, rejectedFiles) {\n//   //   const curfile = files[0]\n//   //   setFilename(files[0].name)\n//   //   form.setFieldValue(field.name, files[0].name)\n//   //   const reader = new FileReader()\n//   //   reader.addEventListener(\"load\", () => {\n//   //     setFile(reader.result)\n//   //   }, false)\n//   //   reader.readAsDataURL(curfile)\n//   // }\n//   function handleOnDrop(files)  {\n//     // Push all the axios request promise into a single array\n//     var data=[]\n//     var name=[]\n//     const uploaders = files.map(file => {\n//       // Initial FormData\n//       console.log(file)\n//       // const formData = new FormData();\n//       // formData.append(\"file\", file);\n//       data.push(file)\n//       name.push(file.name+\" \")\n//       form.setFieldValue(field.name, data)\n//     console.log(\"data\",data)\n//     }\n//     )\n//     // setFilename(document)\n//     setFilename(name)\n//     // console.log(\"uploaders\",uploaders)\n//   }\n//   return (\n//     <Dropzone \n//       onDrop={handleOnDrop}\n//       // onChange={(e) => form.setFieldValue(field.name, e)}\n//       multiple=\"true\">\n//       {({ getRootProps, getInputProps, isDragActive }) => (\n//         <section>\n//           <div {...getRootProps()}>\n//             <input {...getInputProps()} />\n//             <div><Typography variant=\"body1\" component=\"h2\">\n//             {isDragActive?\"Drop it like it's hot!\":\"Click me or drag a file to upload\"}\n// </Typography><br/>{filename===\"\" ? \"\" : filename.map(f=>{return (<div><Chip label={f} color=\"primary\" /><br/><br/></div>)})}\n// {/* onDelete={handleDelete} */}\n//           </div>\n//           </div>\n//         </section>\n//       )}\n//     </Dropzone>\n//   );\n// }\n// CustomDropzone.propTypes = {\n//   field: PropTypes.objectOf({\n//     name: PropTypes.string,\n//   }).isRequired,\n//   form: PropTypes.objectOf({\n//     touched: PropTypes.instanceOf(Array),\n//     errors: PropTypes.instanceOf(Array),\n//   }).isRequired,\n// };\n// export default CustomDropzone;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/components/Dropzone/Dropzone.js"],"names":["Box","default","React","useCallback","useDropzone","CustomDropzone","callBack","list","onDrop","acceptedFiles","forEach","file","push","getRootProps","getInputProps","isDragActive","handleDelete","array","console","log","index","indexOf","splice","height","minWidth","backgroundColor","display","alignItems","justifyContent","border","borderRadius"],"mappings":";AAAA,SAASA,GAAT,QAAoB,mBAApB;AACA,SAASC,OAAO,IAAIC,KAApB,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,SAASC,WAAT,QAA4B,gBAA5B,C,CACA;;AAEA,eAAe,SAASC,cAAT,OAA4C;AAAA,MAAlBC,QAAkB,QAAlBA,QAAkB;AAAA,MAARC,IAAQ,QAARA,IAAQ;AACzD,MAAMC,MAAM,GAAGL,WAAW,CAAC,UAAAM,aAAa,EAAI;AAC1CA,IAAAA,aAAa,CAACC,OAAd,CAAsB,UAAAC,IAAI,EAAI;AAC5BJ,MAAAA,IAAI,CAACK,IAAL,CAAUD,IAAV;AACAL,MAAAA,QAAQ,CAACC,IAAD,CAAR;AACD,KAHD;AAID,GALyB,EAKvB,EALuB,CAA1B;;AADyD,qBAOHH,WAAW,CAAC;AAAEI,IAAAA,MAAM,EAANA;AAAF,GAAD,CAPR;AAAA,MAOjDK,YAPiD,gBAOjDA,YAPiD;AAAA,MAOnCC,aAPmC,gBAOnCA,aAPmC;AAAA,MAOpBC,YAPoB,gBAOpBA,YAPoB;;AASvD,MAAMC,YAAY,GAAI,SAAhBA,YAAgB,CAAAL,IAAI,EAAI;AAC5B,QAAIM,KAAK,GAAGV,IAAZ,CAD4B,CACV;;AAClBW,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAgBF,KAAhB;AACA,QAAIG,KAAK,GAAGH,KAAK,CAACI,OAAN,CAAcV,IAAd,CAAZ;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAgBC,KAAhB;;AACA,QAAIA,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBH,MAAAA,KAAK,CAACK,MAAN,CAAaF,KAAb,EAAoB,CAApB;AACAb,MAAAA,IAAI,GAACU,KAAL;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAgBZ,IAAhB;AACD;AACF,GAVD;;AAYF,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6CACMM,YAAY,EADlB;AAEE,IAAA,KAAK,EAAE;AACLU,MAAAA,MAAM,EAAE,OADH;AAELC,MAAAA,QAAQ,EAAE,OAFL;AAGLC,MAAAA,eAAe,EAAE,SAHZ;AAILC,MAAAA,OAAO,EAAE,MAJJ;AAKLC,MAAAA,UAAU,EAAE,QALP;AAMLC,MAAAA,cAAc,EAAE,QANX;AAOLC,MAAAA,MAAM,EAAE,oBAPH;AAQLC,MAAAA,YAAY,EAAE;AART,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAaE,+CAAWhB,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAbF,EAcGC,YAAY,GACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADW,GAGX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAjBJ,CADF,CADF;AA2BD,C,CASD;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import { Box } from '@material-ui/core';\nimport { default as React, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\n// import { fileIcon } from '../load-steps/UploadDocs';\n\nexport default function CustomDropzone({ callBack, list }) {\n  const onDrop = useCallback(acceptedFiles => {\n    acceptedFiles.forEach(file => {\n      list.push(file);\n      callBack(list);\n    });\n  }, []);\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n\n    const handleDelete =  file => {\n      var array = list; // make a separate copy of the array\n      console.log(\"1\",array)\n      var index = array.indexOf(file)\n      console.log(\"2\",index)\n      if (index !== -1) {\n        array.splice(index, 1);\n        list=array\n        console.log(\"3\",list)\n      }\n    };\n\n  return (\n    <div>\n      <div\n        {...getRootProps()}\n        style={{\n          height: '100px',\n          minWidth: '300px',\n          backgroundColor: '#f1f1ff',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          border: '2px dotted #9830b0',\n          borderRadius: '5px',\n        }}\n      >\n        <input {...getInputProps()} />\n        {isDragActive ? (\n          <p>Drop the files here ...</p>\n        ) : (\n          <p>\n            Drag 'n' drop files here\n          </p>\n        )}\n      </div>\n     \n    </div>\n  );\n}\n\n\n\n\n\n\n\n\n// import React, { useState, useContext } from 'react';\n// import PropTypes from 'prop-types';\n// import Dropzone from 'react-dropzone';\n// // import {DropzoneArea} from 'material-ui-dropzone'\n// import Chip from '@material-ui/core/Chip';\n// import Typography from '@material-ui/core/Typography';\n\n// const dropzoneStyle = {\n//   width: \"100%\",\n//   height: \"auto\",\n//   borderWidth: 2,\n//   borderColor: \"rgb(102, 102, 102)\",\n//   borderStyle: \"dashed\",\n//   borderRadius: 5,\n// }\n// function CustomDropzone(props) {\n//   const { field, form,values, ...rest } = props;\n//   console.log(\"docs\",document)\n//   const error = form.touched[field.name] && form.errors[field.name];\n//   const [filename, setFilename] = useState('')\n//   const [file, setFile] = useState('')\n//   const handleDelete = () => {\n//     console.info('You clicked the delete icon.');\n//   };\n//   // function handleOnDrop(files, rejectedFiles) {\n//   //   const curfile = files[0]\n//   //   setFilename(files[0].name)\n//   //   form.setFieldValue(field.name, files[0].name)\n//   //   const reader = new FileReader()\n//   //   reader.addEventListener(\"load\", () => {\n//   //     setFile(reader.result)\n//   //   }, false)\n//   //   reader.readAsDataURL(curfile)\n//   // }\n//   function handleOnDrop(files)  {\n//     // Push all the axios request promise into a single array\n//     var data=[]\n//     var name=[]\n//     const uploaders = files.map(file => {\n//       // Initial FormData\n//       console.log(file)\n//       // const formData = new FormData();\n//       // formData.append(\"file\", file);\n//       data.push(file)\n//       name.push(file.name+\" \")\n//       form.setFieldValue(field.name, data)\n//     console.log(\"data\",data)\n//     }\n//     )\n//     // setFilename(document)\n//     setFilename(name)\n   \n//     // console.log(\"uploaders\",uploaders)\n    \n//   }\n  \n//   return (\n//     <Dropzone \n    \n//       onDrop={handleOnDrop}\n//       // onChange={(e) => form.setFieldValue(field.name, e)}\n//       multiple=\"true\">\n//       {({ getRootProps, getInputProps, isDragActive }) => (\n//         <section>\n//           <div {...getRootProps()}>\n//             <input {...getInputProps()} />\n            \n//             <div><Typography variant=\"body1\" component=\"h2\">\n//             {isDragActive?\"Drop it like it's hot!\":\"Click me or drag a file to upload\"}\n// </Typography><br/>{filename===\"\" ? \"\" : filename.map(f=>{return (<div><Chip label={f} color=\"primary\" /><br/><br/></div>)})}\n// {/* onDelete={handleDelete} */}\n//           </div>\n//           </div>\n//         </section>\n//       )}\n//     </Dropzone>\n//   );\n// }\n\n// CustomDropzone.propTypes = {\n//   field: PropTypes.objectOf({\n//     name: PropTypes.string,\n//   }).isRequired,\n//   form: PropTypes.objectOf({\n//     touched: PropTypes.instanceOf(Array),\n//     errors: PropTypes.instanceOf(Array),\n//   }).isRequired,\n// };\n\n// export default CustomDropzone;"]},"metadata":{},"sourceType":"module"}