{"ast":null,"code":"import _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/components/AddEmployeeForms/EmployeeInformation.js\";\nimport React, { useState, useContext } from 'react'; // import { makeStyles } from \"@material-ui/core/styles\";\n\nimport { FormLabel, RadioGroup, Radio, FormControlLabel, Button, TextField } from \"@material-ui/core\";\nimport { Field, Form } from \"formik\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { format } from \"date-fns\";\nimport { DatePicker, MuiPickersUtilsProvider } from \"material-ui-pickers\";\nimport { Formik } from 'formik';\nimport { EmployeeValidation } from 'lib/Yup/EmployeeValidation';\nimport { EmployeeContext } from 'views/Employee/AddEmployee';\nimport StepperNavigationButtons from 'views/Employee/StepperNavigationButtons';\nimport * as Yup from 'yup';\nimport { StepContext } from 'views/Employee/AddEmployee'; // const styles = {\n//     cardCategoryWhite: {\n//       color: \"rgba(255,255,255,.62)\",\n//       margin: \"0\",\n//       fontSize: \"14px\",\n//       marginTop: \"0\",\n//       marginBottom: \"0\"\n//     },\n//     cardTitleWhite: {\n//       color: \"#FFFFFF\",\n//       marginTop: \"0px\",\n//       minHeight: \"auto\",\n//       fontWeight: \"300\",\n//       fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n//       marginBottom: \"3px\",\n//       textDecoration: \"none\"\n//     }\n//   };\n\nvar ValidationSchema = Yup.object().shape({\n  fullName: Yup.string().min(2, 'too Short!').required('Required') // preferredName: Yup.string(),\n  // birthDate: Yup.date()\n  //   .required('Required'),\n\n});\nvar initialValues2 = {\n  fullname: '',\n  preferredName: '',\n  birthDate: '',\n  gender: '',\n  maritalStatus: ''\n}; // const useStyles = makeStyles(styles);\n\nfunction EmployeeInformation(props) {\n  var _this = this;\n\n  var _useContext = useContext(EmployeeContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      employeeData = _useContext2[0],\n      setEmployeeData = _useContext2[1];\n\n  var _useContext3 = useContext(StepContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      activeStep = _useContext4[0],\n      setActiveStep = _useContext4[1];\n\n  var _useState = useState(new Set()),\n      _useState2 = _slicedToArray(_useState, 2),\n      skipped = _useState2[0],\n      setSkipped = _useState2[1]; // const classes = useStyles();\n\n\n  var _useState3 = useState(new Date()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      birthDate = _useState4[0],\n      setBirthDate = _useState4[1]; // console.log(employeeData)\n\n\n  function handleDateChange(date) {\n    // setBirthDate(format(date, 'dd/MM/yyyy'))\n    setBirthDate(date);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    initialValues: {\n      name: '',\n      description: '',\n      price: '',\n      category: 'veg',\n      expirydate: new Date(),\n      image: null\n    },\n    validationSchema: validationSchema,\n    onSubmit: function onSubmit(values) {\n      _this.setState({\n        name: values.name,\n        description: values.description,\n        price: values.price,\n        category: values.category\n      });\n\n      var data = {\n        name: _this.state.name,\n        description: _this.state.description,\n        price: _this.state.price,\n        category: _this.state.category,\n        expirydate: _this.state.expirydate,\n        image: _this.state.image\n      };\n\n      _this.props.fn(data);\n\n      alert(\"Data has been inserted\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, function (_ref) {\n    var errors = _ref.errors,\n        values = _ref.values,\n        touched = _ref.touched,\n        handleChange = _ref.handleChange,\n        handleSubmit = _ref.handleSubmit;\n    return React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      style: {\n        backgroundColor: '#00acc1'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Add Food\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Add your food\")), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Field, {\n      fullWidth: true,\n      id: \"name\",\n      name: \"name\",\n      label: \"Name\",\n      component: TextField,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Field, {\n      fullWidth: true,\n      id: \"price\",\n      name: \"price\",\n      type: \"number\",\n      component: TextField,\n      label: \"Price\",\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Field, {\n      fullWidth: true,\n      id: \"description\",\n      name: \"description\",\n      component: TextField,\n      label: \"Description\",\n      multiline: true,\n      rows: \"3\",\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      component: \"legend\",\n      style: {\n        textAlign: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Category\"), React.createElement(Field, {\n      fullWidth: true,\n      id: \"category\" // aria-label=\"Category\"\n      ,\n      value: values.category,\n      error: errors.category,\n      component: RadioGroup,\n      row: true,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      id: \"category\",\n      label: \"Veg\",\n      control: React.createElement(Radio, {\n        id: \"category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }),\n      value: \"veg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      id: \"category\",\n      value: \"nonveg\",\n      control: React.createElement(Radio, {\n        id: \"category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }),\n      label: \"Nonveg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      id: \"category\",\n      value: \"jain\",\n      control: React.createElement(Radio, {\n        id: \"category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }),\n      label: \"Jain\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      component: \"legend\",\n      style: {\n        textAlign: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Image\"), React.createElement(Dropzone, {\n      onDrop: _this.handleOnDrop,\n      multiple: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, function (_ref2) {\n      var getRootProps = _ref2.getRootProps,\n          getInputProps = _ref2.getInputProps;\n      return React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"div\", Object.assign({}, getRootProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, _this.state.imagename === \"\" ? \"Drag and drop some images here, or click to select image\" : _this.state.imagename)));\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      component: \"legend\",\n      style: {\n        textAlign: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"Expiry Date\"), React.createElement(MuiPickersUtilsProvider, {\n      utils: DateFnsUtils,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(DatePicker, {\n      name: \"expirydate\",\n      id: \"expirydate\",\n      fullWidth: true,\n      value: _this.state.expirydate,\n      onChange: _this.handleDateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      style: {\n        align: 'left',\n        backgroundColor: '#00acc1'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, \"Add\"))))));\n  }));\n}\n\nexport default EmployeeInformation;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/components/AddEmployeeForms/EmployeeInformation.js"],"names":["React","useState","useContext","FormLabel","RadioGroup","Radio","FormControlLabel","Button","TextField","Field","Form","GridItem","GridContainer","CustomInput","DateFnsUtils","format","DatePicker","MuiPickersUtilsProvider","Formik","EmployeeValidation","EmployeeContext","StepperNavigationButtons","Yup","StepContext","ValidationSchema","object","shape","fullName","string","min","required","initialValues2","fullname","preferredName","birthDate","gender","maritalStatus","EmployeeInformation","props","employeeData","setEmployeeData","activeStep","setActiveStep","Set","skipped","setSkipped","Date","setBirthDate","handleDateChange","date","name","description","price","category","expirydate","image","validationSchema","values","setState","data","state","fn","alert","errors","touched","handleChange","handleSubmit","backgroundColor","textAlign","handleOnDrop","getRootProps","getInputProps","imagename","align"],"mappings":"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","sourcesContent":["import React ,{useState, useContext} from 'react';\n// import { makeStyles } from \"@material-ui/core/styles\";\nimport { FormLabel,RadioGroup, Radio, FormControlLabel, Button, TextField } from \"@material-ui/core\";\nimport { Field, Form } from \"formik\"\n// core components\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { format } from \"date-fns\"\nimport { DatePicker, MuiPickersUtilsProvider} from \"material-ui-pickers\";\nimport { Formik } from 'formik'\nimport {EmployeeValidation} from 'lib/Yup/EmployeeValidation'  \nimport {EmployeeContext} from 'views/Employee/AddEmployee'\nimport  StepperNavigationButtons  from 'views/Employee/StepperNavigationButtons';\nimport * as Yup from 'yup'\nimport {StepContext} from 'views/Employee/AddEmployee'\n// const styles = {\n//     cardCategoryWhite: {\n//       color: \"rgba(255,255,255,.62)\",\n//       margin: \"0\",\n//       fontSize: \"14px\",\n//       marginTop: \"0\",\n//       marginBottom: \"0\"\n//     },\n//     cardTitleWhite: {\n//       color: \"#FFFFFF\",\n//       marginTop: \"0px\",\n//       minHeight: \"auto\",\n//       fontWeight: \"300\",\n//       fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n//       marginBottom: \"3px\",\n//       textDecoration: \"none\"\n//     }\n//   };\nconst ValidationSchema = Yup.object().shape({\n  fullName: Yup.string()\n    .min(2,'too Short!')\n    .required('Required'),\n  // preferredName: Yup.string(),\n  // birthDate: Yup.date()\n  //   .required('Required'),\n   \n}); \nconst initialValues2={\n  fullname:'',\npreferredName:'',\nbirthDate:'',\ngender:'',\nmaritalStatus:'',}\n// const useStyles = makeStyles(styles);\nfunction EmployeeInformation(props) {\n    const [employeeData,setEmployeeData]=useContext(EmployeeContext)\n    const [activeStep, setActiveStep] = useContext(StepContext);\n    const [skipped, setSkipped] = useState(new Set());\n    // const classes = useStyles();\n    const [birthDate,setBirthDate]=useState(new Date())\n    // console.log(employeeData)\n    function handleDateChange(date){\n        // setBirthDate(format(date, 'dd/MM/yyyy'))\n        setBirthDate(date)\n    }\n    return (\n        <div>\n          <Formik\n        initialValues={{\n          name:'',\n          description:'',\n          price:'',\n          category:'veg',\n          expirydate:new Date(),\n          image:null\n        }}\n        validationSchema={validationSchema}\n        onSubmit={values => {\n          this.setState({\n            name:values.name,\n            description:values.description,\n            price:values.price,\n            category:values.category\n\n          })\n          const data={\n            name:this.state.name,\n            description:this.state.description,\n            price:this.state.price,\n            category:this.state.category,\n            expirydate:this.state.expirydate,\n            image:this.state.image\n      }\n        this.props.fn(data)\n        alert(\"Data has been inserted\")\n        }} >\n         \n        {({ errors,values, touched ,handleChange, handleSubmit}) => (\n         \n          <Form>\n            <Card>\n                <CardHeader style={{backgroundColor:'#00acc1'}}><h3>Add Food</h3><p>Add your food</p></CardHeader>\n                <CardBody>\n            <Grid container spacing={3}>\n              \n              <Grid item xs={12} sm={12} md={7}>\n                {/* <Paper> */}\n                  <Field fullWidth\n                    id=\"name\"\n                    name=\"name\"\n                    label=\"Name\"\n                    component={TextField}\n                    margin=\"normal\"\n                  />\n              {/* </Paper> */}\n              </Grid>\n              <Grid item xs={12} sm={12} md={5}>\n                {/* <Paper> */}\n                  <Field fullWidth\n                    id=\"price\"\n                    name=\"price\"\n                    type=\"number\"\n                    component={TextField}\n                    label=\"Price\"\n                    margin=\"normal\"\n                />\n                {/* </Paper> */}\n              </Grid>\n              <Grid item xs={12} sm={12} md={12}>\n                  {/* <Paper> */}\n                    <Field fullWidth\n                      id=\"description\"\n                      name=\"description\"\n                      component={TextField}\n                      label=\"Description\"\n                      multiline\n                      rows=\"3\"\n                      margin=\"normal\"\n                  />\n                  {/* </Paper> */}\n              </Grid>\n              \n              <Grid item xs={12} sm={12} md={4}>\n                {/* <Paper> */}\n                  <FormLabel component=\"legend\" style={{textAlign:'left'}}>Category</FormLabel>\n                    <Field fullWidth\n                      id=\"category\"\n                      // aria-label=\"Category\"\n                      value={values.category}\n                      error={errors.category}\n                      component={RadioGroup}\n                      row\n                      onChange={handleChange}\n                    >\n                    <FormControlLabel\n                        id=\"category\"\n                        label=\"Veg\"\n                        control={<Radio id=\"category\" />}\n                        value=\"veg\"\n                      />\n                      <FormControlLabel\n                        id=\"category\"\n                        value=\"nonveg\"\n                        control={<Radio id=\"category\"/>}\n                        label=\"Nonveg\"\n                      />\n                      <FormControlLabel\n                        id=\"category\"\n                        value=\"jain\"\n                        control={<Radio id=\"category\"/>}\n                        label=\"Jain\"\n                      />\n                    </Field>\n                {/* </Paper> */}\n              </Grid>\n              \n              <Grid item xs={12} sm={12} md={5}>\n              {/* <FormLabel component=\"legend\" style={{textAlign:'left'}}>Image</FormLabel>\n             <Input type=\"file\" refs=\"file\" onChange={this.fileChangedHandler}/> */}\n                {/* <ImageDropzone fn={this.onImageDropzone}/>\n                <img src={this.state.image}/> */}\n                     <FormLabel component=\"legend\" style={{textAlign:'left'}}>Image</FormLabel>\n                <Dropzone onDrop={this.handleOnDrop} multiple=\"true\">\n                    \n                {({getRootProps, getInputProps}) => (\n    <section>\n      <div {...getRootProps()}>\n        <input {...getInputProps()} />\n        <p>{this.state.imagename===\"\"?\"Drag and drop some images here, or click to select image\":this.state.imagename}</p>\n        \n      </div>\n    </section>\n  )}\n  </Dropzone>\n  {/* <img src={this.state.image}/> */}\n                </Grid>\n              <Grid item xs={12} sm={12} md={3}>\n                {/* <Paper> */}\n                  {/* <Field\n                    id=\"expirydate\"\n                    name=\"expirydate\"\n                    component={DatePicker}\n                    label=\"Expiry Date\"\n                    margin=\"normal\"\n                /> */}\n                {/* <KeyboardDatePicker\n          disableToolbar\n          variant=\"inline\"\n          format=\"MM/dd/yyyy\"\n          margin=\"normal\"\n          id=\"date-picker-inline\"\n          label=\"Date picker inline\"\n        //   value={selectedDate}\n        //   onChange={handleDateChange}\n        //   KeyboardButtonProps={{\n        //     'aria-label': 'change date',\n        //   }}\n        /> */}\n         <FormLabel component=\"legend\" style={{textAlign:'left'}}>Expiry Date</FormLabel>\n         <MuiPickersUtilsProvider utils={DateFnsUtils} >\n            <DatePicker name=\"expirydate\" id=\"expirydate\" fullWidth value={this.state.expirydate} onChange={this.handleDateChange} />\n        </MuiPickersUtilsProvider>\n                {/* </Paper> */}\n              </Grid>\n              \n              {/* <Grid item xs={12}>\n                <Paper>\n                  <FormLabel>Hobbies</FormLabel>\n                    <FormControlLabel\n                      id=\"hobbies\"\n                      value=\"h1\"\n                      control={\n                        <Checkbox\n                          onChange={handleChange}\n                          value=\"h1\"\n                          id=\"hobbies\"\n                        />\n                      }\n                      label=\"h1\"\n                    />\n                  <FormControlLabel\n                  id=\"hobbies\"\n                  value=\"h2\"\n                  control={\n                    <Checkbox\n                      id=\"hobbies\"\n                      onChange={handleChange}\n                      value=\"h2\"\n                    />\n                  }\n                  label=\"h2\"\n                />\n              </Paper>\n            </Grid> */}\n            {/* <Grid item xs={12}>\n              <Paper>\n                <FormControlLabel\n                  control={\n                    <Switch onChange={handleChange} value=\"true\" id=\"getmessage\"/>\n                  }\n                  label=\"Would you like to receive message from us?\"\n                />\n              </Paper>\n            </Grid> */}\n            <Grid item xs={12} sm={12} md={3}>\n              {/* <Paper> */}\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\"  style={{align:'left',backgroundColor:'#00acc1'}}>\n                  Add\n                </Button>\n              {/* </Paper> */}\n            </Grid>\n          </Grid>\n\n          </CardBody>\n            </Card>\n        </Form>\n      )}\n     \n      </Formik>\n              </div>\n    );\n}\n\nexport default EmployeeInformation;"]},"metadata":{},"sourceType":"module"}