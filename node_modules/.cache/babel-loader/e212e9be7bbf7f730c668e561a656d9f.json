{"ast":null,"code":"import _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/components/AddEmployeeForms/IdProof.js\";\nimport React, { useState, useContext } from 'react';\nimport { FormLabel, RadioGroup, Radio, FormControlLabel, Button, TextField } from \"@material-ui/core\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { DatePicker, MuiPickersUtilsProvider } from \"material-ui-pickers\";\nimport { Formik, Field, Form } from 'formik';\nimport { EmployeeContext } from 'views/Employee/AddEmployee';\nimport StepperNavigationButtons from 'views/Employee/StepperNavigationButtons';\nimport * as Yup from 'yup';\nimport { StepContext } from 'views/Employee/AddEmployee';\nimport Dropzone from 'react-dropzone'; // const styles = {\n//     cardCategoryWhite: {\n//       color: \"rgba(255,255,255,.62)\",\n//       margin: \"0\",\n//       fontSize: \"14px\",\n//       marginTop: \"0\",\n//       marginBottom: \"0\"\n//     },\n//     cardTitleWhite: {\n//       color: \"#FFFFFF\",\n//       marginTop: \"0px\",\n//       minHeight: \"auto\",\n//       fontWeight: \"300\",\n//       fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n//       marginBottom: \"3px\",\n//       textDecoration: \"none\"\n//     }\n//   };\n// const useStyles = makeStyles(styles);\n\nfunction IdProof(props) {\n  // const classes = useStyles();\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      filename = _useState2[0],\n      setFilename = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      file = _useState4[0],\n      setFile = _useState4[1];\n\n  function handleOnDrop(files, rejectedFiles) {\n    var curfile = files[0];\n    console.log(files[0].name);\n    setFilename(files[0].name); // this.setState({imagename:files[0].name})\n\n    var reader = new FileReader();\n    reader.addEventListener(\"load\", function () {\n      console.log(\"ondrop called\");\n      setFile(reader.result); // this.setState({\n      //       image:reader.result\n      //   })\n    }, false);\n    reader.readAsDataURL(curfile);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    component: \"legend\",\n    style: {\n      textAlign: 'left'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Upload ID Proof\"), React.createElement(Dropzone, {\n    onDrop: handleOnDrop,\n    multiple: \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, function (_ref) {\n    var getRootProps = _ref.getRootProps,\n        getInputProps = _ref.getInputProps;\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", Object.assign({}, getRootProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, filename === \"\" ? \"Add File\" : filename)));\n  }))));\n}\n\nexport default IdProof;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/components/AddEmployeeForms/IdProof.js"],"names":["React","useState","useContext","FormLabel","RadioGroup","Radio","FormControlLabel","Button","TextField","GridItem","GridContainer","DateFnsUtils","DatePicker","MuiPickersUtilsProvider","Formik","Field","Form","EmployeeContext","StepperNavigationButtons","Yup","StepContext","Dropzone","IdProof","props","filename","setFilename","file","setFile","handleOnDrop","files","rejectedFiles","curfile","console","log","name","reader","FileReader","addEventListener","result","readAsDataURL","textAlign","getRootProps","getInputProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AACA,SAASC,SAAT,EAAmBC,UAAnB,EAA+BC,KAA/B,EAAsCC,gBAAtC,EAAwDC,MAAxD,EAAgEC,SAAhE,QAAiF,mBAAjF,C,CACA;;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SAASC,UAAT,EAAqBC,uBAArB,QAAmD,qBAAnD;AACA,SAASC,MAAT,EAAkBC,KAAlB,EAAyBC,IAAzB,QAAoC,QAApC;AACA,SAAQC,eAAR,QAA8B,4BAA9B;AACA,OAAQC,wBAAR,MAAuC,yCAAvC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAAQC,WAAR,QAA0B,4BAA1B;AACA,OAAOC,QAAP,MAAqB,gBAArB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAEpB;AAFoB,kBAGStB,QAAQ,CAAC,EAAD,CAHjB;AAAA;AAAA,MAGbuB,QAHa;AAAA,MAGJC,WAHI;;AAAA,mBAICxB,QAAQ,CAAC,EAAD,CAJT;AAAA;AAAA,MAIbyB,IAJa;AAAA,MAIRC,OAJQ;;AAMpB,WAASC,YAAT,CAAsBC,KAAtB,EAA4BC,aAA5B,EAA0C;AACtC,QAAMC,OAAO,GAACF,KAAK,CAAC,CAAD,CAAnB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAAC,CAAD,CAAL,CAASK,IAArB;AACAT,IAAAA,WAAW,CAACI,KAAK,CAAC,CAAD,CAAL,CAASK,IAAV,CAAX,CAHsC,CAKtC;;AACA,QAAMC,MAAM,GAAC,IAAIC,UAAJ,EAAb;AACAD,IAAAA,MAAM,CAACE,gBAAP,CAAwB,MAAxB,EAA+B,YAAI;AAC/BL,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAEJN,MAAAA,OAAO,CAACQ,MAAM,CAACG,MAAR,CAAP,CAHmC,CAI/B;AACA;AACA;AACF,KAPF,EAOG,KAPH;AAQMH,IAAAA,MAAM,CAACI,aAAP,CAAqBR,OAArB;AACT;;AACD,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASM,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE,EAAd;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAA0B,IAAA,EAAE,EAAE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,QAArB;AAA8B,IAAA,KAAK,EAAE;AAACS,MAAAA,SAAS,EAAC;AAAX,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADA,EAEA,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAEZ,YAAlB;AAAgC,IAAA,QAAQ,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEC;AAAA,QAAEa,YAAF,QAAEA,YAAF;AAAA,QAAgBC,aAAhB,QAAgBA,aAAhB;AAAA,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,6CAASD,YAAY,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACI,+CAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIlB,QAAQ,KAAG,EAAX,GAAc,UAAd,GAAyBA,QAA7B,CAFJ,CADA,CADH;AAAA,GAFD,CAFA,CAHF,CATN,CADJ;AA4DH;;AAED,eAAeF,OAAf","sourcesContent":["import React ,{useState, useContext} from 'react';\nimport { FormLabel,RadioGroup, Radio, FormControlLabel, Button, TextField } from \"@material-ui/core\";\n// core components\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { DatePicker, MuiPickersUtilsProvider} from \"material-ui-pickers\";\nimport { Formik , Field, Form} from 'formik'\nimport {EmployeeContext} from 'views/Employee/AddEmployee'\nimport  StepperNavigationButtons  from 'views/Employee/StepperNavigationButtons';\nimport * as Yup from 'yup'\nimport {StepContext} from 'views/Employee/AddEmployee'\nimport Dropzone from 'react-dropzone';\n\n// const styles = {\n//     cardCategoryWhite: {\n//       color: \"rgba(255,255,255,.62)\",\n//       margin: \"0\",\n//       fontSize: \"14px\",\n//       marginTop: \"0\",\n//       marginBottom: \"0\"\n//     },\n//     cardTitleWhite: {\n//       color: \"#FFFFFF\",\n//       marginTop: \"0px\",\n//       minHeight: \"auto\",\n//       fontWeight: \"300\",\n//       fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n//       marginBottom: \"3px\",\n//       textDecoration: \"none\"\n//     }\n//   };\n  \n// const useStyles = makeStyles(styles);\n\nfunction IdProof(props) {\n\n    // const classes = useStyles();\n    const [filename,setFilename]=useState('')\n    const [file,setFile]=useState('')\n  \n    function handleOnDrop(files,rejectedFiles){\n        const curfile=files[0]\n        console.log(files[0].name)\n        setFilename(files[0].name)\n        \n        // this.setState({imagename:files[0].name})\n        const reader=new FileReader()\n        reader.addEventListener(\"load\",()=>{\n            console.log(\"ondrop called\")\n            \n        setFile(reader.result)\n            // this.setState({\n            //       image:reader.result\n            //   })\n         },false)\n              reader.readAsDataURL(curfile)\n    }\n    return (\n        <div>\n        {/* <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"primary\">\n              <h4 className={classes.cardTitleWhite}>Add Employee</h4>\n              <p className={classes.cardCategoryWhite}>Id Proof</p>\n            </CardHeader>\n            <CardBody> */}\n              <GridContainer>\n                \n                \n                <GridItem xs={12} sm={12} md={12}>\n                <FormLabel component=\"legend\" style={{textAlign:'left'}}>Upload ID Proof</FormLabel>\n                <Dropzone onDrop={handleOnDrop} multiple=\"true\">\n                    \n                {({getRootProps, getInputProps}) => (\n                    <section>\n                    <div {...getRootProps()}>\n                        <input {...getInputProps()} />\n                        <p>{filename===\"\"?\"Add File\":filename}</p>\n                        \n                    </div>\n                    </section>\n                )}\n                </Dropzone>\n                </GridItem>\n              </GridContainer>\n              \n            {/* </CardBody>\n            <CardFooter>\n              <Button color=\"primary\">Update Profile</Button>\n            </CardFooter> \n          </Card>\n        </GridItem> */}\n        {/* <GridItem xs={12} sm={12} md={4}>\n          <Card profile>\n            <CardAvatar profile>\n              <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                <img src={avatar} alt=\"...\" />\n              </a>\n            </CardAvatar>\n            <CardBody profile>\n              <h6 className={classes.cardCategory}>CEO / CO-FOUNDER</h6>\n              <h4 className={classes.cardTitle}>Alec Thompson</h4>\n              <p className={classes.description}>\n                Don{\"'\"}t be scared of the truth because we need to restart the\n                human foundation in truth And I love you like Kanye loves Kanye\n                I love Rick Owens’ bed design but the back is...\n              </p>\n              <Button color=\"primary\" round>\n                Follow\n              </Button>\n            </CardBody>\n          </Card>\n        </GridItem> */}\n      {/* </GridContainer> */}\n    </div>\n    );\n}\n\nexport default IdProof;"]},"metadata":{},"sourceType":"module"}