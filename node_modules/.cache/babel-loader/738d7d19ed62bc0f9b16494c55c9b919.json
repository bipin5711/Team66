{"ast":null,"code":"import _toConsumableArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/components/AddEmployeeForms/PermanentAddress.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from 'react';\nimport { FormLabel } from \"@material-ui/core\";\nimport { TextField } from 'formik-material-ui';\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport StepperNavigationButtons from 'components/Stepper/StepperNavigationButtons';\nimport { StepContext, EmployeeContext, TitleContext } from 'views/Employee/Add';\nimport * as Yup from 'yup';\nimport { Formik, Form, Field } from 'formik';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CustomDropzone from 'components/Dropzone/Dropzone';\nimport api, { toFormData } from '../../lib/axios';\nimport { clearConfigCache } from 'prettier';\nvar useStyles = makeStyles({\n  field: {\n    marginTop: \"32px\"\n  }\n});\nvar validationSchema = Yup.object().shape({\n  permanentAddress: Yup.object().shape({\n    street1: Yup.string().required('Required'),\n    city: Yup.string().required('Required')\n  })\n});\n\nfunction PermanentAddress(props) {\n  var classes = useStyles();\n\n  var _useContext = useContext(EmployeeContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      employeeData = _useContext2[0],\n      setEmployeeData = _useContext2[1];\n\n  console.log(\"permanent\", employeeData.employeeAttachments);\n\n  var _useContext3 = useContext(StepContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      activeStep = _useContext4[0],\n      setActiveStep = _useContext4[1];\n\n  var _useState = useState(new Set()),\n      _useState2 = _slicedToArray(_useState, 2),\n      skipped = _useState2[0],\n      setSkipped = _useState2[1];\n\n  var _useContext5 = useContext(TitleContext),\n      _useContext6 = _slicedToArray(_useContext5, 2),\n      title = _useContext6[0],\n      setTitle = _useContext6[1];\n\n  var fileList = [];\n  var fileAttachments = [];\n  setTitle('Permanent Address');\n  console.log(\"permanent\", employeeData);\n  return React.createElement(Formik, {\n    initialValues: employeeData // validationSchema={validationSchema}\n    ,\n    onSubmit: function onSubmit(values) {\n      //handleNext()\n      var newSkipped = skipped;\n\n      var isStepSkipped = function isStepSkipped(step) {\n        return skipped.has(step);\n      };\n\n      if (isStepSkipped(activeStep)) {\n        newSkipped = new Set(newSkipped.values());\n        newSkipped[\"delete\"](activeStep);\n      }\n\n      setActiveStep(function (prevActiveStep) {\n        return prevActiveStep + 1;\n      });\n      setSkipped(newSkipped);\n      setEmployeeData(_objectSpread({}, employeeData, {\n        permanentAddress: {\n          id: 0,\n          street1: values.permanentAddress.street1,\n          street2: values.permanentAddress.street2,\n          city: values.permanentAddress.city,\n          state: values.permanentAddress.state,\n          country: values.permanentAddress.country\n        },\n        employeeAttachments: _toConsumableArray(values.employeeAttachments) // [...employeeData.employeeAttachments,...values.employeeAttachments]\n\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, function (_ref) {\n    var values = _ref.values,\n        setFieldValue = _ref.setFieldValue;\n    console.log(\"values\", values);\n    return React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(GridContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Field, {\n      label: \"Street 1\",\n      id: \"permanentAddress.street1\",\n      name: \"permanentAddress.street1\",\n      className: classes.field,\n      component: TextField,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Field, {\n      label: \"Street 2\",\n      id: \"permanentAddress.street2\",\n      name: \"permanentAddress.street2\",\n      className: classes.field,\n      component: TextField,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Field, {\n      label: \"City\",\n      id: \"permanentAddress.city\",\n      name: \"permanentAddress.city\",\n      className: classes.field,\n      component: TextField,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })), React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Field, {\n      label: \"State\",\n      id: \"permanentAddress.state\",\n      name: \"permanentAddress.state\",\n      className: classes.field,\n      component: TextField,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Field, {\n      label: \"Country\",\n      id: \"permanentAddress.country\",\n      name: \"permanentAddress.country\",\n      className: classes.field,\n      component: TextField,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })), React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      component: \"legend\",\n      style: {\n        textAlign: 'left'\n      },\n      className: classes.field,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Permanent Address Proof\"), React.createElement(CustomDropzone, {\n      list: values.employeeAttachments ? values.employeeAttachments.filter(function (a) {\n        return a.type === \"Permanent Address Proof\";\n      }) : [] //  attachments={values.attachments ? values.attachments : []} \n      ,\n      callBack: function callBack(files) {\n        console.log(\"ggg\", employeeData.employeeAttachments);\n        var exist = 0;\n        files.map(function (file) {\n          fileList.map(function (existingFile) {\n            if (existingFile.name === file.name && existingFile.size === file.size) {\n              exist = 1; // alert(\"File has already selected\")\n            }\n          });\n\n          if (exist === 0) {\n            fileList.push(file);\n            var test = {\n              file: file,\n              type: 'Permanent Address Proof'\n            };\n            var fileData = toFormData(test);\n            api.post('employees/file', fileData).then(function (res) {\n              console.log(\"pnew\", values);\n              console.log(\"pnew1\", employeeData.employeeAttachments);\n              setFieldValue('employeeAttachments', [].concat(_toConsumableArray(values.employeeAttachments), [res.data.data]));\n            })[\"catch\"](function (err) {\n              console.log(\"err\", err);\n            });\n          } else {\n            exist = 0;\n          }\n        }); // setFieldValue('employeeAttachments',[...values.employeeAttachments])\n        // setFieldValue('permanentAddressProof', fileList)\n        // console.log(\"ppp\",employeeData.employeeAttachments)\n        // setFieldValue('employeeAttachments',[...values.employeeAttachments])\n        // setFieldValue('permanentAddressProof', fileList)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })), React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(StepperNavigationButtons, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }))));\n  });\n}\n\nexport default PermanentAddress;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/components/AddEmployeeForms/PermanentAddress.js"],"names":["React","useState","useContext","FormLabel","TextField","GridItem","GridContainer","StepperNavigationButtons","StepContext","EmployeeContext","TitleContext","Yup","Formik","Form","Field","makeStyles","CustomDropzone","api","toFormData","clearConfigCache","useStyles","field","marginTop","validationSchema","object","shape","permanentAddress","street1","string","required","city","PermanentAddress","props","classes","employeeData","setEmployeeData","console","log","employeeAttachments","activeStep","setActiveStep","Set","skipped","setSkipped","title","setTitle","fileList","fileAttachments","values","newSkipped","isStepSkipped","step","has","prevActiveStep","id","street2","state","country","setFieldValue","textAlign","filter","a","type","files","exist","map","file","existingFile","name","size","push","test","fileData","post","then","res","data","err"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { FormLabel } from \"@material-ui/core\";\nimport { TextField } from 'formik-material-ui';\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport StepperNavigationButtons from 'components/Stepper/StepperNavigationButtons';\nimport { StepContext, EmployeeContext, TitleContext } from 'views/Employee/Add'\nimport * as Yup from 'yup'\nimport { Formik, Form, Field } from 'formik'\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CustomDropzone from 'components/Dropzone/Dropzone'\nimport api, { toFormData } from '../../lib/axios';\nimport { clearConfigCache } from 'prettier';\nconst useStyles = makeStyles({\n  field: {\n    marginTop: \"32px\"\n  }\n})\n\nconst validationSchema = Yup.object().shape({\n  permanentAddress: Yup.object().shape(\n    {\n      street1: Yup.string().required('Required'),\n      city: Yup.string().required('Required')\n    }\n  )\n});\n\nfunction PermanentAddress(props) {\n  const classes = useStyles()\n  const [employeeData, setEmployeeData] = useContext(EmployeeContext)\n  console.log(\"permanent\",employeeData.employeeAttachments)\n  const [activeStep, setActiveStep] = useContext(StepContext);\n  const [skipped, setSkipped] = useState(new Set());\n  const [title, setTitle] = useContext(TitleContext);\n  const fileList = []\n  const fileAttachments = []\n  setTitle('Permanent Address')\n  console.log(\"permanent\",employeeData)\n  return (\n\n    <Formik\n      initialValues={employeeData}\n      // validationSchema={validationSchema}\n      onSubmit={values => {\n        //handleNext()\n        let newSkipped = skipped;\n        const isStepSkipped = step => {\n          return skipped.has(step);\n        };\n        if (isStepSkipped(activeStep)) {\n          newSkipped = new Set(newSkipped.values());\n          newSkipped.delete(activeStep);\n        }\n        setActiveStep(prevActiveStep => prevActiveStep + 1);\n        setSkipped(newSkipped);\n        setEmployeeData({\n          ...employeeData,\n          permanentAddress: {\n            id:0,\n            street1: values.permanentAddress.street1,\n            street2: values.permanentAddress.street2,\n            city: values.permanentAddress.city,\n            state: values.permanentAddress.state,\n            country: values.permanentAddress.country\n          },\n          employeeAttachments:\n          [...values.employeeAttachments]\n          // [...employeeData.employeeAttachments,...values.employeeAttachments]\n        })\n       \n      }}\n      >\n      {({ values, setFieldValue }) => {\n        console.log(\"values\",values)\n        return (\n          <Form>\n            <GridContainer>\n\n              <GridItem xs={12} sm={12} md={6}>\n                <Field\n                  label=\"Street 1\"\n                  id=\"permanentAddress.street1\"\n                  name=\"permanentAddress.street1\"\n                  className={classes.field}\n                  component={TextField}\n                  fullWidth\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={6}>\n                <Field\n                  label=\"Street 2\"\n                  id=\"permanentAddress.street2\"\n                  name=\"permanentAddress.street2\"\n                  className={classes.field}\n                  component={TextField}\n                  fullWidth\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={4}>\n                <Field\n                  label=\"City\"\n                  id=\"permanentAddress.city\"\n                  name=\"permanentAddress.city\"\n                  className={classes.field}\n                  component={TextField}\n                  fullWidth\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={4}>\n                <Field\n                  label=\"State\"\n                  id=\"permanentAddress.state\"\n                  name=\"permanentAddress.state\"\n                  className={classes.field}\n                  component={TextField}\n                  fullWidth\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={4}>\n                <Field\n                  label=\"Country\"\n                  id=\"permanentAddress.country\"\n                  name=\"permanentAddress.country\"\n                  className={classes.field}\n                  component={TextField}\n                  fullWidth\n                />\n              </GridItem>\n              <GridItem xs={12} sm={12} md={12}>\n                <FormLabel component=\"legend\" style={{ textAlign: 'left' }}\n                  className={classes.field}>Permanent Address Proof</FormLabel>\n                <CustomDropzone list={values.employeeAttachments ? values.employeeAttachments.filter(a=>a.type===\"Permanent Address Proof\") : []} \n                //  attachments={values.attachments ? values.attachments : []} \n                \n                callBack={files => {\n                  console.log(\"ggg\",employeeData.employeeAttachments)\n                  var exist = 0\n                  files.map(file => {\n                    fileList.map(existingFile => {\n                      if (existingFile.name === file.name && existingFile.size === file.size) {\n                        exist = 1\n                        // alert(\"File has already selected\")\n                      }\n                    })\n                    if (exist === 0) {\n                      fileList.push(file)\n                      let test = {\n                        file,\n                        type: 'Permanent Address Proof'\n                      }\n                      const fileData = toFormData(test)\n                      api.post('employees/file', fileData).then(res => {\n                       \n                      console.log(\"pnew\",values)\n                      console.log(\"pnew1\",employeeData.employeeAttachments)\n                      \n                        setFieldValue('employeeAttachments',[...values.employeeAttachments,res.data.data])\n                       \n  \n                      }).catch(err => { console.log(\"err\", err) })\n                    }\n                    else {\n                      exist = 0;\n                    }\n                  })\n                  // setFieldValue('employeeAttachments',[...values.employeeAttachments])\n                // setFieldValue('permanentAddressProof', fileList)\n// console.log(\"ppp\",employeeData.employeeAttachments)\n                // setFieldValue('employeeAttachments',[...values.employeeAttachments])\n                  // setFieldValue('permanentAddressProof', fileList)\n                }} />\n              </GridItem>\n              <GridItem xs={12} sm={12} md={12}>\n                <StepperNavigationButtons />\n              </GridItem>\n            </GridContainer>\n          </Form>\n        )\n      }}\n    \n    </Formik>\n  );\n}\n\nexport default PermanentAddress;"]},"metadata":{},"sourceType":"module"}