{"ast":null,"code":"import _defineProperty from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/components/AddEmployeeForms/Feedback.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from 'react';\nimport { TextField } from 'formik-material-ui';\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport { Formik, Field, Form } from 'formik';\nimport { StepContext, EmployeeContext, TitleContext } from 'views/Employee/Add';\nimport StepperNavigationButtons from 'components/Stepper/StepperNavigationButtons';\nimport { FormLabel } from '@material-ui/core';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport api from '../../lib/axios';\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nvar useStyles = makeStyles({\n  field: {\n    marginTop: \"32px\"\n  }\n});\n\nfunction Feedback(props) {\n  var classes = useStyles();\n\n  var _useContext = useContext(EmployeeContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      employeeData = _useContext2[0],\n      setEmployeeData = _useContext2[1];\n\n  var _useContext3 = useContext(StepContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      activeStep = _useContext4[0],\n      setActiveStep = _useContext4[1];\n\n  var _useState = useState(new Set()),\n      _useState2 = _slicedToArray(_useState, 2),\n      skipped = _useState2[0],\n      setSkipped = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      addSnackbar = _useState4[0],\n      setAddSnackbar = _useState4[1];\n\n  var _useContext5 = useContext(TitleContext),\n      _useContext6 = _slicedToArray(_useContext5, 2),\n      title = _useContext6[0],\n      setTitle = _useContext6[1];\n\n  setTitle('Feedback');\n  return React.createElement(Formik, {\n    initialValues: employeeData // validationSchema={ValidationSchema}\n    ,\n    onSubmit: function onSubmit(values) {\n      //handleNext()\n      var newSkipped = skipped;\n\n      var isStepSkipped = function isStepSkipped(step) {\n        return skipped.has(step);\n      };\n\n      if (isStepSkipped(activeStep)) {\n        newSkipped = new Set(newSkipped.values());\n        newSkipped[\"delete\"](activeStep);\n      }\n\n      setActiveStep(function (prevActiveStep) {\n        return prevActiveStep + 1;\n      });\n      setSkipped(newSkipped);\n      setEmployeeData(_objectSpread({}, employeeData, {\n        feedback: values.feedback\n      }));\n      api.post('employees', employeeData).then(function (res) {\n        alert(\"Success\");\n        setAddSnackbar(true);\n      })[\"catch\"](function (err) {\n        alert(\"Failed\", err);\n        console.log(\"err\", err);\n      });\n    },\n    render: function render() {\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        style: {\n          textAlign: 'left'\n        },\n        className: classes.field,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Feedback\"), React.createElement(Field, {\n        label: \"Any feedback to improve the company\",\n        id: \"feedback\",\n        name: \"feedback\",\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(StepperNavigationButtons, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Snackbar, {\n    place: \"bl\",\n    color: \"primary\",\n    icon: InfoIcon,\n    message: \"Employee Added Successfully!\",\n    open: addSnackbar,\n    closeNotification: function closeNotification() {\n      return setAddSnackbar(false);\n    },\n    close: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }));\n}\n\nexport default Feedback;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/components/AddEmployeeForms/Feedback.js"],"names":["React","useState","useContext","TextField","GridItem","GridContainer","Formik","Field","Form","StepContext","EmployeeContext","TitleContext","StepperNavigationButtons","FormLabel","makeStyles","api","SnackbarContent","Snackbar","useStyles","field","marginTop","Feedback","props","classes","employeeData","setEmployeeData","activeStep","setActiveStep","Set","skipped","setSkipped","addSnackbar","setAddSnackbar","title","setTitle","values","newSkipped","isStepSkipped","step","has","prevActiveStep","feedback","post","then","res","alert","err","console","log","textAlign","InfoIcon"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { TextField } from 'formik-material-ui'; \nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport { Formik, Field, Form } from 'formik'\nimport { StepContext, EmployeeContext, TitleContext } from 'views/Employee/Add'\nimport StepperNavigationButtons from 'components/Stepper/StepperNavigationButtons';\nimport { FormLabel } from '@material-ui/core'\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport api from '../../lib/axios';\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\n\nconst useStyles=makeStyles({\n  field:{\n    marginTop: \"32px\"\n  }\n})\n\nfunction Feedback(props) {\n\n  const classes=useStyles()\n  const [employeeData, setEmployeeData] = useContext(EmployeeContext)\n  const [activeStep, setActiveStep] = useContext(StepContext);\n  const [skipped, setSkipped] = useState(new Set());\n  const [addSnackbar,setAddSnackbar]=useState(false)\n  const [title, setTitle] = useContext(TitleContext);\n  setTitle('Feedback')\n\n  return (\n      <Formik\n        initialValues={employeeData}\n        // validationSchema={ValidationSchema}\n        onSubmit={values => {\n          //handleNext()\n          let newSkipped = skipped;\n          const isStepSkipped = step => {\n            return skipped.has(step);\n          };\n          if (isStepSkipped(activeStep)) {\n            newSkipped = new Set(newSkipped.values());\n            newSkipped.delete(activeStep);\n          }\n          setActiveStep(prevActiveStep => prevActiveStep + 1);\n          setSkipped(newSkipped);\n          setEmployeeData({\n            ...employeeData,\n            feedback: values.feedback,\n          })\n          api.post('employees', employeeData).then(res => {\n            alert(\"Success\")\n           setAddSnackbar(true)\n\n          }).catch(err => { \n            alert(\"Failed\",err)\n            console.log(\"err\", err) })\n\n        }}\n        render={() => (\n          <Form>\n            <GridContainer>\n\n              <GridItem xs={12} sm={12} md={12}>\n              <FormLabel component=\"legend\" style={{ textAlign: 'left'}} className={classes.field}>Feedback</FormLabel>\n                <Field\n                  label=\"Any feedback to improve the company\"\n                  id=\"feedback\"\n                  name=\"feedback\"\n                  component={TextField}\n                  fullWidth\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={12}>\n                <StepperNavigationButtons />\n              </GridItem>\n\n            </GridContainer>\n          </Form>\n        )}\n      >\n        <Snackbar\n              place=\"bl\"\n              color=\"primary\"\n              icon={InfoIcon}\n              message=\"Employee Added Successfully!\"\n              open={addSnackbar}\n              closeNotification={() => setAddSnackbar(false)}\n              close\n            />\n      </Formik>\n  );\n}\n\nexport default Feedback;"]},"metadata":{},"sourceType":"module"}