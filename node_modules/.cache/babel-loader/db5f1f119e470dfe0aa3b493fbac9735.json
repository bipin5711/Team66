{"ast":null,"code":"import _defineProperty from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/components/AddEmployeeForms/CurrentAddress.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from 'react';\nimport { FormLabel } from \"@material-ui/core\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport StepperNavigationButtons from 'components/Stepper/StepperNavigationButtons';\nimport { StepContext, EmployeeContext, TitleContext } from 'views/Employee/Add';\nimport * as Yup from 'yup';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CustomDropzone from 'components/Dropzone/Dropzone';\nimport { CurrentAddressProofContext } from 'views/Employee/Add';\nimport Chip from '@material-ui/core/Chip';\nvar useStyles = makeStyles({\n  field: {\n    marginTop: \"32px\"\n  }\n});\nvar validationSchema = Yup.object().shape({\n  currentStreet1: Yup.string().required('Required'),\n  currentCity: Yup.string().required('Required') //  addressProof: Yup.string().required('Required')\n\n});\n\nfunction CurrentAddress(props) {\n  var classes = useStyles();\n\n  var _useContext = useContext(EmployeeContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      employeeData = _useContext2[0],\n      setEmployeeData = _useContext2[1];\n\n  var _useContext3 = useContext(StepContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      activeStep = _useContext4[0],\n      setActiveStep = _useContext4[1];\n\n  var _useContext5 = useContext(CurrentAddressProofContext),\n      _useContext6 = _slicedToArray(_useContext5, 2),\n      currentAddressProof = _useContext6[0],\n      setCurrentAddressProof = _useContext6[1];\n\n  var _useState = useState(new Set()),\n      _useState2 = _slicedToArray(_useState, 2),\n      skipped = _useState2[0],\n      setSkipped = _useState2[1];\n\n  var _useContext7 = useContext(TitleContext),\n      _useContext8 = _slicedToArray(_useContext7, 2),\n      title = _useContext8[0],\n      setTitle = _useContext8[1];\n\n  var fileList = [];\n  setTitle('Current Address');\n\n  var handleDelete = function handleDelete() {\n    console.info('You clicked the delete icon.');\n  };\n\n  return React.createElement(Formik, {\n    initialValues: employeeData,\n    validationSchema: validationSchema,\n    onSubmit: function onSubmit(values) {\n      //handleNext()\n      var newSkipped = skipped;\n\n      var isStepSkipped = function isStepSkipped(step) {\n        return skipped.has(step);\n      };\n\n      if (isStepSkipped(activeStep)) {\n        newSkipped = new Set(newSkipped.values());\n        newSkipped[\"delete\"](activeStep);\n      }\n\n      setActiveStep(function (prevActiveStep) {\n        return prevActiveStep + 1;\n      });\n      setSkipped(newSkipped);\n      setEmployeeData(_objectSpread({}, employeeData, {\n        currentStreet1: values.currentStreet1,\n        currentStreet2: values.currentStreet2,\n        currentCity: values.currentCity,\n        currentState: values.currentState,\n        currentCountry: values.currentCountry,\n        currentAddressProof: currentAddressProof\n      }));\n    },\n    render: function render() {\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, function (prop1) {\n        console.log(prop1);\n        return React.createElement(GridContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(GridItem, {\n          xs: 12,\n          sm: 12,\n          md: 6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(Field, {\n          label: \"Street 1\",\n          id: \"currentStreet1\",\n          name: \"currentStreet1\",\n          className: classes.field,\n          component: TextField,\n          fullWidth: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        })), React.createElement(GridItem, {\n          xs: 12,\n          sm: 12,\n          md: 6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(Field, {\n          label: \"Street 2\",\n          id: \"currentStreet2\",\n          name: \"currentStreet2\",\n          className: classes.field,\n          component: TextField,\n          fullWidth: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        })), React.createElement(GridItem, {\n          xs: 12,\n          sm: 12,\n          md: 4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(Field, {\n          label: \"City\",\n          id: \"currentCity\",\n          name: \"currentCity\",\n          className: classes.field,\n          component: TextField,\n          fullWidth: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        })), React.createElement(GridItem, {\n          xs: 12,\n          sm: 12,\n          md: 4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(Field, {\n          label: \"State\",\n          id: \"currentState\",\n          name: \"currentState\",\n          className: classes.field,\n          component: TextField,\n          fullWidth: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        })), React.createElement(GridItem, {\n          xs: 12,\n          sm: 12,\n          md: 4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, React.createElement(Field, {\n          label: \"Country\",\n          id: \"currentCountry\",\n          name: \"currentCountry\",\n          className: classes.field,\n          component: TextField,\n          fullWidth: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        })), React.createElement(GridItem, {\n          xs: 12,\n          sm: 12,\n          md: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, React.createElement(FormLabel, {\n          component: \"legend\",\n          style: {\n            textAlign: 'left'\n          },\n          className: classes.field,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, \"Current Address Proof\"), React.createElement(CustomDropzone, {\n          list: currentAddressProof,\n          callBack: function callBack(files) {\n            var exist = 0;\n            files.map(function (file) {\n              fileList.map(function (existingFile) {\n                if (existingFile.name === file.name && existingFile.size === file.size) {\n                  exist = 1;\n                  alert(\"File has already selected\");\n                }\n              });\n\n              if (exist === 0) {\n                fileList.push(file);\n              } else {\n                exist = 0;\n              }\n            });\n            console.log(\"filelist\", fileList);\n            setCurrentAddressProof(fileList);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        })), React.createElement(GridItem, {\n          xs: 12,\n          sm: 12,\n          md: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, React.createElement(StepperNavigationButtons, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        })));\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  });\n}\n\nexport default CurrentAddress;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/components/AddEmployeeForms/CurrentAddress.js"],"names":["React","useState","useContext","FormLabel","GridItem","GridContainer","StepperNavigationButtons","StepContext","EmployeeContext","TitleContext","Yup","Formik","Form","Field","ErrorMessage","TextField","makeStyles","CustomDropzone","CurrentAddressProofContext","Chip","useStyles","field","marginTop","validationSchema","object","shape","currentStreet1","string","required","currentCity","CurrentAddress","props","classes","employeeData","setEmployeeData","activeStep","setActiveStep","currentAddressProof","setCurrentAddressProof","Set","skipped","setSkipped","title","setTitle","fileList","handleDelete","console","info","values","newSkipped","isStepSkipped","step","has","prevActiveStep","currentStreet2","currentState","currentCountry","prop1","log","textAlign","files","exist","map","file","existingFile","name","size","alert","push"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { FormLabel } from \"@material-ui/core\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport StepperNavigationButtons from 'components/Stepper/StepperNavigationButtons';\nimport { StepContext, EmployeeContext, TitleContext } from 'views/Employee/Add'\nimport * as Yup from 'yup'\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\nimport { TextField } from 'formik-material-ui'; \nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CustomDropzone from 'components/Dropzone/Dropzone'\nimport { CurrentAddressProofContext } from 'views/Employee/Add';\nimport Chip from '@material-ui/core/Chip';\n\nconst useStyles=makeStyles({\n  field:{\n    marginTop: \"32px\"\n  }\n})\n\nconst validationSchema = Yup.object().shape({\n  currentStreet1:Yup.string().required('Required'),\n  currentCity:Yup.string().required('Required')\n  //  addressProof: Yup.string().required('Required')\n\n});\n\nfunction CurrentAddress(props) {\n\n  const classes=useStyles()\n  const [employeeData, setEmployeeData] = useContext(EmployeeContext)\n  const [activeStep, setActiveStep] = useContext(StepContext);\n  const [currentAddressProof,setCurrentAddressProof]=useContext(CurrentAddressProofContext)\n  const [skipped, setSkipped] = useState(new Set());\n  const [title, setTitle] = useContext(TitleContext);\n  const fileList=[]\n  setTitle('Current Address')\n  const handleDelete = () => {\n    console.info('You clicked the delete icon.');\n  };\n\n  return (\n      <Formik\n        initialValues={employeeData}\n        validationSchema={validationSchema}\n        onSubmit={values => {\n          //handleNext()\n          let newSkipped = skipped;\n          const isStepSkipped = step => {\n            return skipped.has(step);\n          };\n          if (isStepSkipped(activeStep)) {\n            newSkipped = new Set(newSkipped.values());\n            newSkipped.delete(activeStep);\n          }\n          setActiveStep(prevActiveStep => prevActiveStep + 1);\n          setSkipped(newSkipped);\n          setEmployeeData({\n            ...employeeData,\n            currentStreet1: values.currentStreet1,\n            currentStreet2: values.currentStreet2,\n            currentCity: values.currentCity,\n            currentState: values.currentState,\n            currentCountry: values.currentCountry,\n            currentAddressProof: currentAddressProof\n          })\n        }}\n        render={() => (\n          <Form>\n            {(prop1)=>{\n              console.log(prop1)\n              return(<GridContainer>\n\n              <GridItem xs={12} sm={12} md={6}>\n                <Field\n                  label=\"Street 1\"\n                  id=\"currentStreet1\"\n                  name=\"currentStreet1\"\n                  className={classes.field}\n                  component={TextField}\n                  fullWidth\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={6}>\n                <Field\n                  label=\"Street 2\"\n                  id=\"currentStreet2\"\n                  name=\"currentStreet2\"\n                  className={classes.field}\n                  component={TextField}\n                  fullWidth\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={4}>\n                <Field\n                  label=\"City\"\n                  id=\"currentCity\"\n                  name=\"currentCity\"\n                  className={classes.field}\n                  component={TextField}\n                  fullWidth\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={4}>\n                <Field\n                  label=\"State\"\n                  id=\"currentState\"\n                  name=\"currentState\"\n                  className={classes.field}\n                  component={TextField}\n                  fullWidth\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={4}>\n                <Field\n                  label=\"Country\"\n                  id=\"currentCountry\"\n                  name=\"currentCountry\"\n                  className={classes.field}\n                  component={TextField}\n                  fullWidth\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={12}>\n                <FormLabel component=\"legend\" style={{ textAlign: 'left' }} className={classes.field}>Current Address Proof</FormLabel>\n                <CustomDropzone list={currentAddressProof} callBack={files=>{\n                  var exist=0\n                  files.map(file=>{\n                    fileList.map(existingFile=>{\n                      if(existingFile.name===file.name && existingFile.size===file.size){\n                        exist=1\n                        alert(\"File has already selected\")\n                      }\n                    })\n                    if(exist===0){\n                    fileList.push(file)\n                    }\n                    else{\n                    exist=0;\n                    }\n                  })\n                  console.log(\"filelist\",fileList)\n                  setCurrentAddressProof(fileList)\n\n                }} />\n                {/* <Field\n                  // label=\"Image\"\n                  id=\"currentAddressProof\"\n                  name=\"currentAddressProof\"\n                  component={CustomDropzone}\n                  fullWidth\n                />\n             {currentAddressProof?currentAddressProof.map(a=>{\n                return(<div>\n               <Chip label={a.name} color=\"primary\" /><br/><br/></div>\n              //  onDelete={handleDelete}\n                )})\n              :\"\"} */}\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={12}>\n                <StepperNavigationButtons />\n              </GridItem>\n\n            </GridContainer>)}}\n          </Form>\n        )}\n      > \n    </Formik>\n  );\n}\n\nexport default CurrentAddress;"]},"metadata":{},"sourceType":"module"}