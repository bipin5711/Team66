{"ast":null,"code":"import _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/views/Employee/Edit.js\";\nimport React, { createContext, useState, useEffect } from 'react';\nimport EmployeeInformation from 'components/AddEmployeeForms/EmployeeInformation';\nimport CurrentAddress from 'components/AddEmployeeForms/CurrentAddress';\nimport PermanentAddress from 'components/AddEmployeeForms/PermanentAddress';\nimport EmergencyContact from 'components/AddEmployeeForms/EmergencyContact';\nimport JobDetails from 'components/AddEmployeeForms/JobDetails';\nimport IdProof from 'components/AddEmployeeForms/IdProof';\nimport EmployeePicture from 'components/AddEmployeeForms/EmployeePicture';\nimport Feedback from 'components/AddEmployeeForms/Feedback';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport { makeStyles, withStyles } from '@material-ui/core/styles'; // import { useDispatch } from 'react-redux'\n// import Snackbar from \"components/Snackbar/Snackbar.js\";\n// import InfoIcon from '@material-ui/icons/Info';\n\nimport { Link, useParams } from 'react-router-dom';\nimport api, { url } from '../../lib/axios';\nimport { EmployeeContext, StepContext, TitleContext, SkipContext } from 'views/Employee/Add';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: '100%'\n    },\n    button: {\n      marginRight: theme.spacing(1)\n    },\n    instructions: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1)\n    },\n    cardCategoryWhite: {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\"\n    },\n    cardTitleWhite: {\n      color: \"#FFFFFF\",\n      // marginBottom: \"3px\",\n      // marginTop: \"0px\",\n      marginTop: \"10px\",\n      marginBottom: \"10px\",\n      minHeight: \"auto\",\n      fontWeight: \"300\",\n      fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n      textDecoration: \"none\"\n    }\n  };\n}); // const QontoConnector = withStyles({\n//   alternativeLabel: {\n//     // top: 10,\n//     left: 'calc(-50% + 16px)',\n//     right: 'calc(50% + 16px)',\n//   },\n//   active: {\n//     '& $line': {\n//       borderColor: '#9830b0',\n//     },\n//   },\n//   completed: {\n//     '& $line': {\n//       borderColor: '#9830b0'\n//     },\n//   },\n//   line: {\n//     borderColor: '#999999',\n//     borderTopWidth: 3,\n//     borderRadius: 1,\n//   },\n// })(StepConnector);\n// const useQontoStepIconStyles = makeStyles({\n//   root: {\n//     color: 'red',\n//     display: 'flex',\n//     height: 22,\n//     alignItems: 'center',\n//   },\n//   active: {\n//     color: '#9830b0',\n//   },\n//   circle: {\n//     width: 25,\n//     height: 25,\n//     borderRadius: '50%',\n//     backgroundColor: '#eaeaf0',\n//   },\n//   completed: {\n//     color: '#ffffff',\n//     backgroundColor:'#9830b0',\n//     width: 25,\n//     height: 25,\n//     borderRadius: '50%',\n//     zIndex: 1,\n//     fontSize: 18,\n//   },\n// });\n// function QontoStepIcon(props) {\n//   const classes = useQontoStepIconStyles();\n//   const { active, completed } = props;\n//   return (\n//     <div>\n//       {completed ? <Check className={classes.completed} /> : <div className={classes.circle} />}\n//     </div>\n//   );\n// }\n\nfunction getSteps() {\n  // return ['', '', '', '', '', '', '', ''];\n  return ['Employee Information', 'Current Address', 'Permanent Address', 'Emergency Contact', 'Job Details', 'Id Proof', 'Employee Picture', 'Feedback'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return React.createElement(EmployeeInformation, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      });\n\n    case 1:\n      return React.createElement(CurrentAddress, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      });\n\n    case 2:\n      return React.createElement(PermanentAddress, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      });\n\n    case 3:\n      return React.createElement(EmergencyContact, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      });\n\n    case 4:\n      return React.createElement(JobDetails, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      });\n\n    case 5:\n      return React.createElement(IdProof, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      });\n\n    case 6:\n      return React.createElement(EmployeePicture, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      });\n\n    case 7:\n      return React.createElement(Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      });\n\n    default:\n      return 'Unknown step';\n  }\n} // export const EmployeeContext = createContext()\n// export const TitleContext = createContext()\n// // export const EmployeeDataContext = createContext()\n// export const StepContext = createContext()\n// export const SkipContext = createContext()\n\n\nvar getAttachments = function getAttachments(attachments) {\n  var currentAddressAttachments = [];\n  var permanentAddressAttachments = [];\n  var idProofAttachments = [];\n  var pictureAttachments = []; // let miscellaneousAttachments = [];\n\n  for (var index = 0; index < attachments.length; index++) {\n    console.log(attachments[index].type);\n\n    switch (attachments[index].type) {\n      case 'Current Address Proof':\n        currentAddressAttachments = [].concat(_toConsumableArray(currentAddressAttachments), [attachments[index]]);\n        break;\n\n      case 'Permanent Adddress Proof':\n        permanentAddressAttachments = [].concat(_toConsumableArray(permanentAddressAttachments), [attachments[index]]);\n        break;\n\n      case 'Id Proof':\n        idProofAttachments = [].concat(_toConsumableArray(idProofAttachments), [attachments[index]]);\n        break;\n\n      case 'Picture':\n        pictureAttachments = [].concat(_toConsumableArray(pictureAttachments), [attachments[index]]);\n        break;\n    }\n  }\n\n  return {\n    currentAddressAttachments: currentAddressAttachments,\n    permanentAddressAttachments: permanentAddressAttachments,\n    idProofAttachments: idProofAttachments,\n    pictureAttachments: pictureAttachments\n  };\n};\n\nfunction EditEmployee(props) {\n  var classes = useStyles();\n\n  var _useParams = useParams(),\n      id = _useParams.id; // const dispatch = useDispatch();\n\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      employeeData = _useState4[0],\n      setEmployeeData = _useState4[1];\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      activeStep = _React$useState2[0],\n      setActiveStep = _React$useState2[1];\n\n  var _React$useState3 = React.useState(new Set()),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      skipped = _React$useState4[0],\n      setSkipped = _React$useState4[1];\n\n  var steps = getSteps();\n\n  var _getAttachments = getAttachments(employeeData.employeeAttachments),\n      domesticAttachments = _getAttachments.domesticAttachments,\n      inlandDreyageCompanyAndCostAttachment = _getAttachments.inlandDreyageCompanyAndCostAttachment,\n      oceanFreightBookingCompanyAndCostAttachment = _getAttachments.oceanFreightBookingCompanyAndCostAttachment,\n      exportsAttachments = _getAttachments.exportsAttachments,\n      miscellaneousAttachments = _getAttachments.miscellaneousAttachments; // const [addSnackbar,setAddSnackbar]=useState(false)\n  // useEffect(() => {\n  //   // dispatch({ type:'ADD_EMPLOYEE',payload:employeeData })\n  // // console.log(employeeData)\n  //   // dispatch(addEmployee(employeeData))\n  //   // console.log(\"team66\",employeeData)\n  //   activeStep === steps.length?setAddSnackbar(true):setAddSnackbar(false)\n  // })\n\n\n  var handleGet = function handleGet(id) {\n    api.get(\"employees/\".concat(id)).then(function (res) {\n      console.log(\"Edit\", res.data.data);\n      setEmployeeData({\n        birthDate: res.data.data.birthDate,\n        bond: res.data.data.bond,\n        currentAddress: {\n          city: res.data.data.currentAddress.city,\n          country: res.data.data.currentAddress.country,\n          id: res.data.data.currentAddress.id,\n          state: res.data.data.currentAddress.state,\n          street1: res.data.data.currentAddress.street1,\n          street2: res.data.data.currentAddress.street2\n        },\n        currentSalary: res.data.data.currentSalary,\n        emergencyContacts: [{\n          id: res.data.data.emergencyContacts.id,\n          mobile: res.data.data.emergencyContacts.mobile,\n          name: res.data.data.emergencyContacts.name,\n          relationship: res.data.data.emergencyContacts.relationship\n        }, {\n          id: res.data.data.emergencyContacts.id,\n          mobile: res.data.data.emergencyContacts.mobile,\n          name: res.data.data.emergencyContacts.name,\n          relationship: res.data.data.emergencyContacts.relationship\n        }],\n        // employeeAttachments: [\n        //   // {\n        //   //   fileName: ,\n        //     // id: ,\n        //   //   originalFileName: ,\n        //   //   size: ,\n        //   //   type: \n        //   // }\n        // ],\n        feedback: res.data.data.feedback,\n        gender: res.data.data.gender,\n        id: res.data.data.id,\n        hireDate: res.data.data.hireDate,\n        maritalStatus: res.data.data.maritalStatus,\n        name: res.data.data.name,\n        permanentAddress: {\n          city: res.data.data.permanentAddress.city,\n          country: res.data.data.permanentAddress.country,\n          id: res.data.data.permanentAddress.id,\n          state: res.data.data.permanentAddress.state,\n          street1: res.data.data.permanentAddress.street1,\n          street2: res.data.data.permanentAddress.street2\n        },\n        preferredName: res.data.preferredName,\n        salary: res.data.salary\n      });\n    })[\"catch\"](function (err) {\n      console.log(\"err\", err);\n    });\n  };\n\n  useEffect(function () {\n    console.log(\"mehul\", id);\n    handleGet(id);\n    console.log(\"bipin\", employeeData);\n  }, []);\n\n  var isStepOptional = function isStepOptional(step) {\n    return step === 7 || step === 5;\n  };\n\n  var isStepSkipped = function isStepSkipped(step) {\n    return skipped.has(step);\n  };\n\n  var handleReset = function handleReset() {\n    setActiveStep(0);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    zeroMinWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    lg: 9,\n    xl: 6,\n    zeroMinWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: classes.cardTitleWhite,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294\n    },\n    __self: this\n  }, title)), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }, React.createElement(Stepper, {\n    style: {\n      padding: '5px 0px'\n    },\n    activeStep: activeStep,\n    alternativeLabel: true,\n    noWrap: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300\n    },\n    __self: this\n  }, steps.map(function (label, index) {\n    var stepProps = {};\n    var labelProps = {};\n\n    if (isStepOptional(index)) {\n      labelProps.optional = React.createElement(Typography, {\n        variant: \"caption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, \"Optional\");\n    }\n\n    if (isStepSkipped(index)) {\n      stepProps.completed = false;\n    }\n\n    return React.createElement(Step, Object.assign({\n      key: label\n    }, stepProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }), React.createElement(StepLabel, Object.assign({}, labelProps, {\n      noWrap: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }), label));\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319\n    },\n    __self: this\n  }, activeStep === steps.length ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.instructions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322\n    },\n    __self: this\n  }, \"All steps completed - you're finished\"), React.createElement(Button, {\n    onClick: handleReset,\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325\n    },\n    __self: this\n  }, \"Reset\"), React.createElement(Button, {\n    component: Link,\n    to: \"/admin/employees\",\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328\n    },\n    __self: this\n  }, \"View Submitted Data\")) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.instructions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332\n    },\n    __self: this\n  }, React.createElement(EmployeeContext.Provider, {\n    value: [employeeData, setEmployeeData],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333\n    },\n    __self: this\n  }, React.createElement(StepContext.Provider, {\n    value: [activeStep, setActiveStep],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334\n    },\n    __self: this\n  }, React.createElement(SkipContext.Provider, {\n    value: [skipped, setSkipped],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335\n    },\n    __self: this\n  }, React.createElement(TitleContext.Provider, {\n    value: [title, setTitle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336\n    },\n    __self: this\n  }, getStepContent(activeStep)))))))))))));\n}\n\nexport default EditEmployee;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/views/Employee/Edit.js"],"names":["React","createContext","useState","useEffect","EmployeeInformation","CurrentAddress","PermanentAddress","EmergencyContact","JobDetails","IdProof","EmployeePicture","Feedback","Stepper","Step","StepLabel","Button","Typography","Card","CardHeader","CardBody","GridItem","GridContainer","makeStyles","withStyles","Link","useParams","api","url","EmployeeContext","StepContext","TitleContext","SkipContext","useStyles","theme","root","width","button","marginRight","spacing","instructions","marginTop","marginBottom","cardCategoryWhite","color","margin","fontSize","cardTitleWhite","minHeight","fontWeight","fontFamily","textDecoration","getSteps","getStepContent","step","getAttachments","attachments","currentAddressAttachments","permanentAddressAttachments","idProofAttachments","pictureAttachments","index","length","console","log","type","EditEmployee","props","classes","id","title","setTitle","employeeData","setEmployeeData","activeStep","setActiveStep","Set","skipped","setSkipped","steps","employeeAttachments","domesticAttachments","inlandDreyageCompanyAndCostAttachment","oceanFreightBookingCompanyAndCostAttachment","exportsAttachments","miscellaneousAttachments","handleGet","get","then","res","data","birthDate","bond","currentAddress","city","country","state","street1","street2","currentSalary","emergencyContacts","mobile","name","relationship","feedback","gender","hireDate","maritalStatus","permanentAddress","preferredName","salary","err","isStepOptional","isStepSkipped","has","handleReset","padding","map","label","stepProps","labelProps","optional","completed"],"mappings":"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","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport EmployeeInformation from 'components/AddEmployeeForms/EmployeeInformation';\nimport CurrentAddress from 'components/AddEmployeeForms/CurrentAddress';\nimport PermanentAddress from 'components/AddEmployeeForms/PermanentAddress';\nimport EmergencyContact from 'components/AddEmployeeForms/EmergencyContact';\nimport JobDetails from 'components/AddEmployeeForms/JobDetails';\nimport IdProof from 'components/AddEmployeeForms/IdProof';\nimport EmployeePicture from 'components/AddEmployeeForms/EmployeePicture';\nimport Feedback from 'components/AddEmployeeForms/Feedback';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n// import { useDispatch } from 'react-redux'\n// import Snackbar from \"components/Snackbar/Snackbar.js\";\n// import InfoIcon from '@material-ui/icons/Info';\nimport { Link, useParams } from 'react-router-dom'\nimport api, {url} from '../../lib/axios';\nimport {EmployeeContext, StepContext, TitleContext, SkipContext} from 'views/Employee/Add'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  cardCategoryWhite: {\n    color: \"rgba(255,255,255,.62)\",\n    margin: \"0\",\n    fontSize: \"14px\",\n    marginTop: \"0\",\n    marginBottom: \"0\"\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    // marginBottom: \"3px\",\n    // marginTop: \"0px\",\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    textDecoration: \"none\"\n  }\n}));\n\n\n// const QontoConnector = withStyles({\n//   alternativeLabel: {\n//     // top: 10,\n//     left: 'calc(-50% + 16px)',\n//     right: 'calc(50% + 16px)',\n//   },\n//   active: {\n//     '& $line': {\n//       borderColor: '#9830b0',\n//     },\n//   },\n//   completed: {\n//     '& $line': {\n//       borderColor: '#9830b0'\n//     },\n//   },\n//   line: {\n//     borderColor: '#999999',\n//     borderTopWidth: 3,\n//     borderRadius: 1,\n//   },\n\n\n// })(StepConnector);\n\n// const useQontoStepIconStyles = makeStyles({\n//   root: {\n//     color: 'red',\n//     display: 'flex',\n//     height: 22,\n//     alignItems: 'center',\n//   },\n//   active: {\n//     color: '#9830b0',\n//   },\n//   circle: {\n//     width: 25,\n//     height: 25,\n//     borderRadius: '50%',\n//     backgroundColor: '#eaeaf0',\n\n//   },\n//   completed: {\n//     color: '#ffffff',\n//     backgroundColor:'#9830b0',\n//     width: 25,\n//     height: 25,\n//     borderRadius: '50%',\n//     zIndex: 1,\n//     fontSize: 18,\n//   },\n// });\n// function QontoStepIcon(props) {\n//   const classes = useQontoStepIconStyles();\n//   const { active, completed } = props;\n\n//   return (\n//     <div>\n//       {completed ? <Check className={classes.completed} /> : <div className={classes.circle} />}\n//     </div>\n//   );\n// }\nfunction getSteps() {\n  // return ['', '', '', '', '', '', '', ''];\n  return ['Employee Information', 'Current Address', 'Permanent Address', 'Emergency Contact', 'Job Details', 'Id Proof', 'Employee Picture', 'Feedback'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return <EmployeeInformation />;\n    case 1:\n      return <CurrentAddress />;\n    case 2:\n      return <PermanentAddress />;\n    case 3:\n      return <EmergencyContact />;\n    case 4:\n      return <JobDetails />;\n    case 5:\n      return <IdProof />;\n    case 6:\n      return <EmployeePicture />;\n    case 7:\n      return <Feedback />;\n    default:\n      return 'Unknown step';\n  }\n}\n\n\n// export const EmployeeContext = createContext()\n// export const TitleContext = createContext()\n// // export const EmployeeDataContext = createContext()\n// export const StepContext = createContext()\n// export const SkipContext = createContext()\nconst getAttachments = attachments => {\n  let currentAddressAttachments = [];\n  let permanentAddressAttachments = [];\n  let idProofAttachments = [];\n  let pictureAttachments = [];\n  // let miscellaneousAttachments = [];\n  for (let index = 0; index < attachments.length; index++) {\n    console.log(attachments[index].type);\n    switch (attachments[index].type) {\n      case 'Current Address Proof':\n        currentAddressAttachments = [...currentAddressAttachments, attachments[index]];\n        break;\n      case 'Permanent Adddress Proof':\n        permanentAddressAttachments = [...permanentAddressAttachments, attachments[index]];\n        break;\n      case 'Id Proof':\n        idProofAttachments = [...idProofAttachments, attachments[index]];\n        break;\n      case 'Picture':\n        pictureAttachments = [...pictureAttachments,\n          attachments[index],\n        ];\n        break;\n     \n    }\n  }\n\n  return {\n    currentAddressAttachments,\n    permanentAddressAttachments,\n    idProofAttachments,\n    pictureAttachments,\n  };\n};\nfunction EditEmployee(props) {\n\n  const classes = useStyles();\n  let { id } = useParams();\n  // const dispatch = useDispatch();\n  const [title, setTitle] = useState('')\n  const [employeeData, setEmployeeData] = useState({})\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n  const steps = getSteps();\n  const {\n    domesticAttachments,\n    inlandDreyageCompanyAndCostAttachment,\n    oceanFreightBookingCompanyAndCostAttachment,\n    exportsAttachments,\n    miscellaneousAttachments,\n  } = getAttachments(employeeData.employeeAttachments);\n  // const [addSnackbar,setAddSnackbar]=useState(false)\n  // useEffect(() => {\n  //   // dispatch({ type:'ADD_EMPLOYEE',payload:employeeData })\n  // // console.log(employeeData)\n  //   // dispatch(addEmployee(employeeData))\n  //   // console.log(\"team66\",employeeData)\n  //   activeStep === steps.length?setAddSnackbar(true):setAddSnackbar(false)\n  // })\nconst handleGet=id=>{\n    api.get(`employees/${id}`).then(res=>{\n\n      console.log(\"Edit\",res.data.data)\n      setEmployeeData({ \n        birthDate: res.data.data.birthDate,\n        bond: res.data.data.bond,\n        currentAddress: {\n          city: res.data.data.currentAddress.city,\n          country:res.data.data.currentAddress.country ,\n          id: res.data.data.currentAddress.id,\n          state:res.data.data.currentAddress.state ,\n          street1:res.data.data.currentAddress.street1 ,\n          street2:res.data.data.currentAddress.street2 \n        },\n        currentSalary:res.data.data.currentSalary ,\n        emergencyContacts: [\n          {\n            id: res.data.data.emergencyContacts.id,\n            mobile: res.data.data.emergencyContacts.mobile,\n            name: res.data.data.emergencyContacts.name,\n            relationship:res.data.data.emergencyContacts.relationship \n          },\n          {\n            id: res.data.data.emergencyContacts.id,\n            mobile: res.data.data.emergencyContacts.mobile,\n            name: res.data.data.emergencyContacts.name,\n            relationship: res.data.data.emergencyContacts.relationship\n          }\n        ],\n        // employeeAttachments: [\n        //   // {\n        //   //   fileName: ,\n        //     // id: ,\n        //   //   originalFileName: ,\n        //   //   size: ,\n        //   //   type: \n        //   // }\n        // ],\n        feedback:res.data.data.feedback,\n        gender:res.data.data.gender ,\n        id:res.data.data.id,\n        hireDate:res.data.data.hireDate,\n        maritalStatus: res.data.data.maritalStatus,\n        name: res.data.data.name,\n        permanentAddress: {\n          city: res.data.data.permanentAddress.city,\n          country:res.data.data.permanentAddress.country ,\n          id: res.data.data.permanentAddress.id,\n          state:res.data.data.permanentAddress.state ,\n          street1:res.data.data.permanentAddress.street1 ,\n          street2:res.data.data.permanentAddress.street2 \n        },\n        preferredName: res.data.preferredName,\n        salary:res.data.salary})\n  }).catch(err=>{console.log(\"err\",err)})\n  }\n  useEffect(()=>{\n    console.log(\"mehul\",id)\n    handleGet(id)\n    console.log(\"bipin\",employeeData)\n  },[])\n  const isStepOptional = step => {\n    return step === 7 || step === 5 ;\n  };\n\n  const isStepSkipped = step => {\n    return skipped.has(step);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n  return (\n    <div>\n      <GridContainer zeroMinWidth>\n        <GridItem xs={12} sm={12} md={12} lg={9} xl={6} zeroMinWidth>\n          <Card>\n            <CardHeader color=\"primary\">\n              <h4 className={classes.cardTitleWhite}>{title}</h4>\n              {/* <h4 className={classes.cardTitleWhite}>Add Employee</h4>\n              <p className={classes.cardCategoryWhite}>{title}</p> */}\n            </CardHeader>\n            <CardBody>\n              {/* <div className={classes.root}> */}\n              <Stepper style={{padding:'5px 0px'}} activeStep={activeStep} alternativeLabel noWrap>\n                {/* connector={<QontoConnector />} */}\n                {steps.map((label, index) => {\n                  const stepProps = {};\n                  const labelProps = {};\n                  if (isStepOptional(index)) {\n                    labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n                  }\n                  if (isStepSkipped(index)) {\n                    stepProps.completed = false;\n                  }\n                  return (\n                    <Step key={label} {...stepProps}>\n                      <StepLabel {...labelProps} noWrap>{label}</StepLabel>\n                      {/* StepIconComponent={QontoStepIcon} */}\n                    </Step>\n                  );\n                })}\n              </Stepper>\n              <div>\n                {activeStep === steps.length ? (\n                  <div>\n                    <Typography className={classes.instructions}>\n                      All steps completed - you&apos;re finished\n            </Typography>\n                    <Button onClick={handleReset} className={classes.button}>\n                      Reset\n            </Button>\n            <Button component={Link} to=\"/admin/employees\" className={classes.button}>View Submitted Data</Button>\n                  </div>\n                ) : (\n                    <div>\n                      <Typography className={classes.instructions}>\n                        <EmployeeContext.Provider value={[employeeData, setEmployeeData]}>\n                          <StepContext.Provider value={[activeStep, setActiveStep]}>\n                            <SkipContext.Provider value={[skipped, setSkipped]}>\n                              <TitleContext.Provider value={[title, setTitle]}>\n                                        {getStepContent(activeStep)}\n                              </TitleContext.Provider>\n                            </SkipContext.Provider>\n                          </StepContext.Provider>\n                        </EmployeeContext.Provider>\n                      </Typography>\n\n                    </div>\n                  )}\n              </div>\n              {/* </div> */}\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer>\n      {/* <Snackbar\n              place=\"bl\"\n              color=\"primary\"\n              icon={InfoIcon}\n              message=\"Employee Added Successfully\"\n              open={addSnackbar}\n              closeNotification={() => setAddSnackbar(false)}\n              close\n            /> */}\n    </div>\n  );\n}\nexport default EditEmployee"]},"metadata":{},"sourceType":"module"}