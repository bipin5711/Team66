{"ast":null,"code":"import _toConsumableArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/components/AddEmployeeForms/CurrentAddress.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from 'react';\nimport { FormLabel } from \"@material-ui/core\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport StepperNavigationButtons from 'components/Stepper/StepperNavigationButtons';\nimport { StepContext, EmployeeContext, TitleContext } from 'views/Employee/Add';\nimport * as Yup from 'yup';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CustomDropzone from 'components/Dropzone/Dropzone';\nimport api, { toFormData } from '../../lib/axios';\nvar useStyles = makeStyles({\n  field: {\n    marginTop: \"32px\"\n  }\n});\nvar validationSchema = Yup.object().shape({\n  street1: Yup.string().required('Required'),\n  city: Yup.string().required('Required') //  addressProof: Yup.string().required('Required')\n\n});\n\nfunction CurrentAddress(props) {\n  var classes = useStyles();\n\n  var _useContext = useContext(EmployeeContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      employeeData = _useContext2[0],\n      setEmployeeData = _useContext2[1];\n\n  var _useContext3 = useContext(StepContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      activeStep = _useContext4[0],\n      setActiveStep = _useContext4[1];\n\n  var _useState = useState(new Set()),\n      _useState2 = _slicedToArray(_useState, 2),\n      skipped = _useState2[0],\n      setSkipped = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      file = _useState4[0],\n      setFile = _useState4[1];\n\n  var _useContext5 = useContext(TitleContext),\n      _useContext6 = _slicedToArray(_useContext5, 2),\n      title = _useContext6[0],\n      setTitle = _useContext6[1];\n\n  var fileList = []; // var fileAttachments;\n\n  setTitle('Current Address');\n  return React.createElement(Formik, {\n    initialValues: employeeData,\n    validationSchema: validationSchema,\n    onSubmit: function onSubmit(values) {\n      //handleNext()\n      var newSkipped = skipped;\n\n      var isStepSkipped = function isStepSkipped(step) {\n        return skipped.has(step);\n      };\n\n      if (isStepSkipped(activeStep)) {\n        newSkipped = new Set(newSkipped.values());\n        newSkipped[\"delete\"](activeStep);\n      }\n\n      setActiveStep(function (prevActiveStep) {\n        return prevActiveStep + 1;\n      });\n      setSkipped(newSkipped);\n      setEmployeeData(_objectSpread({}, employeeData, {\n        currentAddress: {\n          street1: values.street1,\n          street2: values.street2,\n          city: values.city,\n          state: values.state,\n          country: values.country,\n          employeeAttachments: [].concat(_toConsumableArray(employeeData.employeeAttachments), [addressProof])\n        } // currentStreet1: values.currentStreet1,\n        // currentStreet2: values.currentStreet2,\n        // currentCity: values.currentCity,\n        // currentState: values.currentState,\n        // currentCountry: values.currentCountry,\n        // currentAddressProof: values.currentAddressProof\n\n      }));\n      console.log(\"bipin\", employeeData); // file.map(file=>{\n\n      var test = {\n        file: file,\n        type: 'Current Address Proof'\n      };\n      var fileData = toFormData(test);\n      console.log(fileData);\n      api.post('employees/file', fileData).then(function (res) {\n        var fileAttachments = res.data.data;\n        console.log(\"sho\", fileAttachments);\n        setEmployeeData(_objectSpread({}, employeeData, {\n          employeeAttachments: [].concat(_toConsumableArray(employeeData.employeeAttachments), [fileAttachments])\n        })); // setLoad({ ...load, attachments: [...load.attachments, data] });\n\n        console.log(\"current\", res.data.data);\n      })[\"catch\"](function (err) {\n        console.log(\"err\", err);\n      }); // })\n    },\n    render: function render(_ref) {\n      var values = _ref.values,\n          setFieldValue = _ref.setFieldValue;\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Street 1\",\n        id: \"street1\",\n        name: \"street1\",\n        className: classes.field,\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Street 2\",\n        id: \"street2\",\n        name: \"street2\",\n        className: classes.field,\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"City\",\n        id: \"city\",\n        name: \"city\",\n        className: classes.field,\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"State\",\n        id: \"state\",\n        name: \"state\",\n        className: classes.field,\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Country\",\n        id: \"country\",\n        name: \"country\",\n        className: classes.field,\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        style: {\n          textAlign: 'left'\n        },\n        className: classes.field,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Current Address Proof\"), React.createElement(CustomDropzone, {\n        list: [],\n        callBack: function callBack(files) {\n          files.map(function (file) {\n            console.log(\"harsh\", file);\n            var exist = 0;\n            fileList.map(function (existingFile) {\n              if (existingFile.name === file.name && existingFile.size === file.size) {\n                exist = 1; // alert(\"File has already selected\")\n              }\n            });\n\n            if (exist === 1) {\n              exist = 0;\n            } else {\n              fileList.push(file);\n            }\n          });\n          console.log(\"filelist\", fileList);\n          setFieldValue('addressProof', fileList);\n          setFile(fileList[0]);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(StepperNavigationButtons, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  });\n}\n\nexport default CurrentAddress;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/components/AddEmployeeForms/CurrentAddress.js"],"names":["React","useState","useContext","FormLabel","GridItem","GridContainer","StepperNavigationButtons","StepContext","EmployeeContext","TitleContext","Yup","Formik","Form","Field","ErrorMessage","TextField","makeStyles","CustomDropzone","api","toFormData","useStyles","field","marginTop","validationSchema","object","shape","street1","string","required","city","CurrentAddress","props","classes","employeeData","setEmployeeData","activeStep","setActiveStep","Set","skipped","setSkipped","file","setFile","title","setTitle","fileList","values","newSkipped","isStepSkipped","step","has","prevActiveStep","currentAddress","street2","state","country","employeeAttachments","addressProof","console","log","test","type","fileData","post","then","res","fileAttachments","data","err","setFieldValue","textAlign","files","map","exist","existingFile","name","size","push"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { FormLabel } from \"@material-ui/core\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport StepperNavigationButtons from 'components/Stepper/StepperNavigationButtons';\nimport { StepContext, EmployeeContext, TitleContext } from 'views/Employee/Add'\nimport * as Yup from 'yup'\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\nimport { TextField } from 'formik-material-ui';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CustomDropzone from 'components/Dropzone/Dropzone'\nimport api, { toFormData } from '../../lib/axios';\n\nconst useStyles = makeStyles({\n  field: {\n    marginTop: \"32px\"\n  }\n})\n\nconst validationSchema = Yup.object().shape({\n  street1: Yup.string().required('Required'),\n  city: Yup.string().required('Required')\n  //  addressProof: Yup.string().required('Required')\n\n});\n\nfunction CurrentAddress(props) {\n\n  const classes = useStyles()\n  const [employeeData, setEmployeeData] = useContext(EmployeeContext)\n  const [activeStep, setActiveStep] = useContext(StepContext);\n  const [skipped, setSkipped] = useState(new Set());\n  const [file,setFile]=useState()\n  const [title, setTitle] = useContext(TitleContext);\n  const fileList = []\n  // var fileAttachments;\n  setTitle('Current Address')\n\n  return (\n    <Formik\n      initialValues={employeeData}\n      validationSchema={validationSchema}\n      onSubmit={values => {\n        //handleNext()\n        let newSkipped = skipped;\n        const isStepSkipped = step => {\n          return skipped.has(step);\n        };\n        if (isStepSkipped(activeStep)) {\n          newSkipped = new Set(newSkipped.values());\n          newSkipped.delete(activeStep);\n        }\n        setActiveStep(prevActiveStep => prevActiveStep + 1);\n        setSkipped(newSkipped);\n        setEmployeeData({\n          ...employeeData,\n          currentAddress:{\n          street1: values.street1,\n          street2: values.street2,\n          city: values.city,\n          state: values.state,\n          country: values.country,\n          employeeAttachments:[...employeeData.employeeAttachments,addressProof]\n          }\n          // currentStreet1: values.currentStreet1,\n          // currentStreet2: values.currentStreet2,\n          // currentCity: values.currentCity,\n          // currentState: values.currentState,\n          // currentCountry: values.currentCountry,\n          // currentAddressProof: values.currentAddressProof\n        })\n        console.log(\"bipin\",employeeData)\n        // file.map(file=>{\n          let test = {\n                file,\n                type:'Current Address Proof'\n              }\n              const fileData=toFormData(test)\n              console.log(fileData)\n              api.post('employees/file',fileData).then(res=>{\n                const fileAttachments=res.data.data\n                console.log(\"sho\",fileAttachments)\n                setEmployeeData({...employeeData,employeeAttachments:[...employeeData.employeeAttachments,fileAttachments]})\n                // setLoad({ ...load, attachments: [...load.attachments, data] });\n                console.log(\"current\",res.data.data)\n            }).catch(err=>{console.log(\"err\",err)})\n           \n        // })\n        \n      \n      }}\n      render={({ values, setFieldValue }) => {\n        return (<Form>\n          <GridContainer>\n\n            <GridItem xs={12} sm={12} md={6}>\n              <Field\n                label=\"Street 1\"\n                id=\"street1\"\n                name=\"street1\"\n                className={classes.field}\n                component={TextField}\n                fullWidth\n              />\n            </GridItem>\n\n            <GridItem xs={12} sm={12} md={6}>\n              <Field\n                label=\"Street 2\"\n                id=\"street2\"\n                name=\"street2\"\n                className={classes.field}\n                component={TextField}\n                fullWidth\n              />\n            </GridItem>\n\n            <GridItem xs={12} sm={12} md={4}>\n              <Field\n                label=\"City\"\n                id=\"city\"\n                name=\"city\"\n                className={classes.field}\n                component={TextField}\n                fullWidth\n              />\n            </GridItem>\n\n            <GridItem xs={12} sm={12} md={4}>\n              <Field\n                label=\"State\"\n                id=\"state\"\n                name=\"state\"\n                className={classes.field}\n                component={TextField}\n                fullWidth\n              />\n            </GridItem>\n\n            <GridItem xs={12} sm={12} md={4}>\n              <Field\n                label=\"Country\"\n                id=\"country\"\n                name=\"country\"\n                className={classes.field}\n                component={TextField}\n                fullWidth\n              />\n            </GridItem>\n\n            <GridItem xs={12} sm={12} md={12}>\n              <FormLabel component=\"legend\" style={{ textAlign: 'left' }} className={classes.field}>Current Address Proof</FormLabel>\n              <CustomDropzone list={[]} callBack={files => {\n                \n                files.map(file => {\n                  console.log(\"harsh\",file)\n                  var exist = 0\n                  fileList.map(existingFile => {\n\n                    if (existingFile.name === file.name && existingFile.size === file.size) {\n                      exist = 1;\n                      // alert(\"File has already selected\")\n                    }\n                  })\n                  if (exist === 1) {\n\n                    exist = 0;\n                  }\n                  else {\n                    fileList.push(file)\n                   \n                  }\n                })\n                console.log(\"filelist\", fileList)\n                setFieldValue('addressProof', fileList)\n                setFile(fileList[0])\n              }} />\n\n            </GridItem>\n\n            <GridItem xs={12} sm={12} md={12}>\n              <StepperNavigationButtons />\n            </GridItem>\n\n          </GridContainer>\n        </Form>)\n      }}\n    >\n    </Formik>\n  );\n}\n\nexport default CurrentAddress;"]},"metadata":{},"sourceType":"module"}