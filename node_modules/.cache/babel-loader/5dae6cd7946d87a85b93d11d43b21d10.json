{"ast":null,"code":"import _objectWithoutProperties from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/components/Dropzone/Dropzone.js\";\nimport React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Dropzone from 'react-dropzone';\nimport { EmployeeContext } from 'views/Employee/Add'; // import {DropzoneArea} from 'material-ui-dropzone'\n\nvar dropzoneStyle = {\n  width: \"100%\",\n  height: \"auto\",\n  borderWidth: 2,\n  borderColor: \"rgb(102, 102, 102)\",\n  borderStyle: \"dashed\",\n  borderRadius: 5\n};\n\nfunction CustomDropzone(props) {\n  var _useContext = useContext(EmployeeContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      employeeData = _useContext2[0],\n      setEmployeeData = _useContext2[1];\n\n  var field = props.field,\n      form = props.form,\n      rest = _objectWithoutProperties(props, [\"field\", \"form\"]);\n\n  var error = form.touched[field.name] && form.errors[field.name];\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      filename = _useState2[0],\n      setFilename = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      file = _useState4[0],\n      setFile = _useState4[1];\n\n  function handleOnDrop(files, rejectedFiles) {\n    var curfile = files[0];\n    setFilename(files[0].name);\n    var reader = new FileReader();\n    reader.addEventListener(\"load\", function () {\n      setFile(reader.result);\n      form.setFieldValue(field.name, filename);\n    }, false);\n    reader.readAsDataURL(curfile);\n  }\n\n  form.getFieldValue(field.name); //   function handleOnDrop(acceptedFiles) {\n  //     form.setFieldValue(field.name, values.files.concat(acceptedFiles));\n  // }\n\n  return React.createElement(Dropzone, {\n    onDrop: handleOnDrop // onChange={(e) => form.setFieldValue(field.name, e)}\n    ,\n    multiple: \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, function (_ref) {\n    var getRootProps = _ref.getRootProps,\n        getInputProps = _ref.getInputProps;\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", Object.assign({}, getRootProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, form.getFieldValue(field.name) !== \"\" && filename === \"\" ? '1' + form.getFieldValue(field.name) : '', form.getFieldValue(field.name) === \"\" && filename !== \"\" ? '2' + filename : '', form.getFieldValue(field.name) === \"\" && filename === \"\" ? \"3Add file\" : '', filename !== \"\" && form.getFieldValue(field.name) !== \"\" ? '4' + filename : '')));\n  });\n}\n\nCustomDropzone.propTypes = {\n  field: PropTypes.objectOf({\n    name: PropTypes.string\n  }).isRequired,\n  form: PropTypes.objectOf({\n    touched: PropTypes.instanceOf(Array),\n    errors: PropTypes.instanceOf(Array)\n  }).isRequired\n};\nexport default CustomDropzone;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/components/Dropzone/Dropzone.js"],"names":["React","useState","useContext","PropTypes","Dropzone","EmployeeContext","dropzoneStyle","width","height","borderWidth","borderColor","borderStyle","borderRadius","CustomDropzone","props","employeeData","setEmployeeData","field","form","rest","error","touched","name","errors","filename","setFilename","file","setFile","handleOnDrop","files","rejectedFiles","curfile","reader","FileReader","addEventListener","result","setFieldValue","readAsDataURL","getFieldValue","getRootProps","getInputProps","propTypes","objectOf","string","isRequired","instanceOf","Array"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Dropzone from 'react-dropzone';\nimport {  EmployeeContext } from 'views/Employee/Add'\n// import {DropzoneArea} from 'material-ui-dropzone'\n\nconst dropzoneStyle = {\n  width: \"100%\",\n  height: \"auto\",\n  borderWidth: 2,\n  borderColor: \"rgb(102, 102, 102)\",\n  borderStyle: \"dashed\",\n  borderRadius: 5,\n}\nfunction CustomDropzone(props) {\n\n  const [employeeData, setEmployeeData] = useContext(EmployeeContext)\n  const { field, form, ...rest } = props;\n  const error = form.touched[field.name] && form.errors[field.name];\n  const [filename, setFilename] = useState('')\n  const [file, setFile] = useState('')\n  function handleOnDrop(files, rejectedFiles) {\n    const curfile = files[0]\n    setFilename(files[0].name)\n    const reader = new FileReader()\n    reader.addEventListener(\"load\", () => {\n      setFile(reader.result)\n      form.setFieldValue(field.name, filename)\n    }, false)\n    reader.readAsDataURL(curfile)\n  }\n  form.getFieldValue(field.name)\n  //   function handleOnDrop(acceptedFiles) {\n  //     form.setFieldValue(field.name, values.files.concat(acceptedFiles));\n  // }\n  \n  return (\n    <Dropzone\n      onDrop={handleOnDrop}\n      // onChange={(e) => form.setFieldValue(field.name, e)}\n      multiple=\"true\">\n      {({ getRootProps, getInputProps }) => (\n        <section >\n          <div {...getRootProps()}>\n            <input {...getInputProps()} />\n            <div>\n            {form.getFieldValue(field.name)!==\"\" && filename===\"\"? '1'+form.getFieldValue(field.name) : ''}\n            {form.getFieldValue(field.name)===\"\" && filename!==\"\"? '2'+filename : ''}\n            {form.getFieldValue(field.name)===\"\" && filename===\"\"? \"3Add file\" : ''} \n            {filename!==\"\" && form.getFieldValue(field.name)!==\"\" ? '4'+filename : ''}\n          </div>\n          </div>\n        </section>\n      )}\n    </Dropzone>\n  );\n}\n\nCustomDropzone.propTypes = {\n  field: PropTypes.objectOf({\n    name: PropTypes.string,\n  }).isRequired,\n  form: PropTypes.objectOf({\n    touched: PropTypes.instanceOf(Array),\n    errors: PropTypes.instanceOf(Array),\n  }).isRequired,\n};\n\nexport default CustomDropzone;"]},"metadata":{},"sourceType":"module"}