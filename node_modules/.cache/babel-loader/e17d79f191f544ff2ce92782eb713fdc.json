{"ast":null,"code":"import _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from 'react';\n/**\n * React hook to check when a valid media-query-string changes\n * (i.e. when the media query test starts or stops evaluating to true)\n *\n * @param {string} mediaQueryString valid media query string. E.g.: `(min-width: 425px)`\n * @returns {boolean} media-query matches value\n */\n\nfunction useMediaQuery(mediaQueryString) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      queryMatch = _useState2[0],\n      setQueryMatch = _useState2[1];\n\n  useEffect(function () {\n    var setMediaMatchHandler = function setMediaMatchHandler(e) {\n      return setQueryMatch(e.matches);\n    };\n\n    var mediaQueryList = window.matchMedia(mediaQueryString);\n    setMediaMatchHandler(mediaQueryList);\n    mediaQueryList.addListener(setMediaMatchHandler);\n    return function () {\n      return mediaQueryList.removeListener(setMediaMatchHandler);\n    };\n  }, [mediaQueryString]);\n  return queryMatch;\n}\n\nexport default useMediaQuery;","map":null,"metadata":{},"sourceType":"module"}