{"ast":null,"code":"import _defineProperty from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/components/AddEmployeeForms/EmployeeInformation.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from 'react'; // import { makeStyles } from \"@material-ui/core/styles\";\n\nimport { FormLabel, RadioGroup, Radio, FormControlLabel, Button, TextField } from \"@material-ui/core\";\nimport { Field, Form } from \"formik\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { format } from \"date-fns\";\nimport { DatePicker, MuiPickersUtilsProvider } from \"material-ui-pickers\";\nimport { Formik } from 'formik';\nimport { EmployeeValidation } from 'lib/Yup/EmployeeValidation';\nimport { EmployeeContext } from 'views/Employee/AddEmployee';\nimport StepperNavigationButtons from 'views/Employee/StepperNavigationButtons'; // const styles = {\n//     cardCategoryWhite: {\n//       color: \"rgba(255,255,255,.62)\",\n//       margin: \"0\",\n//       fontSize: \"14px\",\n//       marginTop: \"0\",\n//       marginBottom: \"0\"\n//     },\n//     cardTitleWhite: {\n//       color: \"#FFFFFF\",\n//       marginTop: \"0px\",\n//       minHeight: \"auto\",\n//       fontWeight: \"300\",\n//       fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n//       marginBottom: \"3px\",\n//       textDecoration: \"none\"\n//     }\n//   };\n// const useStyles = makeStyles(styles);\n\nfunction EmployeeInformation(props) {\n  var _useContext = useContext(EmployeeContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      employeeData = _useContext2[0],\n      setEmployeeData = _useContext2[1]; // const classes = useStyles();\n\n\n  var _useState = useState(new Date()),\n      _useState2 = _slicedToArray(_useState, 2),\n      birthDate = _useState2[0],\n      setBirthDate = _useState2[1];\n\n  function handleDateChange(date) {\n    // setBirthDate(format(date, 'dd/MM/yyyy'))\n    setBirthDate(date);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    initialValues: employeeData,\n    validationSchema: EmployeeValidation,\n    onSubmit: function onSubmit(values) {\n      //handleNext()\n      var newSkipped = skipped;\n\n      if (isStepSkipped(activeStep)) {\n        newSkipped = new Set(newSkipped.values());\n        newSkipped[\"delete\"](activeStep);\n      }\n\n      setActiveStep(function (prevActiveStep) {\n        return prevActiveStep + 1;\n      });\n      setSkipped(newSkipped);\n      alert(\"fd\");\n      setEmployeeData(_objectSpread({}, employeeData, {\n        fullName: values.fullName,\n        maritalStatus: 'married'\n      }));\n      console.log(\"child\", employeeData);\n      console.log(values.fullName);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, function (_ref) {\n    var errors = _ref.errors,\n        values = _ref.values,\n        touched = _ref.touched,\n        handleChange = _ref.handleChange,\n        handleSubmit = _ref.handleSubmit;\n    return React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(GridContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Field, {\n      label: \"Full Name(As on your ID)\",\n      id: \"fullName\",\n      name: \"fullName\",\n      component: TextField,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })), React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Field, {\n      label: \"Preferred Name\",\n      id: \"preferredName\",\n      name: \"preferredName\",\n      component: TextField,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      component: \"legend\",\n      style: {\n        textAlign: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Birth Date\"), React.createElement(MuiPickersUtilsProvider, {\n      utils: DateFnsUtils,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Field, {\n      component: DatePicker,\n      value: birthDate,\n      format: \"dd-MM-yyyy\",\n      placeholder: \"Enter date\",\n      onChange: handleDateChange //  label=\"Birth Date\"\n      ,\n      name: \"birthDate\",\n      id: \"birthDate\",\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }))), React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      component: \"legend\",\n      style: {\n        textAlign: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Gender\"), React.createElement(Field, {\n      fullWidth: true,\n      id: \"gender\",\n      name: \"gender\" //   value={values.gender}\n      //   error={errors.gender}\n      ,\n      component: RadioGroup,\n      row: true //   onChange={handleChange}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      id: \"gender\",\n      label: \"Male\",\n      control: React.createElement(Radio, {\n        id: \"gender\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }),\n      value: \"male\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      id: \"gender\",\n      value: \"female\",\n      control: React.createElement(Radio, {\n        id: \"gender\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }),\n      label: \"Female\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }))), React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      component: \"legend\",\n      style: {\n        textAlign: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Marital Status\"), React.createElement(Field, {\n      fullWidth: true,\n      id: \"maritalStatus\",\n      name: \"maritalStatus\" // aria-label=\"maritalStatus\"\n      //   value={values.maritalStatus}\n      //   error={errors.maritalStatus}\n      ,\n      component: RadioGroup,\n      row: true //   onChange={handleChange}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      id: \"maritalStatus\",\n      label: \"Married\",\n      control: React.createElement(Radio, {\n        id: \"maritalStatus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }),\n      value: \"married\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      id: \"maritalStatus\",\n      value: \"single\",\n      control: React.createElement(Radio, {\n        id: \"maritalStatus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }),\n      label: \"Single\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      id: \"maritalStatus\",\n      value: \"other\",\n      control: React.createElement(Radio, {\n        id: \"maritalStatus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }),\n      label: \"Other\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }))), React.createElement(GridItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(StepperNavigationButtons, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }))));\n  }));\n}\n\nexport default EmployeeInformation;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/components/AddEmployeeForms/EmployeeInformation.js"],"names":["React","useState","useContext","FormLabel","RadioGroup","Radio","FormControlLabel","Button","TextField","Field","Form","GridItem","GridContainer","CustomInput","DateFnsUtils","format","DatePicker","MuiPickersUtilsProvider","Formik","EmployeeValidation","EmployeeContext","StepperNavigationButtons","EmployeeInformation","props","employeeData","setEmployeeData","Date","birthDate","setBirthDate","handleDateChange","date","values","newSkipped","skipped","isStepSkipped","activeStep","Set","setActiveStep","prevActiveStep","setSkipped","alert","fullName","maritalStatus","console","log","errors","touched","handleChange","handleSubmit","textAlign"],"mappings":"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","sourcesContent":["import React ,{useState, useContext} from 'react';\n// import { makeStyles } from \"@material-ui/core/styles\";\nimport { FormLabel,RadioGroup, Radio, FormControlLabel, Button, TextField } from \"@material-ui/core\";\nimport { Field, Form } from \"formik\"\n// core components\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { format } from \"date-fns\"\nimport { DatePicker, MuiPickersUtilsProvider} from \"material-ui-pickers\";\nimport { Formik } from 'formik'\nimport {EmployeeValidation} from 'lib/Yup/EmployeeValidation'  \nimport {EmployeeContext} from 'views/Employee/AddEmployee'\nimport  StepperNavigationButtons  from 'views/Employee/StepperNavigationButtons';\n// const styles = {\n//     cardCategoryWhite: {\n//       color: \"rgba(255,255,255,.62)\",\n//       margin: \"0\",\n//       fontSize: \"14px\",\n//       marginTop: \"0\",\n//       marginBottom: \"0\"\n//     },\n//     cardTitleWhite: {\n//       color: \"#FFFFFF\",\n//       marginTop: \"0px\",\n//       minHeight: \"auto\",\n//       fontWeight: \"300\",\n//       fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n//       marginBottom: \"3px\",\n//       textDecoration: \"none\"\n//     }\n//   };\n  \n\n// const useStyles = makeStyles(styles);\nfunction EmployeeInformation(props) {\n    const [employeeData,setEmployeeData]=useContext(EmployeeContext)\n    // const classes = useStyles();\n    const [birthDate,setBirthDate]=useState(new Date())\n    function handleDateChange(date){\n        // setBirthDate(format(date, 'dd/MM/yyyy'))\n        setBirthDate(date)\n    }\n    return (\n        <div>\n          <Formik\n            initialValues={employeeData}\n            validationSchema={EmployeeValidation}\n            onSubmit={values => {\n              //handleNext()\n              let newSkipped = skipped;\n              if (isStepSkipped(activeStep)) {\n                newSkipped = new Set(newSkipped.values());\n                newSkipped.delete(activeStep);\n              }\n          \n              setActiveStep(prevActiveStep => prevActiveStep + 1);\n              setSkipped(newSkipped);\n              alert(\"fd\")\n              setEmployeeData({...employeeData,fullName:values.fullName,maritalStatus:'married'})\n              console.log(\"child\",employeeData)\n              console.log(values.fullName)\n              }} \n             \n            >\n               {({ errors,values, touched ,handleChange, handleSubmit}) => (\n              <Form>\n       \n              <GridContainer>\n                <GridItem xs={12} sm={12} md={12}>\n                  {/* we can use CustomInput also insted of field */}\n                  <Field\n                    label=\"Full Name(As on your ID)\"\n                    id=\"fullName\"\n                    name=\"fullName\"\n                    component={TextField}\n                    fullWidth\n                \n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={12}>\n                  <Field\n                    label=\"Preferred Name\"\n                    id=\"preferredName\"\n                    name=\"preferredName\"\n                    component={TextField}\n                    fullWidth\n                   \n                  />\n                </GridItem>\n               \n                <GridItem xs={12} sm={12} md={12}>\n                    <FormLabel component=\"legend\" style={{textAlign:'left'}}>Birth Date</FormLabel>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils} >\n                      <Field\n                      component={DatePicker}\n                      value={birthDate} \n                         format='dd-MM-yyyy' \n                         placeholder='Enter date' \n                         onChange={handleDateChange} \n                        //  label=\"Birth Date\"\n                         name=\"birthDate\"\n                          id=\"birthDate\" \n                          fullWidth\n                      ></Field>\n                         {/* <DatePicker \n                         name=\"birthDate\"\n                          id=\"birthDate\" \n                          fullWidth \n                         value={birthDate} \n                         format='dd-MM-yyyy' \n                         placeholder='Enter date' \n                         onChange={handleDateChange} \n                         label=\"Birth Date\"\n                         /> */}\n                      \n                    </MuiPickersUtilsProvider>\n                </GridItem>\n              \n                <GridItem xs={12} sm={12} md={12}>\n                <FormLabel component=\"legend\" style={{textAlign:'left'}}>Gender</FormLabel>\n                    <Field fullWidth\n                      id=\"gender\"\n                      name=\"gender\"\n                 \n                    //   value={values.gender}\n                    //   error={errors.gender}\n                      component={RadioGroup}\n                      row\n                      \n                    //   onChange={handleChange}\n                    >\n                    <FormControlLabel\n                        id=\"gender\"\n                        label=\"Male\"\n                        control={<Radio id=\"gender\" />}\n                        value=\"male\"\n                      />\n                      <FormControlLabel\n                        id=\"gender\"\n                        value=\"female\"\n                        control={<Radio id=\"gender\"/>}\n                        label=\"Female\"\n                      />\n                    </Field>\n                </GridItem>\n                <GridItem xs={12} sm={12} md={12}>\n                <FormLabel component=\"legend\" style={{textAlign:'left'}}>Marital Status</FormLabel>\n                    <Field fullWidth\n                      id=\"maritalStatus\"\n                      name=\"maritalStatus\"\n                      // aria-label=\"maritalStatus\"\n                    //   value={values.maritalStatus}\n                    //   error={errors.maritalStatus}\n                      component={RadioGroup}\n                      row\n                    //   onChange={handleChange}\n                    >\n                    <FormControlLabel\n                        id=\"maritalStatus\"\n                        label=\"Married\"\n                        control={<Radio id=\"maritalStatus\" />}\n                        value=\"married\"\n                      />\n                      <FormControlLabel\n                        id=\"maritalStatus\"\n                        value=\"single\"\n                        control={<Radio id=\"maritalStatus\"/>}\n                        label=\"Single\"\n                      />\n                    <FormControlLabel\n                        id=\"maritalStatus\"\n                        value=\"other\"\n                        control={<Radio id=\"maritalStatus\"/>}\n                        label=\"Other\"\n                      />\n                    </Field>\n                  \n                </GridItem>\n                <GridItem>\n                <StepperNavigationButtons />\n                </GridItem>\n              </GridContainer>\n              </Form>\n               )}\n              </Formik>\n        \n    </div>\n    );\n}\n\nexport default EmployeeInformation;"]},"metadata":{},"sourceType":"module"}