{"ast":null,"code":"import _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/components/Dropzone/Dropzone.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Dropzone from 'react-dropzone';\n\nfunction CustomDropzone(props) {\n  var field = props.field,\n      form = props.form,\n      rest = _objectWithoutProperties(props, [\"field\", \"form\"]);\n\n  var error = form.touched[field.name] && form.errors[field.name];\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      filename = _useState2[0],\n      setFilename = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      file = _useState4[0],\n      setFile = _useState4[1];\n\n  function handleOnDrop(files, rejectedFiles) {\n    var curfile = files[0];\n    setFilename(files[0].name);\n    var reader = new FileReader();\n    reader.addEventListener(\"load\", function () {\n      setFile(reader.result);\n    }, false);\n    reader.readAsDataURL(curfile);\n  }\n\n  return (//   <MuiPickersUtilsProvider utils={DateFnsUtils} >\n    //   <DatePicker\n    //     {...field}\n    //     onChange={(e) => form.setFieldValue(field.name, e)}\n    //     {...rest}\n    //     error={error}\n    //     helperText={error}\n    //   />\n    //  </MuiPickersUtilsProvider>\n    React.createElement(Dropzone, {\n      onDrop: handleOnDrop,\n      onChange: function onChange(e) {\n        return form.setFieldValue(field.name, e);\n      },\n      multiple: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, function (_ref) {\n      var getRootProps = _ref.getRootProps,\n          getInputProps = _ref.getInputProps;\n      return React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", Object.assign({}, getRootProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, filename === \"\" ? \"Drag and drop file here, or click to select file\" : filename)));\n    })\n  );\n}\n\nDatePicker.propTypes = {\n  field: PropTypes.objectOf({\n    name: PropTypes.string\n  }).isRequired,\n  form: PropTypes.objectOf({\n    touched: PropTypes.instanceOf(Array),\n    errors: PropTypes.instanceOf(Array)\n  }).isRequired\n};\nexport default CustomDropzone;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/components/Dropzone/Dropzone.js"],"names":["React","useState","PropTypes","Dropzone","CustomDropzone","props","field","form","rest","error","touched","name","errors","filename","setFilename","file","setFile","handleOnDrop","files","rejectedFiles","curfile","reader","FileReader","addEventListener","result","readAsDataURL","e","setFieldValue","getRootProps","getInputProps","DatePicker","propTypes","objectOf","string","isRequired","instanceOf","Array"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,gBAArB;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA,MACrBC,KADqB,GACID,KADJ,CACrBC,KADqB;AAAA,MACdC,IADc,GACIF,KADJ,CACdE,IADc;AAAA,MACLC,IADK,4BACIH,KADJ;;AAE7B,MAAMI,KAAK,GAAGF,IAAI,CAACG,OAAL,CAAaJ,KAAK,CAACK,IAAnB,KAA4BJ,IAAI,CAACK,MAAL,CAAYN,KAAK,CAACK,IAAlB,CAA1C;;AAF6B,kBAGGV,QAAQ,CAAC,EAAD,CAHX;AAAA;AAAA,MAGtBY,QAHsB;AAAA,MAGZC,WAHY;;AAAA,mBAILb,QAAQ,CAAC,EAAD,CAJH;AAAA;AAAA,MAItBc,IAJsB;AAAA,MAIhBC,OAJgB;;AAK7B,WAASC,YAAT,CAAsBC,KAAtB,EAA6BC,aAA7B,EAA4C;AAC1C,QAAMC,OAAO,GAAGF,KAAK,CAAC,CAAD,CAArB;AACAJ,IAAAA,WAAW,CAACI,KAAK,CAAC,CAAD,CAAL,CAASP,IAAV,CAAX;AACA,QAAMU,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,IAAAA,MAAM,CAACE,gBAAP,CAAwB,MAAxB,EAAgC,YAAM;AACpCP,MAAAA,OAAO,CAACK,MAAM,CAACG,MAAR,CAAP;AACD,KAFD,EAEG,KAFH;AAGAH,IAAAA,MAAM,CAACI,aAAP,CAAqBL,OAArB;AACD;;AACD,SACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACgB,wBAAC,QAAD;AACA,MAAA,MAAM,EAAEH,YADR;AAEA,MAAA,QAAQ,EAAE,kBAACS,CAAD;AAAA,eAAOnB,IAAI,CAACoB,aAAL,CAAmBrB,KAAK,CAACK,IAAzB,EAA+Be,CAA/B,CAAP;AAAA,OAFV;AAGA,MAAA,QAAQ,EAAC,MAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIG;AAAA,UAAGE,YAAH,QAAGA,YAAH;AAAA,UAAiBC,aAAjB,QAAiBA,aAAjB;AAAA,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6CAASD,YAAY,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACE,+CAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMhB,QAAQ,KAAK,EAAb,GAAkB,kDAAlB,GAAuEA,QAA7E,CAFF,CADF,CADD;AAAA,KAJH;AAVhB;AAwBD;;AAEDiB,UAAU,CAACC,SAAX,GAAuB;AACrBzB,EAAAA,KAAK,EAAEJ,SAAS,CAAC8B,QAAV,CAAmB;AACxBrB,IAAAA,IAAI,EAAET,SAAS,CAAC+B;AADQ,GAAnB,EAEJC,UAHkB;AAIrB3B,EAAAA,IAAI,EAAEL,SAAS,CAAC8B,QAAV,CAAmB;AACvBtB,IAAAA,OAAO,EAAER,SAAS,CAACiC,UAAV,CAAqBC,KAArB,CADc;AAEvBxB,IAAAA,MAAM,EAAEV,SAAS,CAACiC,UAAV,CAAqBC,KAArB;AAFe,GAAnB,EAGHF;AAPkB,CAAvB;AAUA,eAAe9B,cAAf","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Dropzone from 'react-dropzone';\n\nfunction CustomDropzone(props) {\n  const { field, form, ...rest } = props;\n  const error = form.touched[field.name] && form.errors[field.name];\n  const [filename, setFilename] = useState('')\n  const [file, setFile] = useState('')\n  function handleOnDrop(files, rejectedFiles) {\n    const curfile = files[0]\n    setFilename(files[0].name)\n    const reader = new FileReader()\n    reader.addEventListener(\"load\", () => {\n      setFile(reader.result)\n    }, false)\n    reader.readAsDataURL(curfile)\n  }\n  return (\n  //   <MuiPickersUtilsProvider utils={DateFnsUtils} >\n  //   <DatePicker\n  //     {...field}\n  //     onChange={(e) => form.setFieldValue(field.name, e)}\n  //     {...rest}\n  //     error={error}\n  //     helperText={error}\n  //   />\n  //  </MuiPickersUtilsProvider>\n                  <Dropzone \n                  onDrop={handleOnDrop}\n                  onChange={(e) => form.setFieldValue(field.name, e)}\n                  multiple=\"true\">\n                    {({ getRootProps, getInputProps }) => (\n                      <section>\n                        <div {...getRootProps()}>\n                          <input {...getInputProps()} />\n                          <div>{filename === \"\" ? \"Drag and drop file here, or click to select file\" : filename}</div>\n                        </div>\n                      </section>\n                    )}\n                </Dropzone>\n  );\n}\n\nDatePicker.propTypes = {\n  field: PropTypes.objectOf({\n    name: PropTypes.string,\n  }).isRequired,\n  form: PropTypes.objectOf({\n    touched: PropTypes.instanceOf(Array),\n    errors: PropTypes.instanceOf(Array),\n  }).isRequired,\n};\n\nexport default CustomDropzone;"]},"metadata":{},"sourceType":"module"}