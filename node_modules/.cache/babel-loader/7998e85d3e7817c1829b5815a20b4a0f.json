{"ast":null,"code":"import _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/components/AddEmployeeForms/EmployeeInformation.js\";\nimport React, { useState, useContext } from 'react'; // import { makeStyles } from \"@material-ui/core/styles\";\n\nimport { FormLabel, RadioGroup, Radio, FormControlLabel, Button, TextField } from \"@material-ui/core\";\nimport { Field, Form } from \"formik\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { format } from \"date-fns\";\nimport { DatePicker, MuiPickersUtilsProvider } from \"material-ui-pickers\";\nimport { Formik } from 'formik';\nimport { EmployeeValidation } from 'lib/Yup/EmployeeValidation';\nimport { EmployeeContext } from 'views/Employee/AddEmployee';\nimport StepperNavigationButtons from 'views/Employee/StepperNavigationButtons';\nimport * as Yup from 'yup';\nimport { StepContext } from 'views/Employee/AddEmployee'; // const styles = {\n//     cardCategoryWhite: {\n//       color: \"rgba(255,255,255,.62)\",\n//       margin: \"0\",\n//       fontSize: \"14px\",\n//       marginTop: \"0\",\n//       marginBottom: \"0\"\n//     },\n//     cardTitleWhite: {\n//       color: \"#FFFFFF\",\n//       marginTop: \"0px\",\n//       minHeight: \"auto\",\n//       fontWeight: \"300\",\n//       fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n//       marginBottom: \"3px\",\n//       textDecoration: \"none\"\n//     }\n//   };\n\nvar ValidationSchema1 = Yup.object().shape({\n  fullName: Yup.string().min(2, 'too Short!').required('Required'),\n  preferredName: Yup.string() // birthDate: Yup.date()\n  //   .required('Required'),\n\n});\nvar initialValues2 = {\n  fullname: '',\n  preferredName: '',\n  birthDate: '',\n  gender: '',\n  maritalStatus: ''\n}; // const useStyles = makeStyles(styles);\n\nfunction EmployeeInformation(props) {\n  var _useContext = useContext(EmployeeContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      employeeData = _useContext2[0],\n      setEmployeeData = _useContext2[1];\n\n  var _useContext3 = useContext(StepContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      activeStep = _useContext4[0],\n      setActiveStep = _useContext4[1];\n\n  var _useState = useState(new Set()),\n      _useState2 = _slicedToArray(_useState, 2),\n      skipped = _useState2[0],\n      setSkipped = _useState2[1]; // const classes = useStyles();\n\n\n  var _useState3 = useState(new Date()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      birthDate = _useState4[0],\n      setBirthDate = _useState4[1]; // console.log(employeeData)\n\n\n  function handleDateChange(date) {\n    // setBirthDate(format(date, 'dd/MM/yyyy'))\n    setBirthDate(date);\n  }\n\n  return (// <div>\n    React.createElement(Formik, {\n      initialValues: {\n        fullName: '',\n        preferredName: '',\n        birthDate: '',\n        gender: '',\n        maritalStatus: ''\n      } // validationSchema={ValidationSchema1}\n      ,\n      onSubmit: function onSubmit(values) {\n        //handleNext()\n        // let newSkipped = skipped;\n        // const isStepSkipped = step => {\n        //   return skipped.has(step);\n        // };\n        // if (isStepSkipped(activeStep)) {\n        //   newSkipped = new Set(newSkipped.values());\n        //   newSkipped.delete(activeStep);\n        // }\n        // setActiveStep(prevActiveStep => prevActiveStep + 1);\n        // setSkipped(newSkipped);\n        // alert(\"fd\")\n        // setEmployeeData({\n        //   fullName:values.fullName,\n        //   maritalStatus:values.maritalStatus,\n        //   preferredName:values.preferredName,\n        //   birthDate:values.birthDate,\n        //   gender:values.gender})\n        // console.log(\"child\",employeeData)\n        console.log(\"values\", values);\n      },\n      render: function render(_ref) {\n        var errors = _ref.errors,\n            values = _ref.values,\n            touched = _ref.touched,\n            handleChange = _ref.handleChange,\n            handleSubmit = _ref.handleSubmit;\n        return React.createElement(Form, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(GridContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(GridItem, {\n          xs: 12,\n          sm: 12,\n          md: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(Field, {\n          label: \"Full Name(As on your ID)\",\n          id: \"fullName\",\n          name: \"fullName\",\n          value: values.firstName,\n          component: TextField,\n          onChange: handleChange,\n          fullWidth: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        })), React.createElement(GridItem, {\n          xs: 12,\n          sm: 12,\n          md: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, React.createElement(Field, {\n          label: \"Preferred Name\",\n          id: \"preferredName\",\n          value: values.preferredName,\n          name: \"preferredName\",\n          component: TextField,\n          onChange: handleChange,\n          fullWidth: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        })), React.createElement(GridItem, {\n          xs: 12,\n          sm: 12,\n          md: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(FormLabel, {\n          component: \"legend\",\n          style: {\n            textAlign: 'left'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, \"Birth Date\"), React.createElement(MuiPickersUtilsProvider, {\n          utils: DateFnsUtils,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, React.createElement(Field, {\n          component: DatePicker,\n          value: values.birthDate,\n          format: \"dd-MM-yyyy\",\n          placeholder: \"Enter date\",\n          onChange: handleChange //  label=\"Birth Date\"\n          ,\n          name: \"birthDate\",\n          id: \"birthDate\",\n          fullWidth: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }))), React.createElement(GridItem, {\n          xs: 12,\n          sm: 12,\n          md: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, React.createElement(FormLabel, {\n          component: \"legend\",\n          style: {\n            textAlign: 'left'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, \"Gender\"), React.createElement(Field, {\n          fullWidth: true,\n          id: \"gender\",\n          name: \"gender\",\n          value: values.gender,\n          error: errors.gender,\n          component: RadioGroup,\n          row: true,\n          onChange: handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, React.createElement(FormControlLabel, {\n          id: \"gender\",\n          label: \"Male\",\n          control: React.createElement(Radio, {\n            id: \"gender\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 171\n            },\n            __self: this\n          }),\n          value: \"male\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }), React.createElement(FormControlLabel, {\n          id: \"gender\",\n          value: \"female\",\n          control: React.createElement(Radio, {\n            id: \"gender\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 177\n            },\n            __self: this\n          }),\n          label: \"Female\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }))), React.createElement(GridItem, {\n          xs: 12,\n          sm: 12,\n          md: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, React.createElement(FormLabel, {\n          component: \"legend\",\n          style: {\n            textAlign: 'left'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }, \"Marital Status\"), React.createElement(Field, {\n          fullWidth: true,\n          id: \"maritalStatus\",\n          name: \"maritalStatus\" // aria-label=\"maritalStatus\"\n          ,\n          value: values.maritalStatus,\n          error: errors.maritalStatus,\n          component: RadioGroup,\n          row: true,\n          onChange: handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }, React.createElement(FormControlLabel, {\n          id: \"maritalStatus\",\n          label: \"Married\",\n          control: React.createElement(Radio, {\n            id: \"maritalStatus\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 197\n            },\n            __self: this\n          }),\n          value: \"married\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }), React.createElement(FormControlLabel, {\n          id: \"maritalStatus\",\n          value: \"single\",\n          control: React.createElement(Radio, {\n            id: \"maritalStatus\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 203\n            },\n            __self: this\n          }),\n          label: \"Single\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }), React.createElement(FormControlLabel, {\n          id: \"maritalStatus\",\n          value: \"other\",\n          control: React.createElement(Radio, {\n            id: \"maritalStatus\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 209\n            },\n            __self: this\n          }),\n          label: \"Other\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }))), React.createElement(GridItem, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }, React.createElement(StepperNavigationButtons, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }))));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }) // </div>\n\n  );\n}\n\nexport default EmployeeInformation;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/components/AddEmployeeForms/EmployeeInformation.js"],"names":["React","useState","useContext","FormLabel","RadioGroup","Radio","FormControlLabel","Button","TextField","Field","Form","GridItem","GridContainer","CustomInput","DateFnsUtils","format","DatePicker","MuiPickersUtilsProvider","Formik","EmployeeValidation","EmployeeContext","StepperNavigationButtons","Yup","StepContext","ValidationSchema1","object","shape","fullName","string","min","required","preferredName","initialValues2","fullname","birthDate","gender","maritalStatus","EmployeeInformation","props","employeeData","setEmployeeData","activeStep","setActiveStep","Set","skipped","setSkipped","Date","setBirthDate","handleDateChange","date","values","console","log","errors","touched","handleChange","handleSubmit","firstName","textAlign"],"mappings":"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","sourcesContent":["import React ,{useState, useContext} from 'react';\n// import { makeStyles } from \"@material-ui/core/styles\";\nimport { FormLabel,RadioGroup, Radio, FormControlLabel, Button, TextField } from \"@material-ui/core\";\nimport { Field, Form } from \"formik\"\n// core components\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { format } from \"date-fns\"\nimport { DatePicker, MuiPickersUtilsProvider} from \"material-ui-pickers\";\nimport { Formik } from 'formik'\nimport {EmployeeValidation} from 'lib/Yup/EmployeeValidation'  \nimport {EmployeeContext} from 'views/Employee/AddEmployee'\nimport  StepperNavigationButtons  from 'views/Employee/StepperNavigationButtons';\nimport * as Yup from 'yup'\nimport {StepContext} from 'views/Employee/AddEmployee'\n// const styles = {\n//     cardCategoryWhite: {\n//       color: \"rgba(255,255,255,.62)\",\n//       margin: \"0\",\n//       fontSize: \"14px\",\n//       marginTop: \"0\",\n//       marginBottom: \"0\"\n//     },\n//     cardTitleWhite: {\n//       color: \"#FFFFFF\",\n//       marginTop: \"0px\",\n//       minHeight: \"auto\",\n//       fontWeight: \"300\",\n//       fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n//       marginBottom: \"3px\",\n//       textDecoration: \"none\"\n//     }\n//   };\nconst ValidationSchema1 = Yup.object().shape({\n  fullName: Yup.string()\n    .min(2,'too Short!')\n    .required('Required'),\n  preferredName: Yup.string(),\n  // birthDate: Yup.date()\n  //   .required('Required'),\n   \n}); \nconst initialValues2={\n  fullname:'',\npreferredName:'',\nbirthDate:'',\ngender:'',\nmaritalStatus:'',}\n// const useStyles = makeStyles(styles);\nfunction EmployeeInformation(props) {\n    const [employeeData,setEmployeeData]=useContext(EmployeeContext)\n    const [activeStep, setActiveStep] = useContext(StepContext);\n    const [skipped, setSkipped] = useState(new Set());\n    // const classes = useStyles();\n    const [birthDate,setBirthDate]=useState(new Date())\n    // console.log(employeeData)\n    function handleDateChange(date){\n        // setBirthDate(format(date, 'dd/MM/yyyy'))\n        setBirthDate(date)\n    }\n    return (\n        // <div>\n          <Formik\n            initialValues={ \n         { fullName:'',\n        preferredName:'',\n        birthDate:'',\n        gender:'',\n        maritalStatus:''}}\n            // validationSchema={ValidationSchema1}\n            onSubmit={values => {\n              //handleNext()\n              // let newSkipped = skipped;\n              // const isStepSkipped = step => {\n              //   return skipped.has(step);\n              // };\n              // if (isStepSkipped(activeStep)) {\n              //   newSkipped = new Set(newSkipped.values());\n              //   newSkipped.delete(activeStep);\n              // }\n              // setActiveStep(prevActiveStep => prevActiveStep + 1);\n              // setSkipped(newSkipped);\n\n\n              // alert(\"fd\")\n              // setEmployeeData({\n              //   fullName:values.fullName,\n              //   maritalStatus:values.maritalStatus,\n              //   preferredName:values.preferredName,\n              //   birthDate:values.birthDate,\n              //   gender:values.gender})\n              // console.log(\"child\",employeeData)\n            \n              console.log(\"values\",values)\n              }} \n            render= {({errors,values, touched ,handleChange, handleSubmit}) => (\n              <Form>\n                {/* {console.group('actual',employeeData)} */}\n              <GridContainer>\n                <GridItem xs={12} sm={12} md={12}>\n                  {/* we can use CustomInput also insted of field */}\n                  <Field\n                    label=\"Full Name(As on your ID)\"\n                    id=\"fullName\"\n                    name=\"fullName\"\n                    value={values.firstName}\n                    component={TextField}\n                    onChange={handleChange}\n                    fullWidth\n                \n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={12}>\n                  <Field\n                    label=\"Preferred Name\"\n                    id=\"preferredName\"\n                    value={values.preferredName}\n                    name=\"preferredName\"\n                    component={TextField}\n                    onChange={handleChange}\n                    fullWidth\n                  />\n                </GridItem>\n               \n                <GridItem xs={12} sm={12} md={12}>\n                    <FormLabel component=\"legend\" style={{textAlign:'left'}}>Birth Date</FormLabel>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils} >\n                      <Field\n                      component={DatePicker}\n                      value={values.birthDate} \n                         format='dd-MM-yyyy' \n                         placeholder='Enter date' \n                         onChange={handleChange} \n                        //  label=\"Birth Date\"\n                         name=\"birthDate\"\n                          id=\"birthDate\" \n                          fullWidth\n                      ></Field>\n                         {/* <DatePicker \n                         name=\"birthDate\"\n                          id=\"birthDate\" \n                          fullWidth \n                         value={birthDate} \n                         format='dd-MM-yyyy' \n                         placeholder='Enter date' \n                         onChange={handleDateChange} \n                         label=\"Birth Date\"\n                         /> */}\n                      \n                    </MuiPickersUtilsProvider>\n                </GridItem>\n              \n                <GridItem xs={12} sm={12} md={12}>\n                <FormLabel component=\"legend\" style={{textAlign:'left'}}>Gender</FormLabel>\n                    <Field fullWidth\n                      id=\"gender\"\n                      name=\"gender\"\n                 \n                      value={values.gender}\n                      error={errors.gender}\n                      component={RadioGroup}\n                      row\n                      \n                      onChange={handleChange}\n                    >\n                    <FormControlLabel\n                        id=\"gender\"\n                        label=\"Male\"\n                        control={<Radio id=\"gender\" />}\n                        value=\"male\"\n                      />\n                      <FormControlLabel\n                        id=\"gender\"\n                        value=\"female\"\n                        control={<Radio id=\"gender\"/>}\n                        label=\"Female\"\n                      />\n                    </Field>\n                </GridItem>\n                <GridItem xs={12} sm={12} md={12}>\n                <FormLabel component=\"legend\" style={{textAlign:'left'}}>Marital Status</FormLabel>\n                    <Field fullWidth\n                      id=\"maritalStatus\"\n                      name=\"maritalStatus\"\n                      // aria-label=\"maritalStatus\"\n                      value={values.maritalStatus}\n                      error={errors.maritalStatus}\n                      component={RadioGroup}\n                      row\n                      onChange={handleChange}\n                    >\n                    <FormControlLabel\n                        id=\"maritalStatus\"\n                        label=\"Married\"\n                        control={<Radio id=\"maritalStatus\" />}\n                        value=\"married\"\n                      />\n                      <FormControlLabel\n                        id=\"maritalStatus\"\n                        value=\"single\"\n                        control={<Radio id=\"maritalStatus\"/>}\n                        label=\"Single\"\n                      />\n                    <FormControlLabel\n                        id=\"maritalStatus\"\n                        value=\"other\"\n                        control={<Radio id=\"maritalStatus\"/>}\n                        label=\"Other\"\n                      />\n                    </Field>\n                  \n                </GridItem>\n                <GridItem>\n                <StepperNavigationButtons />\n                {/* <Button type=\"submit\">fds</Button> */}\n                </GridItem>\n              </GridContainer>\n              </Form>\n               )\n               } \n            >\n              \n              </Formik>\n              // </div>\n    );\n}\n\nexport default EmployeeInformation;"]},"metadata":{},"sourceType":"module"}