{"ast":null,"code":"var _jsxFileName = \"/home/bipin/Downloads/team66/src/components/Dropzone/Dropzone.js\";\nimport { Box } from '@material-ui/core';\nimport { default as React, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone'; // import { fileIcon } from '../load-steps/UploadDocs';\n\nexport default function CustomDropzone(_ref) {\n  var callBack = _ref.callBack,\n      list = _ref.list;\n  var onDrop = useCallback(function (acceptedFiles) {\n    acceptedFiles.forEach(function (file) {\n      list.push(file);\n      callBack(list);\n    });\n  }, []);\n\n  var _useDropzone = useDropzone({\n    onDrop: onDrop\n  }),\n      getRootProps = _useDropzone.getRootProps,\n      getInputProps = _useDropzone.getInputProps,\n      isDragActive = _useDropzone.isDragActive; //   const handleDelete = async name => {\n  //     try {\n  //       let exportsAttachments = load.exports.exportsAttachments.filter(atch => atch.name !== name);\n  //       setLoad({\n  //         ...load,\n  //         exportsAttachments,\n  //       });\n  //     } catch (delError) {\n  //       //   openSnackbar('error', delError.message);\n  //     }\n  //   };\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", Object.assign({}, getRootProps(), {\n    style: {\n      height: '100px',\n      minWidth: '300px',\n      backgroundColor: '#f1f1ff',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      border: '2px dotted #000080',\n      borderRadius: '5px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), isDragActive ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Drop the files here ...\") : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Drag 'n' drop files here\")), React.createElement(Box, {\n    p: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, list.map(function (a) {\n    return React.createElement(\"div\", {\n      style: {\n        borderRadius: '5px',\n        backgroundColor: '#9830b0',\n        padding: '5px 10px',\n        letterSpacing: '2px',\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        marginBottom: '1em',\n        display: 'inline-flex',\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        fontSize: '20px',\n        position: 'relative',\n        marginRight: '0.5em',\n        width: '20px',\n        cursor: 'pointer'\n      } // onClick={() => {\n      //   handleDelete(a.name);\n      // }}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"\\xD7\"), React.createElement(\"a\", {\n      href: typeof a === 'string' ? a : a.url ? a.url : URL.createObjectURL(a),\n      target: \"_blank\",\n      style: {\n        color: 'white',\n        textDecoration: 'none',\n        textTransform: 'uppercase',\n        fontSize: '10px',\n        fontWeight: '500',\n        width: '100%',\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, typeof a === 'string' ? 'file' : a.name), React.createElement(\"span\", {\n      style: {\n        position: 'relative',\n        color: '#9db7c7',\n        zIndex: '0',\n        borderRadius: '100%',\n        display: 'inline-flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }));\n  })));\n} // import React, { useState, useContext } from 'react';\n// import PropTypes from 'prop-types';\n// import Dropzone from 'react-dropzone';\n// // import {DropzoneArea} from 'material-ui-dropzone'\n// import Chip from '@material-ui/core/Chip';\n// import Typography from '@material-ui/core/Typography';\n// const dropzoneStyle = {\n//   width: \"100%\",\n//   height: \"auto\",\n//   borderWidth: 2,\n//   borderColor: \"rgb(102, 102, 102)\",\n//   borderStyle: \"dashed\",\n//   borderRadius: 5,\n// }\n// function CustomDropzone(props) {\n//   const { field, form,values, ...rest } = props;\n//   console.log(\"docs\",document)\n//   const error = form.touched[field.name] && form.errors[field.name];\n//   const [filename, setFilename] = useState('')\n//   const [file, setFile] = useState('')\n//   const handleDelete = () => {\n//     console.info('You clicked the delete icon.');\n//   };\n//   // function handleOnDrop(files, rejectedFiles) {\n//   //   const curfile = files[0]\n//   //   setFilename(files[0].name)\n//   //   form.setFieldValue(field.name, files[0].name)\n//   //   const reader = new FileReader()\n//   //   reader.addEventListener(\"load\", () => {\n//   //     setFile(reader.result)\n//   //   }, false)\n//   //   reader.readAsDataURL(curfile)\n//   // }\n//   function handleOnDrop(files)  {\n//     // Push all the axios request promise into a single array\n//     var data=[]\n//     var name=[]\n//     const uploaders = files.map(file => {\n//       // Initial FormData\n//       console.log(file)\n//       // const formData = new FormData();\n//       // formData.append(\"file\", file);\n//       data.push(file)\n//       name.push(file.name+\" \")\n//       form.setFieldValue(field.name, data)\n//     console.log(\"data\",data)\n//     }\n//     )\n//     // setFilename(document)\n//     setFilename(name)\n//     // console.log(\"uploaders\",uploaders)\n//   }\n//   return (\n//     <Dropzone \n//       onDrop={handleOnDrop}\n//       // onChange={(e) => form.setFieldValue(field.name, e)}\n//       multiple=\"true\">\n//       {({ getRootProps, getInputProps, isDragActive }) => (\n//         <section>\n//           <div {...getRootProps()}>\n//             <input {...getInputProps()} />\n//             <div><Typography variant=\"body1\" component=\"h2\">\n//             {isDragActive?\"Drop it like it's hot!\":\"Click me or drag a file to upload\"}\n// </Typography><br/>{filename===\"\" ? \"\" : filename.map(f=>{return (<div><Chip label={f} color=\"primary\" /><br/><br/></div>)})}\n// {/* onDelete={handleDelete} */}\n//           </div>\n//           </div>\n//         </section>\n//       )}\n//     </Dropzone>\n//   );\n// }\n// CustomDropzone.propTypes = {\n//   field: PropTypes.objectOf({\n//     name: PropTypes.string,\n//   }).isRequired,\n//   form: PropTypes.objectOf({\n//     touched: PropTypes.instanceOf(Array),\n//     errors: PropTypes.instanceOf(Array),\n//   }).isRequired,\n// };\n// export default CustomDropzone;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/components/Dropzone/Dropzone.js"],"names":["Box","default","React","useCallback","useDropzone","CustomDropzone","callBack","list","onDrop","acceptedFiles","forEach","file","push","getRootProps","getInputProps","isDragActive","height","minWidth","backgroundColor","display","alignItems","justifyContent","border","borderRadius","map","a","padding","letterSpacing","width","marginBottom","color","fontSize","position","marginRight","cursor","url","URL","createObjectURL","textDecoration","textTransform","fontWeight","textAlign","name","zIndex"],"mappings":"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","sourcesContent":["import { Box } from '@material-ui/core';\nimport { default as React, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\n// import { fileIcon } from '../load-steps/UploadDocs';\n\nexport default function CustomDropzone({ callBack, list }) {\n  const onDrop = useCallback(acceptedFiles => {\n    acceptedFiles.forEach(file => {\n      list.push(file);\n      callBack(list);\n    });\n  }, []);\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n\n  //   const handleDelete = async name => {\n  //     try {\n  //       let exportsAttachments = load.exports.exportsAttachments.filter(atch => atch.name !== name);\n  //       setLoad({\n  //         ...load,\n  //         exportsAttachments,\n  //       });\n  //     } catch (delError) {\n  //       //   openSnackbar('error', delError.message);\n  //     }\n  //   };\n\n  return (\n    <div>\n      <div\n        {...getRootProps()}\n        style={{\n          height: '100px',\n          minWidth: '300px',\n          backgroundColor: '#f1f1ff',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          border: '2px dotted #000080',\n          borderRadius: '5px',\n        }}\n      >\n        <input {...getInputProps()} />\n        {isDragActive ? (\n          <p>Drop the files here ...</p>\n        ) : (\n          <p>\n            Drag 'n' drop files here\n          </p>\n        )}\n      </div>\n      <Box p={2}>\n        {list.map(a => {\n          return (\n            <div\n              style={{\n                borderRadius: '5px',\n                backgroundColor: '#9830b0',\n                padding: '5px 10px',\n                letterSpacing: '2px',\n                width: '100%',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                marginBottom: '1em',\n                display: 'inline-flex',\n                color: 'white',\n              }}\n            >\n              <span\n                style={{\n                  fontSize: '20px',\n                  position: 'relative',\n                  marginRight: '0.5em',\n                  width: '20px',\n                  cursor: 'pointer',\n                }}\n                // onClick={() => {\n                //   handleDelete(a.name);\n                // }}\n              >\n                &times;\n              </span>\n              <a\n                href={typeof a === 'string' ? a : a.url ? a.url : URL.createObjectURL(a)}\n                target=\"_blank\"\n                style={{\n                  color: 'white',\n                  textDecoration: 'none',\n                  textTransform: 'uppercase',\n                  fontSize: '10px',\n                  fontWeight: '500',\n                  width: '100%',\n                  textAlign: 'center',\n                }}\n              >\n                {typeof a === 'string' ? 'file' : a.name}\n              </a>\n              <span\n                style={{\n                  position: 'relative',\n                  color: '#9db7c7',\n                  zIndex: '0',\n                  borderRadius: '100%',\n                  display: 'inline-flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n              >\n                {/* {fileIcon(a.type)} */}\n              </span>\n            </div>\n          );\n        })}\n      </Box>\n    </div>\n  );\n}\n\n\n\n\n\n\n\n\n// import React, { useState, useContext } from 'react';\n// import PropTypes from 'prop-types';\n// import Dropzone from 'react-dropzone';\n// // import {DropzoneArea} from 'material-ui-dropzone'\n// import Chip from '@material-ui/core/Chip';\n// import Typography from '@material-ui/core/Typography';\n\n// const dropzoneStyle = {\n//   width: \"100%\",\n//   height: \"auto\",\n//   borderWidth: 2,\n//   borderColor: \"rgb(102, 102, 102)\",\n//   borderStyle: \"dashed\",\n//   borderRadius: 5,\n// }\n// function CustomDropzone(props) {\n//   const { field, form,values, ...rest } = props;\n//   console.log(\"docs\",document)\n//   const error = form.touched[field.name] && form.errors[field.name];\n//   const [filename, setFilename] = useState('')\n//   const [file, setFile] = useState('')\n//   const handleDelete = () => {\n//     console.info('You clicked the delete icon.');\n//   };\n//   // function handleOnDrop(files, rejectedFiles) {\n//   //   const curfile = files[0]\n//   //   setFilename(files[0].name)\n//   //   form.setFieldValue(field.name, files[0].name)\n//   //   const reader = new FileReader()\n//   //   reader.addEventListener(\"load\", () => {\n//   //     setFile(reader.result)\n//   //   }, false)\n//   //   reader.readAsDataURL(curfile)\n//   // }\n//   function handleOnDrop(files)  {\n//     // Push all the axios request promise into a single array\n//     var data=[]\n//     var name=[]\n//     const uploaders = files.map(file => {\n//       // Initial FormData\n//       console.log(file)\n//       // const formData = new FormData();\n//       // formData.append(\"file\", file);\n//       data.push(file)\n//       name.push(file.name+\" \")\n//       form.setFieldValue(field.name, data)\n//     console.log(\"data\",data)\n//     }\n//     )\n//     // setFilename(document)\n//     setFilename(name)\n   \n//     // console.log(\"uploaders\",uploaders)\n    \n//   }\n  \n//   return (\n//     <Dropzone \n    \n//       onDrop={handleOnDrop}\n//       // onChange={(e) => form.setFieldValue(field.name, e)}\n//       multiple=\"true\">\n//       {({ getRootProps, getInputProps, isDragActive }) => (\n//         <section>\n//           <div {...getRootProps()}>\n//             <input {...getInputProps()} />\n            \n//             <div><Typography variant=\"body1\" component=\"h2\">\n//             {isDragActive?\"Drop it like it's hot!\":\"Click me or drag a file to upload\"}\n// </Typography><br/>{filename===\"\" ? \"\" : filename.map(f=>{return (<div><Chip label={f} color=\"primary\" /><br/><br/></div>)})}\n// {/* onDelete={handleDelete} */}\n//           </div>\n//           </div>\n//         </section>\n//       )}\n//     </Dropzone>\n//   );\n// }\n\n// CustomDropzone.propTypes = {\n//   field: PropTypes.objectOf({\n//     name: PropTypes.string,\n//   }).isRequired,\n//   form: PropTypes.objectOf({\n//     touched: PropTypes.instanceOf(Array),\n//     errors: PropTypes.instanceOf(Array),\n//   }).isRequired,\n// };\n\n// export default CustomDropzone;"]},"metadata":{},"sourceType":"module"}