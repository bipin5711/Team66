{"ast":null,"code":"import _defineProperty from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/components/AddEmployeeForms/JobDetails.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from 'react';\nimport { FormLabel, RadioGroup, Radio, FormControlLabel, Button, TextField } from \"@material-ui/core\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { DatePicker, MuiPickersUtilsProvider } from \"material-ui-pickers\";\nimport { Formik, Field, Form } from 'formik';\nimport { EmployeeContext } from 'views/Employee/AddEmployee';\nimport StepperNavigationButtons from 'views/Employee/StepperNavigationButtons';\nimport * as Yup from 'yup';\nimport { StepContext } from 'views/Employee/AddEmployee';\nvar ValidationSchema = Yup.object().shape({\n  hireDate: Yup.date().required('Required'),\n  salary: Yup.number(),\n  currentSalary: Yup.number().required('Required')\n});\n\nfunction JobDetails(props) {\n  var _useContext = useContext(EmployeeContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      employeeData = _useContext2[0],\n      setEmployeeData = _useContext2[1];\n\n  var _useContext3 = useContext(StepContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      activeStep = _useContext4[0],\n      setActiveStep = _useContext4[1];\n\n  var _useState = useState(new Set()),\n      _useState2 = _slicedToArray(_useState, 2),\n      skipped = _useState2[0],\n      setSkipped = _useState2[1];\n\n  var _useState3 = useState(new Date()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      hireDate = _useState4[0],\n      setHireDate = _useState4[1];\n\n  function handleDateChange(date) {\n    // setHireDate(format(date, 'dd/MM/yyyy'))\n    setHireDate(date);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    initialValues: employeeData // validationSchema={ValidationSchema}\n    ,\n    onSubmit: function onSubmit(values) {\n      //handleNext()\n      var newSkipped = skipped;\n\n      var isStepSkipped = function isStepSkipped(step) {\n        return skipped.has(step);\n      };\n\n      if (isStepSkipped(activeStep)) {\n        newSkipped = new Set(newSkipped.values());\n        newSkipped[\"delete\"](activeStep);\n      }\n\n      setActiveStep(function (prevActiveStep) {\n        return prevActiveStep + 1;\n      });\n      setSkipped(newSkipped);\n      alert(\"fd\");\n      setEmployeeData(_objectSpread({}, employeeData, {\n        fullName: values.fullName,\n        maritalStatus: values.maritalStatus,\n        preferredName: values.preferredName,\n        birthDate: birthDate,\n        gender: values.gender\n      }));\n      console.log(\"information\", employeeData);\n    },\n    render: function render(_ref) {\n      var errors = _ref.errors,\n          values = _ref.values,\n          touched = _ref.touched,\n          handleChange = _ref.handleChange,\n          handleSubmit = _ref.handleSubmit;\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Salary\" // placeholder=\"Please Provide salary when you have joined\"\n        ,\n        helperText: \"Please Provide salary when you have joined\",\n        id: \"fullName\",\n        name: \"fullName\",\n        value: values.fullName,\n        component: TextField,\n        onChange: handleChange,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Current Salary\",\n        id: \"currentSalary\",\n        helperText: \"Please Provide salary when you have joined\",\n        value: values.preferredName,\n        name: \"preferredName\",\n        component: TextField,\n        onChange: handleChange,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        style: {\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Hire Date\"), React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        name: \"hireDate\",\n        id: \"hireDate\",\n        fullWidth: true,\n        value: hireDate,\n        format: \"dd-MM-yyyy\",\n        placeholder: \"Enter date\",\n        onChange: handleDateChange,\n        label: \"Hire Date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }))), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        style: {\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Gender\"), React.createElement(Field, {\n        fullWidth: true,\n        id: \"gender\",\n        name: \"gender\",\n        value: values.gender,\n        error: errors.gender,\n        component: RadioGroup,\n        row: true,\n        onChange: handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        id: \"gender\",\n        label: \"Male\",\n        control: React.createElement(Radio, {\n          id: \"gender\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }),\n        value: \"male\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        id: \"gender\",\n        value: \"female\",\n        control: React.createElement(Radio, {\n          id: \"gender\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }),\n        label: \"Female\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }))), React.createElement(GridItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(StepperNavigationButtons, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(DatePicker, {\n    name: \"hireDate\",\n    id: \"hireDate\",\n    fullWidth: true,\n    value: hireDate,\n    format: \"dd-MM-yyyy\",\n    placeholder: \"Enter date\",\n    onChange: handleDateChange,\n    label: \"Hire Date\",\n    helperText: \"Please provide date of your joining\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }))), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Salary\" // placeholder=\"Please Provide salary when you have joined\"\n    ,\n    id: \"salary\",\n    helperText: \"Please Provide salary when you have joined\" // formControlProps={{\n    //   fullWidth: true\n    // }}\n    ,\n    fullWidth: true // inputProps={{\n    //   disabled: true\n    // }}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Current Salary\",\n    id: \"currentSalary\",\n    helperText: \"Please Provide salary when you have joined\",\n    fullWidth: true // formControlProps={{\n    //   fullWidth: true\n    // }}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    component: \"legend\",\n    style: {\n      textAlign: 'left'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, \"Have you signed/agreed any bond?\"), React.createElement(Field, {\n    fullWidth: true,\n    id: \"bond\" //   label=\"Have you signed/agreed any bond?\"\n    // aria-label=\"gender\"\n    //   value={values.gender}\n    //   error={errors.gender}\n    ,\n    component: RadioGroup,\n    row: true //   onChange={handleChange}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    id: \"bond\",\n    label: \"1 Year\",\n    control: React.createElement(Radio, {\n      id: \"bond\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }),\n    value: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    id: \"bond\",\n    value: \"2\",\n    control: React.createElement(Radio, {\n      id: \"bond\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }),\n    label: \"2 Year\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    id: \"bond\",\n    value: \"0\",\n    control: React.createElement(Radio, {\n      id: \"bond\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }),\n    label: \"No\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  })))));\n}\n\nexport default JobDetails;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/components/AddEmployeeForms/JobDetails.js"],"names":["React","useState","useContext","FormLabel","RadioGroup","Radio","FormControlLabel","Button","TextField","GridItem","GridContainer","DateFnsUtils","DatePicker","MuiPickersUtilsProvider","Formik","Field","Form","EmployeeContext","StepperNavigationButtons","Yup","StepContext","ValidationSchema","object","shape","hireDate","date","required","salary","number","currentSalary","JobDetails","props","employeeData","setEmployeeData","activeStep","setActiveStep","Set","skipped","setSkipped","Date","setHireDate","handleDateChange","values","newSkipped","isStepSkipped","step","has","prevActiveStep","alert","fullName","maritalStatus","preferredName","birthDate","gender","console","log","errors","touched","handleChange","handleSubmit","textAlign"],"mappings":"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","sourcesContent":["import React ,{useState, useContext} from 'react';\nimport { FormLabel,RadioGroup, Radio, FormControlLabel, Button, TextField } from \"@material-ui/core\";\n// core components\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { DatePicker, MuiPickersUtilsProvider} from \"material-ui-pickers\";\nimport { Formik , Field, Form} from 'formik'\nimport {EmployeeContext} from 'views/Employee/AddEmployee'\nimport  StepperNavigationButtons  from 'views/Employee/StepperNavigationButtons';\nimport * as Yup from 'yup'\nimport {StepContext} from 'views/Employee/AddEmployee'\n\nconst ValidationSchema = Yup.object().shape({\n  hireDate: Yup.date()\n    .required('Required'),\n  salary: Yup.number(),\n  currentSalary: Yup.number()\n    .required('Required'),\n   \n}); \nfunction JobDetails(props) {\n  const [employeeData,setEmployeeData]=useContext(EmployeeContext)\n  const [activeStep, setActiveStep] = useContext(StepContext);\n  const [skipped, setSkipped] = useState(new Set());\n    const [hireDate,setHireDate]=useState(new Date())\n    function handleDateChange(date){\n        // setHireDate(format(date, 'dd/MM/yyyy'))\n        setHireDate(date)\n    }\n    return (\n        <div>\n       <Formik\n            initialValues={employeeData}\n            // validationSchema={ValidationSchema}\n            onSubmit={values => {\n              //handleNext()\n              let newSkipped = skipped;\n              const isStepSkipped = step => {\n                return skipped.has(step);\n              };\n              if (isStepSkipped(activeStep)) {\n                newSkipped = new Set(newSkipped.values());\n                newSkipped.delete(activeStep);\n              }\n              setActiveStep(prevActiveStep => prevActiveStep + 1);\n              setSkipped(newSkipped);\n\n\n              alert(\"fd\")\n              setEmployeeData({...employeeData,\n                fullName:values.fullName,\n                maritalStatus:values.maritalStatus,\n                preferredName:values.preferredName,\n                birthDate:birthDate,\n                gender:values.gender})\n              console.log(\"information\",employeeData)\n              }} \n            render= {({errors,values, touched ,handleChange, handleSubmit}) => (\n              <Form>\n              <GridContainer>\n                <GridItem xs={12} sm={12} md={12}>\n                  {/* we can use CustomInput also insted of field */}\n                  <Field\n                    label=\"Salary\"\n                    // placeholder=\"Please Provide salary when you have joined\"\n                   \n                    helperText=\"Please Provide salary when you have joined\"\n                    id=\"fullName\"\n                    name=\"fullName\"\n                    value={values.fullName}\n                    component={TextField}\n                    onChange={handleChange}\n                    fullWidth\n                \n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={12}>\n                  <Field\n                    label=\"Current Salary\"\n                    id=\"currentSalary\"\n                    helperText=\"Please Provide salary when you have joined\"\n                    value={values.preferredName}\n                    name=\"preferredName\"\n                    component={TextField}\n                    onChange={handleChange}\n                    fullWidth\n                  />\n                </GridItem>\n               \n                <GridItem xs={12} sm={12} md={12}>\n                    <FormLabel component=\"legend\" style={{textAlign:'left'}}>Hire Date</FormLabel>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils} >\n                   \n                         <DatePicker \n                         name=\"hireDate\" \n                         id=\"hireDate\" \n                          fullWidth \n                         value={hireDate} \n                         format='dd-MM-yyyy' \n                         placeholder='Enter date' \n                         onChange={handleDateChange} \n                         label=\"Hire Date\"\n                         />\n                      \n                    </MuiPickersUtilsProvider>\n                </GridItem>\n              \n                <GridItem xs={12} sm={12} md={12}>\n                <FormLabel component=\"legend\" style={{textAlign:'left'}}>Gender</FormLabel>\n                    <Field fullWidth\n                      id=\"gender\"\n                      name=\"gender\"\n                 \n                      value={values.gender}\n                      error={errors.gender}\n                      component={RadioGroup}\n                      row\n                      \n                      onChange={handleChange}\n                    >\n                    <FormControlLabel\n                        id=\"gender\"\n                        label=\"Male\"\n                        control={<Radio id=\"gender\" />}\n                        value=\"male\"\n                      />\n                      <FormControlLabel\n                        id=\"gender\"\n                        value=\"female\"\n                        control={<Radio id=\"gender\"/>}\n                        label=\"Female\"\n                      />\n                    </Field>\n                </GridItem>\n              \n                <GridItem>\n                <StepperNavigationButtons />\n                {/* <Button type=\"submit\">fds</Button> */}\n                </GridItem>\n              </GridContainer>\n              </Form>\n               )\n               } \n            >\n              \n              </Formik>\n              <GridContainer>\n              <GridItem xs={12} sm={12} md={12}>\n                    {/* <FormLabel component=\"legend\" style={{textAlign:'left'}}>Birth Date</FormLabel> */}\n                    <MuiPickersUtilsProvider utils={DateFnsUtils} >\n                         <DatePicker name=\"hireDate\" id=\"hireDate\" fullWidth \n                         value={hireDate} \n                         format='dd-MM-yyyy' \n                         placeholder='Enter date' \n                         onChange={handleDateChange} \n                         label=\"Hire Date\"\n                         helperText=\"Please provide date of your joining\"\n                         />\n                    \n                    </MuiPickersUtilsProvider>\n                </GridItem>\n                <GridItem xs={12} sm={12} md={12}>\n                  <TextField\n                    label=\"Salary\"\n                    // placeholder=\"Please Provide salary when you have joined\"\n                    id=\"salary\"\n                    helperText=\"Please Provide salary when you have joined\"\n                    // formControlProps={{\n                    //   fullWidth: true\n                    // }}\n                    fullWidth\n                    // inputProps={{\n                    //   disabled: true\n                    // }}\n                  />\n                </GridItem>\n                {/* Use customInput instead of textfield in case of any errors */}\n                <GridItem xs={12} sm={12} md={12}>\n                  <TextField\n                    label=\"Current Salary\"\n                    id=\"currentSalary\"\n                    helperText=\"Please Provide salary when you have joined\"\n                    fullWidth\n                    // formControlProps={{\n                    //   fullWidth: true\n                    // }}\n                  />\n                </GridItem>\n               \n               \n              \n                <GridItem xs={12} sm={12} md={12}>\n                <FormLabel component=\"legend\" style={{textAlign:'left'}}>Have you signed/agreed any bond?</FormLabel>\n                    <Field fullWidth\n                      id=\"bond\"\n                    //   label=\"Have you signed/agreed any bond?\"\n                      // aria-label=\"gender\"\n                    //   value={values.gender}\n                    //   error={errors.gender}\n                      component={RadioGroup}\n                      row\n                      \n                    //   onChange={handleChange}\n                    >\n                    <FormControlLabel\n                        id=\"bond\"\n                        label=\"1 Year\"\n                        control={<Radio id=\"bond\" />}\n                        value=\"1\"\n                      />\n                      <FormControlLabel\n                        id=\"bond\"\n                        value=\"2\"\n                        control={<Radio id=\"bond\"/>}\n                        label=\"2 Year\"\n                      />\n\n                    <FormControlLabel\n                        id=\"bond\"\n                        value=\"0\"\n                        control={<Radio id=\"bond\"/>}\n                        label=\"No\"\n                      />\n                    </Field>\n                </GridItem>\n                \n              </GridContainer>\n              \n             {/*</CardBody>\n            <CardFooter>\n              <Button color=\"primary\">Update Profile</Button>\n            </CardFooter> \n          </Card>\n        </GridItem> */}\n        {/* <GridItem xs={12} sm={12} md={4}>\n          <Card profile>\n            <CardAvatar profile>\n              <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                <img src={avatar} alt=\"...\" />\n              </a>\n            </CardAvatar>\n            <CardBody profile>\n              <h6 className={classes.cardCategory}>CEO / CO-FOUNDER</h6>\n              <h4 className={classes.cardTitle}>Alec Thompson</h4>\n              <p className={classes.description}>\n                Don{\"'\"}t be scared of the truth because we need to restart the\n                human foundation in truth And I love you like Kanye loves Kanye\n                I love Rick Owens’ bed design but the back is...\n              </p>\n              <Button color=\"primary\" round>\n                Follow\n              </Button>\n            </CardBody>\n          </Card>\n        </GridItem> */}\n      {/* </GridContainer> */}\n    </div>\n    );\n}\n\nexport default JobDetails;"]},"metadata":{},"sourceType":"module"}