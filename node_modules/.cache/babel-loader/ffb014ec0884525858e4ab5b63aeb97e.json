{"ast":null,"code":"import _defineProperty from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/components/AddEmployeeForms/EmployeeInformation.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from 'react';\nimport { FormLabel, Radio, FormControlLabel } from \"@material-ui/core\";\nimport { TextField, RadioGroup } from 'formik-material-ui';\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { DatePicker, MuiPickersUtilsProvider } from \"material-ui-pickers\";\nimport { Formik, Field, Form } from 'formik';\nimport StepperNavigationButtons from 'components/Stepper/StepperNavigationButtons';\nimport * as Yup from 'yup';\nimport { StepContext, EmployeeContext } from 'views/Employee/Add';\nimport { makeStyles } from \"@material-ui/core/styles\";\nvar validationSchema = Yup.object().shape({\n  fullName: Yup.string().min(2, 'too Short!').required('Required'),\n  preferredName: Yup.string() // birthDate: Yup.date()\n  //   .required('Required'),\n\n});\nvar customField = makeStyles({\n  field: {\n    marginTop: \"16px\"\n  }\n});\n\nfunction EmployeeInformation(props) {\n  var _useContext = useContext(EmployeeContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      employeeData = _useContext2[0],\n      setEmployeeData = _useContext2[1];\n\n  var _useContext3 = useContext(StepContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      activeStep = _useContext4[0],\n      setActiveStep = _useContext4[1];\n\n  var _useState = useState(new Set()),\n      _useState2 = _slicedToArray(_useState, 2),\n      skipped = _useState2[0],\n      setSkipped = _useState2[1];\n\n  var _useState3 = useState(new Date()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      birthDate = _useState4[0],\n      setBirthDate = _useState4[1];\n\n  function handleDateChange(date) {\n    // setBirthDate(format(date, 'dd/MM/yyyy'))\n    setBirthDate(date);\n  }\n\n  return React.createElement(Formik, {\n    initialValues: employeeData,\n    validationSchema: validationSchema,\n    onSubmit: function onSubmit(values) {\n      //handleNext()\n      var newSkipped = skipped;\n\n      var isStepSkipped = function isStepSkipped(step) {\n        return skipped.has(step);\n      };\n\n      if (isStepSkipped(activeStep)) {\n        newSkipped = new Set(newSkipped.values());\n        newSkipped[\"delete\"](activeStep);\n      }\n\n      setActiveStep(function (prevActiveStep) {\n        return prevActiveStep + 1;\n      });\n      setSkipped(newSkipped);\n      setEmployeeData(_objectSpread({}, employeeData, {\n        fullName: values.fullName,\n        maritalStatus: values.maritalStatus,\n        preferredName: values.preferredName,\n        birthDate: birthDate,\n        gender: values.gender\n      }));\n    },\n    render: function render() {\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Full Name(As on your ID)\",\n        id: \"fullName\",\n        name: \"fullName\",\n        component: TextField // value={values.fullName}\n        // onChange={handleChange}\n        ,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Preferred Name\",\n        id: \"preferredName\",\n        name: \"preferredName\",\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }))), React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        style: {\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Birth Date\"), React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        name: \"birthDate\",\n        id: \"birthDate\",\n        fullWidth: true,\n        value: birthDate,\n        format: \"dd-MM-yyyy\",\n        placeholder: \"Enter date\",\n        onChange: handleDateChange // label=\"Birth Date\"\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }))), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        style: {\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Gender\"), React.createElement(Field, {\n        fullWidth: true,\n        id: \"gender\",\n        name: \"gender\",\n        component: RadioGroup,\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        id: \"gender\",\n        label: \"Male\",\n        control: React.createElement(Radio, {\n          id: \"gender\",\n          color: \"secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }),\n        value: \"male\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        id: \"gender\",\n        value: \"female\",\n        control: React.createElement(Radio, {\n          id: \"gender\",\n          color: \"secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }),\n        label: \"Female\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }))), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        style: {\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Marital Status\"), React.createElement(Field, {\n        fullWidth: true,\n        id: \"maritalStatus\",\n        name: \"maritalStatus\",\n        component: RadioGroup,\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        id: \"maritalStatus\",\n        label: \"Married\",\n        control: React.createElement(Radio, {\n          id: \"maritalStatus\",\n          color: \"secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }),\n        value: \"married\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        id: \"maritalStatus\",\n        value: \"single\",\n        control: React.createElement(Radio, {\n          id: \"maritalStatus\",\n          color: \"secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }),\n        label: \"Single\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        id: \"maritalStatus\",\n        value: \"other\",\n        control: React.createElement(Radio, {\n          id: \"maritalStatus\",\n          color: \"secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }),\n        label: \"Other\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      })))), React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(StepperNavigationButtons, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  });\n}\n\nexport default EmployeeInformation;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/components/AddEmployeeForms/EmployeeInformation.js"],"names":["React","useState","useContext","FormLabel","Radio","FormControlLabel","TextField","RadioGroup","GridItem","GridContainer","DateFnsUtils","DatePicker","MuiPickersUtilsProvider","Formik","Field","Form","StepperNavigationButtons","Yup","StepContext","EmployeeContext","makeStyles","validationSchema","object","shape","fullName","string","min","required","preferredName","customField","field","marginTop","EmployeeInformation","props","employeeData","setEmployeeData","activeStep","setActiveStep","Set","skipped","setSkipped","Date","birthDate","setBirthDate","handleDateChange","date","values","newSkipped","isStepSkipped","step","has","prevActiveStep","maritalStatus","gender","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { FormLabel, Radio, FormControlLabel } from \"@material-ui/core\";\nimport { TextField, RadioGroup } from 'formik-material-ui'; \nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { DatePicker, MuiPickersUtilsProvider } from \"material-ui-pickers\";\nimport { Formik, Field, Form } from 'formik'\nimport StepperNavigationButtons from 'components/Stepper/StepperNavigationButtons';\nimport * as Yup from 'yup'\nimport { StepContext, EmployeeContext } from 'views/Employee/Add'\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst validationSchema = Yup.object().shape({\n  fullName: Yup.string()\n    .min(2, 'too Short!')\n    .required('Required'),\n  preferredName: Yup.string(),\n  // birthDate: Yup.date()\n  //   .required('Required'),\n\n});\nconst customField=makeStyles({\n  field:{\n    marginTop: \"16px\"\n  }\n})\nfunction EmployeeInformation(props) {\n  const [employeeData, setEmployeeData] = useContext(EmployeeContext)\n  const [activeStep, setActiveStep] = useContext(StepContext);\n  const [skipped, setSkipped] = useState(new Set());\n  const [birthDate, setBirthDate] = useState(new Date())\n  function handleDateChange(date) {\n    // setBirthDate(format(date, 'dd/MM/yyyy'))\n    setBirthDate(date)\n  }\n  return (\n\n      <Formik\n        initialValues={employeeData}\n        validationSchema={validationSchema}\n        onSubmit={values => {\n          //handleNext()\n          let newSkipped = skipped;\n          const isStepSkipped = step => {\n            return skipped.has(step);\n          };\n          if (isStepSkipped(activeStep)) {\n            newSkipped = new Set(newSkipped.values());\n            newSkipped.delete(activeStep);\n          }\n          setActiveStep(prevActiveStep => prevActiveStep + 1);\n          setSkipped(newSkipped);\n          setEmployeeData({\n            ...employeeData,\n            fullName: values.fullName,\n            maritalStatus: values.maritalStatus,\n            preferredName: values.preferredName,\n            birthDate: birthDate,\n            gender: values.gender\n          })\n        }}\n        render={() => (\n          <Form>\n            <GridContainer>\n              <GridItem xs={12} sm={12} md={7}>\n                {/* we can use CustomInput also insted of field */}\n                <Field\n                  label=\"Full Name(As on your ID)\"\n                  id=\"fullName\"\n                  name=\"fullName\"\n                  component={TextField}\n                  // value={values.fullName}\n                  // onChange={handleChange}\n                  fullWidth\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={5}>\n                <Field\n                  label=\"Preferred Name\"\n                  id=\"preferredName\"\n                  name=\"preferredName\"\n                  component={TextField}\n                  fullWidth\n                />\n              </GridItem>\n              </GridContainer>\n              <GridContainer>\n              <GridItem xs={12} sm={12} md={3}>\n                <FormLabel component=\"legend\" style={{ textAlign: 'left'}}>Birth Date</FormLabel>\n                <MuiPickersUtilsProvider utils={DateFnsUtils} >\n                  <DatePicker\n                    name=\"birthDate\"\n                    id=\"birthDate\"\n                    fullWidth\n                    value={birthDate}\n                    format='dd-MM-yyyy'\n                    placeholder='Enter date'\n                    onChange={handleDateChange}\n                    // label=\"Birth Date\"\n                  />\n                </MuiPickersUtilsProvider>\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={4}>\n                <FormLabel component=\"legend\" style={{ textAlign: 'left'}}>Gender</FormLabel>\n                <Field fullWidth\n                  id=\"gender\"\n                  name=\"gender\"\n                  component={RadioGroup}\n                  row\n                >\n                  <FormControlLabel\n                    id=\"gender\"\n                    label=\"Male\"\n                    control={<Radio id=\"gender\" color=\"secondary\" />}\n                    value=\"male\"\n                  />\n                  <FormControlLabel\n                    id=\"gender\"\n                    value=\"female\"\n                    control={<Radio id=\"gender\" color=\"secondary\"/>}\n                    label=\"Female\"\n                  />\n                </Field>\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={5}>\n                <FormLabel component=\"legend\" style={{ textAlign: 'left'}}>Marital Status</FormLabel>\n                <Field fullWidth\n                  id=\"maritalStatus\"\n                  name=\"maritalStatus\"\n                  component={RadioGroup}\n                  row\n                >\n                  <FormControlLabel\n                    id=\"maritalStatus\"\n                    label=\"Married\"\n                    control={<Radio id=\"maritalStatus\" color=\"secondary\" />}\n                    value=\"married\"\n                  />\n                  <FormControlLabel\n                    id=\"maritalStatus\"\n                    value=\"single\"\n                    control={<Radio id=\"maritalStatus\" color=\"secondary\"/>}\n                    label=\"Single\"\n                  />\n                  <FormControlLabel\n                    id=\"maritalStatus\"\n                    value=\"other\"\n                    control={<Radio id=\"maritalStatus\" color=\"secondary\"/>}\n                    label=\"Other\"\n                  />\n                </Field>\n              </GridItem>\n          </GridContainer>\n          <GridContainer>\n              <GridItem>\n                <StepperNavigationButtons />\n              </GridItem>\n\n            </GridContainer>\n          </Form>\n        )}\n        >\n      </Formik>\n  );\n}\n\nexport default EmployeeInformation;"]},"metadata":{},"sourceType":"module"}