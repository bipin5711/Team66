{"ast":null,"code":"import _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/views/Employee/List.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Table from \"components/Table/Table.js\"; // import Table from '@material-ui/core/Table';\n// import TableBody from '@material-ui/core/TableBody';\n// import TableCell from '@material-ui/core/TableCell';\n// import TableHead from '@material-ui/core/TableHead';\n// import TableRow from '@material-ui/core/TableRow';\n\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport { makeStyles } from \"@material-ui/core/styles\"; // import Button from '@material-ui/core/Button'\n\nimport Button from \"components/CustomButtons/Button.js\";\nimport { Link, NavLink } from 'react-router-dom'; // import { useSelector, useDispatch } from 'react-redux'\n// import { showEmployee } from 'redux/EmployeeAction'\n\nimport api from '../../lib/axios';\nimport View from 'views/Employee/View';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport InfoIcon from '@material-ui/icons/Info';\nvar styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n      fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\"\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\"\n    }\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    display: 'inline-block',\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  },\n  table: {\n    border: 0\n  },\n  tableCell: {\n    border: 0,\n    padding: 3 // minWidth:'auto',\n    // width:'140px'\n    // maxWidth:'5%'\n\n  },\n  tableRow: {\n    marginTop: 25,\n    marginBottom: 5\n  },\n  addBtn: {\n    \"float\": 'right',\n    display: 'inline',\n    border: '1px solid white',\n    zIndex: '1px',\n    margin: '-5px 0px'\n  },\n  icons: {\n    color: '#9c27b0'\n  }\n};\nvar useStyles = makeStyles(styles);\n\nfunction EmployeeList(props) {\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      employeeData = _useState2[0],\n      setEmployeeData = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      deleteSnackbar = _useState4[0],\n      setDeleteSnackbar = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      addSnackbar = _useState6[0],\n      setAddSnackbar = _useState6[1]; // const data = useSelector(state => state)\n  //   console.log(data)\n  // const dispatch = useDispatch();\n\n\n  var handleGetAll = function handleGetAll() {\n    api.get('employees').then(function (res) {\n      console.log(\"ds\", res.data.data);\n      setEmployeeData(res.data.data);\n    })[\"catch\"](function (err) {\n      console.log(\"err\", err);\n    });\n  };\n\n  var handleDelete = function handleDelete(id) {\n    api[\"delete\"](\"employees/\".concat(id)).then(function (res) {\n      console.log(\"deleted\");\n      handleGetAll();\n      setDeleteSnackbar(true);\n    })[\"catch\"](function (err) {\n      console.log(\"err\", err);\n    });\n  };\n\n  var handleEdit = function handleEdit(id) {\n    api.post(\"employees\").then(function (res) {\n      console.log(\"edited\");\n    })[\"catch\"](function (err) {\n      console.log(\"err\", err);\n    });\n  };\n\n  useEffect(function () {\n    // dispatch({ type:'SHOW_EMPLOYEE' })\n    // dispatch(showEmployee())\n    handleGetAll();\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: classes.cardTitleWhite,\n    style: {\n      display: 'inline'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Employee Details\")), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.addBtn,\n    color: \"transparent\",\n    component: Link,\n    to: \"/admin/addEmployee\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Add Employee\"), React.createElement(Snackbar, {\n    place: \"bl\",\n    color: \"primary\",\n    icon: InfoIcon,\n    message: \"Employee Deleted Successfully\",\n    open: deleteSnackbar,\n    closeNotification: function closeNotification() {\n      return setDeleteSnackbar(false);\n    },\n    close: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  })))), React.createElement(CardBody, {\n    style: {\n      minHeight: '200px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(Table, {\n    tableHeaderColor: \"primary\",\n    tableHead: [\"Id\", \"Name\", \"BirthDate\", \"Gender\", \"Marital Status\", \"City\", \"State\", \"Country\", \"Hire Date\", \"Current Salary\", \"Edit\", \"View\", \"Delete\"],\n    tableData: employeeData.map(function (employee) {\n      return [employee.id, employee.name, employee.birthDate, employee.gender, employee.maritalStatus, employee.currentAddress.city, employee.currentAddress.state, employee.currentAddress.country, employee.hireDate, employee.currentSalary, React.createElement(EditIcon, {\n        className: classes.icons,\n        onClick: function onClick() {\n          handleEdit(employee.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }), React.createElement(NavLink, {\n        to: \"/admin/employee/\".concat(employee.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(VisibilityIcon, {\n        className: classes.icons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      })), React.createElement(DeleteIcon, {\n        className: classes.icons,\n        onClick: function onClick() {\n          handleDelete(employee.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      })];\n    }) // [props.name.toUpperCase(),props.description.toUpperCase(),props.category.toUpperCase(),props.price,props.expirydate===\"\"?\"\":format(props.expirydate, 'dd/MM/yyyy'),props.image===\"\"?null:<img height=\"100px\" width=\"100px\" src={props.image}/>],\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  })))))))));\n}\n\nexport default EmployeeList;\n{\n  /* <Table aria-label=\"simple table\">\n         <TableHead>\n           <TableRow>\n             <TableCell>Name</TableCell>\n             <TableCell align=\"right\">City</TableCell>\n             <TableCell align=\"right\">State</TableCell>\n             <TableCell align=\"right\">Country</TableCell>\n             <TableCell align=\"right\">Salary</TableCell>\n             <TableCell align=\"center\" colSpan={2}>Action</TableCell>\n           </TableRow>\n         </TableHead>\n         <TableBody>\n           {rows.map(row => (\n             <TableRow key={row.name}>\n               <TableCell component=\"th\" scope=\"row\">\n                 {row.name}\n               </TableCell>\n               <TableCell align=\"right\">{row.calories}</TableCell>\n               <TableCell align=\"right\">{row.fat}</TableCell>\n               <TableCell align=\"right\">{row.carbs}</TableCell>\n               <TableCell align=\"right\">{row.protein}</TableCell>\n               <TableCell align=\"right\"><Button variant=\"contained\" color=\"primary\"  component={Link} to=\"/admin/editEmployee\">\n                 Edit\n             </Button></TableCell>\n               <TableCell align=\"right\"><Button variant=\"contained\" color=\"primary\"  component={Link} to=\"/admin/deleteEmployee\">\n                 Delete\n             </Button></TableCell>\n             </TableRow>\n           ))}\n         </TableBody>\n       </Table> */\n}\n{\n  /* <Table\n               tableHeaderColor=\"primary\"\n               tableHead={[\"Name\", \"State\",\"Country\", \"City\", \"Salary\"]}\n               tableData={[\n                 // data\n                 [\"1\", \"Dakota Rice\", \"$36,738\", \"Niger\", \"Oud-Turnhout\"],\n                 [\"2\", \"Minerva Hooper\", \"$23,789\", \"Curaçao\", \"Sinaai-Waas\"],\n                 [\"3\", \"Sage Rodriguez\", \"$56,142\", \"Netherlands\", \"Baileux\"],\n                 [\n                   \"4\",\n                   \"Philip Chaney\",\n                   \"$38,735\",\n                   \"Korea, South\",\n                   \"Overland Park\"\n                 ],\n                 [\n                   \"5\",\n                   \"Doris Greene\",\n                   \"$63,542\",\n                   \"Malawi\",\n                   \"Feldkirchen in Kärnten\"\n                 ],\n                 [\"6\", \"Mason Porter\", \"$78,615\", \"Chile\", \"Gloucester\"]\n               ]}\n             /> */\n}","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/views/Employee/List.js"],"names":["React","useState","useContext","useEffect","GridItem","GridContainer","Table","Card","CardHeader","CardBody","makeStyles","Button","Link","NavLink","api","View","EditIcon","DeleteIcon","VisibilityIcon","SnackbarContent","Snackbar","InfoIcon","styles","cardCategoryWhite","color","margin","fontSize","marginTop","marginBottom","fontFamily","cardTitleWhite","minHeight","fontWeight","display","textDecoration","lineHeight","table","border","tableCell","padding","tableRow","addBtn","zIndex","icons","useStyles","EmployeeList","props","classes","employeeData","setEmployeeData","deleteSnackbar","setDeleteSnackbar","addSnackbar","setAddSnackbar","handleGetAll","get","then","res","console","log","data","err","handleDelete","id","handleEdit","post","map","employee","name","birthDate","gender","maritalStatus","currentAddress","city","state","country","hireDate","currentSalary"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Table from \"components/Table/Table.js\";\n// import Table from '@material-ui/core/Table';\n// import TableBody from '@material-ui/core/TableBody';\n// import TableCell from '@material-ui/core/TableCell';\n// import TableHead from '@material-ui/core/TableHead';\n// import TableRow from '@material-ui/core/TableRow';\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n// import Button from '@material-ui/core/Button'\nimport Button from \"components/CustomButtons/Button.js\";\nimport { Link, NavLink } from 'react-router-dom'\n// import { useSelector, useDispatch } from 'react-redux'\n// import { showEmployee } from 'redux/EmployeeAction'\nimport api from '../../lib/axios';\nimport View from 'views/Employee/View'\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport InfoIcon from '@material-ui/icons/Info';\n\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n      fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\"\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\"\n    }\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    display: 'inline-block',\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  },\n  table: {\n    border: 0,\n\n  },\n  tableCell: {\n    border: 0,\n    padding: 3,\n    // minWidth:'auto',\n    // width:'140px'\n    // maxWidth:'5%'\n  },\n  tableRow: {\n    marginTop: 25,\n    marginBottom: 5,\n  },\n  addBtn: {\n    float: 'right',\n    display: 'inline',\n    border: '1px solid white',\n    zIndex: '1px',\n    margin: '-5px 0px'\n\n  },\n  icons: {\n    color: '#9c27b0'\n  }\n};\n\nconst useStyles = makeStyles(styles);\n\n\n\nfunction EmployeeList(props) {\n  const classes = useStyles();\n  const [employeeData, setEmployeeData] = useState([])\n  const [deleteSnackbar, setDeleteSnackbar] = useState(false)\n  const [addSnackbar, setAddSnackbar] = useState(false)\n  // const data = useSelector(state => state)\n  //   console.log(data)\n  // const dispatch = useDispatch();\n\n  const handleGetAll = () => {\n    api.get('employees').then(res => {\n      console.log(\"ds\", res.data.data)\n      setEmployeeData(res.data.data)\n    }).catch(err => { console.log(\"err\", err) })\n  }\n  const handleDelete = (id) => {\n    api.delete(`employees/${id}`).then(res => {\n      console.log(\"deleted\")\n      handleGetAll()\n      setDeleteSnackbar(true)\n\n\n    }).catch(err => { console.log(\"err\", err) })\n  }\n  const handleEdit = (id) => {\n    api.post(`employees`).then(res => {\n      console.log(\"edited\")\n     \n\n    }).catch(err => { console.log(\"err\", err) })\n  }\n  useEffect(() => {\n    // dispatch({ type:'SHOW_EMPLOYEE' })\n    // dispatch(showEmployee())\n    handleGetAll()\n\n\n  }, [])\n\n  return (\n    <div>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            {/* in cardheader we can use plain attribute */}\n\n            <CardHeader color=\"primary\">\n              <GridContainer>\n                <GridItem xs={12} sm={12} md={6}>\n                  <h4 className={classes.cardTitleWhite} style={{ display: 'inline' }}>\n                    Employee Details\n            </h4>\n                </GridItem>\n                <GridItem xs={12} sm={12} md={6}>\n                  <Button className={classes.addBtn} color=\"transparent\" component={Link} to=\"/admin/addEmployee\">\n                    Add Employee\n            </Button>\n                  <Snackbar\n                    place=\"bl\"\n                    color=\"primary\"\n                    icon={InfoIcon}\n                    message=\"Employee Deleted Successfully\"\n                    open={deleteSnackbar}\n                    closeNotification={() => setDeleteSnackbar(false)}\n                    close\n                  />\n                </GridItem></GridContainer>\n            </CardHeader>\n            <CardBody style={{ minHeight: '200px' }}>\n              {/* {data.fullName != \"\" ? */}\n              <div>\n                <GridContainer>\n                  <GridItem xs={12} sm={12} md={12}>\n                    {/* <Table>\n                        <TableHead>\n                          <TableRow>\n                            <TableCell>Full Name</TableCell>\n                            <TableCell>BirthDate</TableCell>\n                            <TableCell>Gender</TableCell>\n                            <TableCell>Marital Status</TableCell>\n                            <TableCell>City</TableCell>\n                            <TableCell>State</TableCell>\n                            <TableCell>Country</TableCell>\n                            <TableCell>Hire Date</TableCell>\n                            <TableCell>Current Salary</TableCell>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                           { employeeData.map(data=>{\n                                return(\n                                    <TableRow>\n                                        <TableCell component=\"th\" scope=\"row\">{data.name}</TableCell>\n                                        <TableCell component=\"th\" scope=\"row\">{data.birthDate}</TableCell>\n                                        <TableCell component=\"th\" scope=\"row\">{data.gender}</TableCell>\n                                        <TableCell component=\"th\" scope=\"row\">{data.maritalStatus}</TableCell>\n                                        <TableCell component=\"th\" scope=\"row\">{data.currentAddress.city}</TableCell>\n                                        <TableCell component=\"th\" scope=\"row\">{data.currentAddress.state}</TableCell>\n                                        <TableCell component=\"th\" scope=\"row\">{data.currentAddress.country}</TableCell>\n                                        <TableCell component=\"th\" scope=\"row\">{data.hireDate}</TableCell>\n                                        <TableCell component=\"th\" scope=\"row\">{data.currentSalary}</TableCell>\n                                    </TableRow>\n                                )\n                            })\n                        }\n                        </TableBody>\n                      </Table> */}\n                    <Table\n                      tableHeaderColor=\"primary\"\n                      tableHead={[\"Id\", \"Name\", \"BirthDate\", \"Gender\", \"Marital Status\", \"City\", \"State\", \"Country\", \"Hire Date\", \"Current Salary\", \"Edit\", \"View\", \"Delete\"]}\n                      tableData={\n                        employeeData.map(employee => {\n                          return ([employee.id, employee.name, employee.birthDate, employee.gender, employee.maritalStatus\n                            , employee.currentAddress.city, employee.currentAddress.state, employee.currentAddress.country\n                            , employee.hireDate, employee.currentSalary,\n                          <EditIcon className={classes.icons} onClick={() => {\n                            handleEdit(employee.id)\n                          }} />,\n                          <NavLink to={`/admin/employee/${employee.id}`}>\n                            <VisibilityIcon className={classes.icons} />\n                          </NavLink>\n                            ,\n                          <DeleteIcon className={classes.icons} onClick={() => {\n                            handleDelete(employee.id)\n                          }} />\n                          ])\n                        })\n                        // [props.name.toUpperCase(),props.description.toUpperCase(),props.category.toUpperCase(),props.price,props.expirydate===\"\"?\"\":format(props.expirydate, 'dd/MM/yyyy'),props.image===\"\"?null:<img height=\"100px\" width=\"100px\" src={props.image}/>],\n                      }\n                    />\n                  </GridItem>\n                </GridContainer>\n              </div>\n              {/* : \"No Data Available\"} */}\n\n            </CardBody>\n          </Card>\n        </GridItem>\n\n      </GridContainer>\n    </div>\n  );\n}\n\nexport default EmployeeList;\n\n\n{/* <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell align=\"right\">City</TableCell>\n            <TableCell align=\"right\">State</TableCell>\n            <TableCell align=\"right\">Country</TableCell>\n            <TableCell align=\"right\">Salary</TableCell>\n            <TableCell align=\"center\" colSpan={2}>Action</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.name}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">{row.calories}</TableCell>\n              <TableCell align=\"right\">{row.fat}</TableCell>\n              <TableCell align=\"right\">{row.carbs}</TableCell>\n              <TableCell align=\"right\">{row.protein}</TableCell>\n              <TableCell align=\"right\"><Button variant=\"contained\" color=\"primary\"  component={Link} to=\"/admin/editEmployee\">\n                Edit\n            </Button></TableCell>\n              <TableCell align=\"right\"><Button variant=\"contained\" color=\"primary\"  component={Link} to=\"/admin/deleteEmployee\">\n                Delete\n            </Button></TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table> */}\n{/* <Table\n              tableHeaderColor=\"primary\"\n              tableHead={[\"Name\", \"State\",\"Country\", \"City\", \"Salary\"]}\n              tableData={[\n                // data\n                [\"1\", \"Dakota Rice\", \"$36,738\", \"Niger\", \"Oud-Turnhout\"],\n                [\"2\", \"Minerva Hooper\", \"$23,789\", \"Curaçao\", \"Sinaai-Waas\"],\n                [\"3\", \"Sage Rodriguez\", \"$56,142\", \"Netherlands\", \"Baileux\"],\n                [\n                  \"4\",\n                  \"Philip Chaney\",\n                  \"$38,735\",\n                  \"Korea, South\",\n                  \"Overland Park\"\n                ],\n                [\n                  \"5\",\n                  \"Doris Greene\",\n                  \"$63,542\",\n                  \"Malawi\",\n                  \"Feldkirchen in Kärnten\"\n                ],\n                [\"6\", \"Mason Porter\", \"$78,615\", \"Chile\", \"Gloucester\"]\n              ]}\n            /> */}"]},"metadata":{},"sourceType":"module"}