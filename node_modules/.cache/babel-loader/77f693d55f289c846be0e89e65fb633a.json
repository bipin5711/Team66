{"ast":null,"code":"import _defineProperty from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/components/AddEmployeeForms/EmployeeInformation.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from 'react';\nimport { FormLabel, Radio, FormControlLabel } from \"@material-ui/core\";\nimport { TextField, RadioGroup } from 'formik-material-ui';\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomDatePicker from 'components/Pickers/DatePicker';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport StepperNavigationButtons from 'components/Stepper/StepperNavigationButtons';\nimport * as Yup from 'yup';\nimport { StepContext, EmployeeContext, TitleContext } from 'views/Employee/Add';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { addEmployee as _addEmployee } from 'redux/EmployeeAction';\nimport { connect } from 'react-redux';\nvar validationSchema = Yup.object().shape({\n  fullName: Yup.string().min(2, 'too Short!').required('Required'),\n  preferredName: Yup.string(),\n  birthDate: Yup.date().nullable().min(new Date('01-01-1960'), 'Birth Date must be greater than 01-01-1960').max(new Date(), 'Birth Date is cannot greater than current day').required('Birth date is Required')\n});\nvar useStyles = makeStyles({\n  field: {\n    marginTop: \"32px\"\n  }\n});\n\nfunction EmployeeInformation(props) {\n  var classes = useStyles();\n\n  var _useContext = useContext(EmployeeContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      employeeData = _useContext2[0],\n      setEmployeeData = _useContext2[1];\n\n  var _useContext3 = useContext(StepContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      activeStep = _useContext4[0],\n      setActiveStep = _useContext4[1];\n\n  var _useState = useState(new Set()),\n      _useState2 = _slicedToArray(_useState, 2),\n      skipped = _useState2[0],\n      setSkipped = _useState2[1];\n\n  var _useContext5 = useContext(TitleContext),\n      _useContext6 = _slicedToArray(_useContext5, 2),\n      title = _useContext6[0],\n      setTitle = _useContext6[1];\n\n  setTitle('Employee Information');\n  return React.createElement(Formik, {\n    initialValues: employeeData // validationSchema={validationSchema}\n    ,\n    onSubmit: function onSubmit(values) {\n      //handleNext()\n      var newSkipped = skipped;\n\n      var isStepSkipped = function isStepSkipped(step) {\n        return skipped.has(step);\n      };\n\n      if (isStepSkipped(activeStep)) {\n        newSkipped = new Set(newSkipped.values());\n        newSkipped[\"delete\"](activeStep);\n      }\n\n      setActiveStep(function (prevActiveStep) {\n        return prevActiveStep + 1;\n      });\n      setSkipped(newSkipped);\n      setEmployeeData(_objectSpread({}, employeeData, {\n        fullName: values.fullName,\n        maritalStatus: values.maritalStatus,\n        preferredName: values.preferredName,\n        birthDate: values.birthDate,\n        gender: values.gender\n      }));\n\n      _addEmployee(employeeData);\n    },\n    render: function render() {\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Full Name(As on your ID)\",\n        id: \"fullName\",\n        name: \"fullName\",\n        component: TextField,\n        className: classes.field // value={values.fullName}\n        // onChange={handleChange}\n        ,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Preferred Name\",\n        id: \"preferredName\",\n        name: \"preferredName\",\n        className: classes.field,\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }))), React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        style: {\n          textAlign: 'left'\n        },\n        className: classes.field,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Birth Date\"), React.createElement(Field, {\n        name: \"birthDate\",\n        component: CustomDatePicker // label=\"Date\"\n        ,\n        placeholder: \"Enter Date of Birth\",\n        fullWidth: true,\n        format: \"dd/MM/yyyy\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        style: {\n          textAlign: 'left'\n        },\n        className: classes.field,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Gender\"), React.createElement(Field, {\n        fullWidth: true,\n        id: \"gender\",\n        name: \"gender\",\n        component: RadioGroup,\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        id: \"gender\",\n        label: \"Male\",\n        control: React.createElement(Radio, {\n          id: \"gender\",\n          color: \"secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }),\n        value: \"male\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        id: \"gender\",\n        value: \"female\",\n        control: React.createElement(Radio, {\n          id: \"gender\",\n          color: \"secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }),\n        label: \"Female\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }))), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        style: {\n          textAlign: 'left'\n        },\n        className: classes.field,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Marital Status\"), React.createElement(Field, {\n        fullWidth: true,\n        id: \"maritalStatus\",\n        name: \"maritalStatus\" // label=\"Marital Status\"\n        // placeholder=\"Marital Status\"\n        ,\n        component: RadioGroup,\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        id: \"maritalStatus\",\n        label: \"Married\",\n        control: React.createElement(Radio, {\n          id: \"maritalStatus\",\n          color: \"secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }),\n        value: \"married\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        id: \"maritalStatus\",\n        value: \"single\",\n        control: React.createElement(Radio, {\n          id: \"maritalStatus\",\n          color: \"secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }),\n        label: \"Single\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        id: \"maritalStatus\",\n        value: \"other\",\n        control: React.createElement(Radio, {\n          id: \"maritalStatus\",\n          color: \"secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }),\n        label: \"Other\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      })))), React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(StepperNavigationButtons, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  });\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    // name:state.name,\n    // age:state.age\n    fullName: state.fullName,\n    preferredName: state.preferredName,\n    birthDate: state.birthDate,\n    gender: state.gender,\n    maritalStatus: state.maritalStatus,\n    currentStreet1: state.currentStreet1,\n    currentStreet2: state.currentStreet2,\n    currentCity: state.currentCity,\n    currentState: state.currentState,\n    currentCountry: state.currentCountry,\n    currentAddressProof: state.currentAddressProof,\n    permanentStreet1: state.permanentStreet1,\n    permanentStreet2: state.permanentStreet2,\n    permanentCity: state.permanentCity,\n    permanentState: state.permanentState,\n    permanentCountry: state.permanentCountry,\n    permanentAddressProof: state.permanentAddressProof,\n    emergencyName1: state.emergencyName1,\n    emergencyMobile1: state.emergencyMobile1,\n    emergencyRelationship1: state.emergencyRelationship1,\n    emergencyName2: state.emergencyName2,\n    emergencyMobile2: state.emergencyMobile2,\n    emergencyRelationship2: state.emergencyRelationship2,\n    jobHireDate: state.jobHireDate,\n    jobSalary: state.jobSalary,\n    jobCurrentSalary: state.jobCurrentSalary,\n    jobBond: state.jobBond,\n    idProof: state.idProof,\n    picture: state.picture,\n    feedback: state.feedback\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addEmployee: function addEmployee() {\n      return dispatch(_addEmployee());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeeInformation);","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/components/AddEmployeeForms/EmployeeInformation.js"],"names":["React","useState","useContext","FormLabel","Radio","FormControlLabel","TextField","RadioGroup","GridItem","GridContainer","CustomDatePicker","Formik","Field","Form","ErrorMessage","StepperNavigationButtons","Yup","StepContext","EmployeeContext","TitleContext","makeStyles","addEmployee","connect","validationSchema","object","shape","fullName","string","min","required","preferredName","birthDate","date","nullable","Date","max","useStyles","field","marginTop","EmployeeInformation","props","classes","employeeData","setEmployeeData","activeStep","setActiveStep","Set","skipped","setSkipped","title","setTitle","values","newSkipped","isStepSkipped","step","has","prevActiveStep","maritalStatus","gender","textAlign","mapStateToProps","state","currentStreet1","currentStreet2","currentCity","currentState","currentCountry","currentAddressProof","permanentStreet1","permanentStreet2","permanentCity","permanentState","permanentCountry","permanentAddressProof","emergencyName1","emergencyMobile1","emergencyRelationship1","emergencyName2","emergencyMobile2","emergencyRelationship2","jobHireDate","jobSalary","jobCurrentSalary","jobBond","idProof","picture","feedback","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { FormLabel, Radio, FormControlLabel } from \"@material-ui/core\";\nimport { TextField, RadioGroup } from 'formik-material-ui'; \nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomDatePicker from 'components/Pickers/DatePicker'\nimport { Formik, Field, Form, ErrorMessage } from 'formik'\nimport StepperNavigationButtons from 'components/Stepper/StepperNavigationButtons';\nimport * as Yup from 'yup'\nimport { StepContext, EmployeeContext, TitleContext } from 'views/Employee/Add'\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { addEmployee } from 'redux/EmployeeAction'\nimport {connect} from 'react-redux'\nconst validationSchema = Yup.object().shape({\n  fullName: Yup.string()\n    .min(2, 'too Short!')\n    .required('Required'),\n  preferredName: Yup.string(),\n  birthDate: Yup.date().nullable()\n  .min(new Date('01-01-1960'),'Birth Date must be greater than 01-01-1960')\n  .max(new Date(),'Birth Date is cannot greater than current day')\n  .required('Birth date is Required'),\n\n\n});\nconst useStyles=makeStyles({\n  field:{\n    marginTop: \"32px\"\n  }\n  \n})\nfunction EmployeeInformation(props) {\n  const classes=useStyles()\n  const [employeeData, setEmployeeData] = useContext(EmployeeContext)\n  const [activeStep, setActiveStep] = useContext(StepContext);\n  const [skipped, setSkipped] = useState(new Set());\n  const [title, setTitle] = useContext(TitleContext);\n  setTitle('Employee Information')\n  return (\n    \n      <Formik\n        initialValues={employeeData}\n        // validationSchema={validationSchema}\n        onSubmit={values => {\n          //handleNext()\n          let newSkipped = skipped;\n          const isStepSkipped = step => {\n            return skipped.has(step);\n          };\n          if (isStepSkipped(activeStep)) {\n            newSkipped = new Set(newSkipped.values());\n            newSkipped.delete(activeStep);\n          }\n          setActiveStep(prevActiveStep => prevActiveStep + 1);\n          setSkipped(newSkipped);\n          setEmployeeData({\n            ...employeeData,\n            fullName: values.fullName,\n            maritalStatus: values.maritalStatus,\n            preferredName: values.preferredName,\n            birthDate: values.birthDate,\n            gender: values.gender\n          })\n          addEmployee(employeeData)\n        }}\n        render={() => (\n          <Form>\n            {/* <h3>{title}</h3> */}\n            <GridContainer>\n              <GridItem xs={12} sm={12} md={7}>\n                {/* we can use CustomInput also insted of field */}\n                <Field\n                  label=\"Full Name(As on your ID)\"\n                  id=\"fullName\"\n                  name=\"fullName\"\n                  component={TextField}\n                  className={classes.field}\n                  // value={values.fullName}\n                  // onChange={handleChange}\n                  fullWidth\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={5}>\n                <Field\n                  label=\"Preferred Name\"\n                  id=\"preferredName\"\n                  name=\"preferredName\"\n                  className={classes.field}\n                  component={TextField}\n                  fullWidth\n                />\n                \n              </GridItem>\n              </GridContainer>\n              <GridContainer>\n              <GridItem xs={12} sm={12} md={3}>\n                <FormLabel component=\"legend\" style={{ textAlign: 'left'}} className={classes.field}>Birth Date</FormLabel>\n                <Field\n                  name=\"birthDate\"\n                  component={CustomDatePicker}\n                  // label=\"Date\"\n                  placeholder=\"Enter Date of Birth\"\n                  fullWidth\n                  format=\"dd/MM/yyyy\"\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={4}>\n                <FormLabel component=\"legend\" style={{ textAlign: 'left'}} className={classes.field}>Gender</FormLabel>\n                <Field fullWidth\n                  id=\"gender\"\n                  name=\"gender\"\n                  component={RadioGroup}\n                  row\n                >\n                  <FormControlLabel\n                    id=\"gender\"\n                    label=\"Male\"\n                    control={<Radio id=\"gender\" color=\"secondary\" />}\n                    value=\"male\"\n                  />\n                  <FormControlLabel\n                    id=\"gender\"\n                    value=\"female\"\n                    control={<Radio id=\"gender\" color=\"secondary\"/>}\n                    label=\"Female\"\n                  />\n                </Field>\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={5}>\n                <FormLabel component=\"legend\" style={{ textAlign: 'left'}} className={classes.field}>Marital Status</FormLabel>\n                <Field fullWidth\n                  id=\"maritalStatus\"\n                  name=\"maritalStatus\"\n                  // label=\"Marital Status\"\n                  // placeholder=\"Marital Status\"\n                  component={RadioGroup}\n                  row\n                >\n                  <FormControlLabel\n                    id=\"maritalStatus\"\n                    label=\"Married\"\n                    control={<Radio id=\"maritalStatus\" color=\"secondary\" />}\n                    value=\"married\"\n                  />\n                  <FormControlLabel\n                    id=\"maritalStatus\"\n                    value=\"single\"\n                    control={<Radio id=\"maritalStatus\" color=\"secondary\"/>}\n                    label=\"Single\"\n                  />\n                  <FormControlLabel\n                    id=\"maritalStatus\"\n                    value=\"other\"\n                    control={<Radio id=\"maritalStatus\" color=\"secondary\"/>}\n                    label=\"Other\"\n                  />\n                </Field>\n              </GridItem>\n          </GridContainer>\n          <GridContainer>\n              <GridItem xs={12} sm={12} md={5}>\n                <StepperNavigationButtons />\n              </GridItem>\n\n            </GridContainer>\n          </Form>\n        )}\n        >\n      </Formik>\n  );\n}\nconst mapStateToProps=state=>{\n  return{\n      // name:state.name,\n      // age:state.age\n      fullName: state.fullName,\n      preferredName: state.preferredName,\n      birthDate: state.birthDate,\n      gender: state.gender,\n      maritalStatus: state.maritalStatus,\n      currentStreet1: state.currentStreet1,\n      currentStreet2: state.currentStreet2,\n      currentCity: state.currentCity,\n      currentState: state.currentState,\n      currentCountry: state.currentCountry,\n      currentAddressProof: state.currentAddressProof,\n      permanentStreet1: state.permanentStreet1,\n      permanentStreet2: state.permanentStreet2,\n      permanentCity: state.permanentCity,\n      permanentState: state.permanentState,\n      permanentCountry: state.permanentCountry,\n      permanentAddressProof: state.permanentAddressProof,\n      emergencyName1: state.emergencyName1,\n      emergencyMobile1: state.emergencyMobile1,\n      emergencyRelationship1: state.emergencyRelationship1,\n      emergencyName2: state.emergencyName2,\n      emergencyMobile2: state.emergencyMobile2,\n      emergencyRelationship2: state.emergencyRelationship2,\n      jobHireDate: state.jobHireDate,\n      jobSalary: state.jobSalary,\n      jobCurrentSalary: state.jobCurrentSalary,\n      jobBond: state.jobBond,\n      idProof: state.idProof,\n      picture: state.picture,\n      feedback: state.feedback\n  }\n}\nconst mapDispatchToProps=dispatch=>{\n  return{\n      addEmployee:()=>dispatch(addEmployee())  \n  }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(EmployeeInformation);"]},"metadata":{},"sourceType":"module"}