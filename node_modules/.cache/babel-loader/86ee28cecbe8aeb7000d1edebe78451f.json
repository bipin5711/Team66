{"ast":null,"code":"import _defineProperty from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/components/AddEmployeeForms/EmergencyContact.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from 'react';\nimport { TextField } from 'formik-material-ui';\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport { Formik, Field, Form } from 'formik';\nimport { EmployeeContext } from 'views/Employee/AddEmployee';\nimport StepperNavigationButtons from 'components/Stepper/StepperNavigationButtons';\nimport * as Yup from 'yup';\nvar validationSchema = Yup.object().shape({\n  name1: Yup.string().min(2, 'too Short!').required('Required'),\n  relationship1: Yup.string().required('Required')\n});\n\nfunction EmergencyContact(props) {\n  var _useContext = useContext(EmployeeContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      employeeData = _useContext2[0],\n      setEmployeeData = _useContext2[1];\n\n  var _useContext3 = useContext(StepContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      activeStep = _useContext4[0],\n      setActiveStep = _useContext4[1];\n\n  var _useState = useState(new Set()),\n      _useState2 = _slicedToArray(_useState, 2),\n      skipped = _useState2[0],\n      setSkipped = _useState2[1];\n\n  return React.createElement(Formik, {\n    initialValues: employeeData,\n    validationSchema: validationSchema,\n    onSubmit: function onSubmit(values) {\n      //handleNext()\n      var newSkipped = skipped;\n\n      var isStepSkipped = function isStepSkipped(step) {\n        return skipped.has(step);\n      };\n\n      if (isStepSkipped(activeStep)) {\n        newSkipped = new Set(newSkipped.values());\n        newSkipped[\"delete\"](activeStep);\n      }\n\n      setActiveStep(function (prevActiveStep) {\n        return prevActiveStep + 1;\n      });\n      setSkipped(newSkipped);\n      setEmployeeData(_objectSpread({}, employeeData, {\n        emergencyName1: values.name1,\n        emergencyMobile1: values.mobile1,\n        emergencyRelationship1: values.relationship1,\n        emergencyName2: values.name2,\n        emergencyMobile2: values.mobile2,\n        emergencyRelationship2: values.relationship2\n      }));\n    },\n    render: function render() {\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Name1\",\n        id: \"name1\",\n        name: \"name1\",\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Mobile\",\n        id: \"mobile1\",\n        name: \"mobile1\",\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Relationship\",\n        id: \"relationship1\",\n        name: \"relationship1\",\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Name 2\",\n        id: \"name2\",\n        name: \"name2\",\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Mobile\",\n        id: \"mobile2\",\n        name: \"mobile2\",\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Relationship\",\n        id: \"relationship2\",\n        name: \"relationship2\",\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(StepperNavigationButtons, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  });\n}\n\nexport default EmergencyContact;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/components/AddEmployeeForms/EmergencyContact.js"],"names":["React","useState","useContext","TextField","GridItem","GridContainer","Formik","Field","Form","EmployeeContext","StepperNavigationButtons","Yup","validationSchema","object","shape","name1","string","min","required","relationship1","EmergencyContact","props","employeeData","setEmployeeData","StepContext","activeStep","setActiveStep","Set","skipped","setSkipped","values","newSkipped","isStepSkipped","step","has","prevActiveStep","emergencyName1","emergencyMobile1","mobile1","emergencyRelationship1","emergencyName2","name2","emergencyMobile2","mobile2","emergencyRelationship2","relationship2"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { TextField } from 'formik-material-ui'; \nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport { Formik, Field, Form } from 'formik'\nimport { EmployeeContext } from 'views/Employee/AddEmployee'\nimport StepperNavigationButtons from 'components/Stepper/StepperNavigationButtons';\nimport * as Yup from 'yup'\n\nconst validationSchema = Yup.object().shape({\n  name1: Yup.string()\n    .min(2, 'too Short!')\n    .required('Required'),\n  relationship1: Yup.string().required('Required'),\n\n});\n\nfunction EmergencyContact(props) {\n  const [employeeData, setEmployeeData] = useContext(EmployeeContext)\n  const [activeStep, setActiveStep] = useContext(StepContext);\n  const [skipped, setSkipped] = useState(new Set());\n\n  return (\n\n      <Formik\n        initialValues={employeeData}\n        validationSchema={validationSchema}\n        onSubmit={values => {\n          //handleNext()\n          let newSkipped = skipped;\n          const isStepSkipped = step => {\n            return skipped.has(step);\n          };\n          if (isStepSkipped(activeStep)) {\n            newSkipped = new Set(newSkipped.values());\n            newSkipped.delete(activeStep);\n          }\n          setActiveStep(prevActiveStep => prevActiveStep + 1);\n          setSkipped(newSkipped);\n          setEmployeeData({\n            ...employeeData,\n            emergencyName1: values.name1,\n            emergencyMobile1: values.mobile1,\n            emergencyRelationship1: values.relationship1,\n            emergencyName2: values.name2,\n            emergencyMobile2: values.mobile2,\n            emergencyRelationship2: values.relationship2\n          })\n        }}\n        render={() => (\n          <Form>\n            <GridContainer>\n              <GridItem xs={12} sm={12} md={12}>\n                <Field\n                  label=\"Name1\"\n                  id=\"name1\"\n                  name=\"name1\"\n                  component={TextField}\n                  fullWidth\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={12}>\n                <Field\n                  label=\"Mobile\"\n                  id=\"mobile1\"\n                  name=\"mobile1\"\n                  component={TextField}\n                  fullWidth\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={12}>\n                <Field\n                  label=\"Relationship\"\n                  id=\"relationship1\"\n                  name=\"relationship1\"\n                  component={TextField}\n                  fullWidth\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={12}>\n                <Field\n                  label=\"Name 2\"\n                  id=\"name2\"\n                  name=\"name2\"\n                  component={TextField}\n                  fullWidth\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={12}>\n                <Field\n                  label=\"Mobile\"\n                  id=\"mobile2\"\n                  name=\"mobile2\"\n                  component={TextField}\n                  fullWidth\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={12}>\n                <Field\n                  label=\"Relationship\"\n                  id=\"relationship2\"\n                  name=\"relationship2\"\n                  component={TextField}\n                  fullWidth\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={12}>\n                <StepperNavigationButtons />\n              </GridItem>\n\n            </GridContainer>\n          </Form>\n        )}\n      >\n      </Formik>\n  );\n}\n\nexport default EmergencyContact;"]},"metadata":{},"sourceType":"module"}