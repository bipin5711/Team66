{"ast":null,"code":"import _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/components/AddEmployeeForms/CurrentAddress.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { InputLabel, FormLabel, RadioGroup, Radio, FormControlLabel } from \"@material-ui/core\";\nimport { Field } from \"formik\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardAvatar from \"components/Card/CardAvatar.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport avatar from \"assets/img/faces/marc.jpg\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { format } from \"date-fns\";\nimport { DatePicker, MuiPickersUtilsProvider } from \"material-ui-pickers\";\nimport { KeyboardDatePicker } from '@material-ui/pickers';\nimport Dropzone from 'react-dropzone';\nvar styles = {\n  cardCategoryWhite: {\n    color: \"rgba(255,255,255,.62)\",\n    margin: \"0\",\n    fontSize: \"14px\",\n    marginTop: \"0\",\n    marginBottom: \"0\"\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\"\n  }\n};\nvar useStyles = makeStyles(styles);\n\nfunction CurrentAddress(props) {\n  var classes = useStyles();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      filename = _useState2[0],\n      setFilename = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      file = _useState4[0],\n      setFile = _useState4[1];\n\n  function handleDateChange(date) {\n    setBirthDate(format(date, 'dd/MM/yyyy'));\n  }\n\n  function handleOnDrop(files, rejectedFiles) {\n    var curfile = files[0];\n    console.log(files[0].name);\n    setFilename(files[0].name); // this.setState({imagename:files[0].name})\n\n    var reader = new FileReader();\n    reader.addEventListener(\"load\", function () {\n      console.log(\"ondrop called\");\n      setFile(reader.result); // this.setState({\n      //       image:reader.result\n      //   })\n    }, false);\n    reader.readAsDataURL(curfile);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: classes.cardTitleWhite,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Add Employee\"), React.createElement(\"p\", {\n    className: classes.cardCategoryWhite,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Current Address\")), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(CustomInput, {\n    labelText: \"Street 1\",\n    id: \"street1\",\n    formControlProps: {\n      fullWidth: true\n    } // inputProps={{\n    //   disabled: true\n    // }}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(CustomInput, {\n    labelText: \"Street 2\",\n    id: \"street2\",\n    formControlProps: {\n      fullWidth: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(CustomInput, {\n    labelText: \"City\",\n    id: \"city\",\n    formControlProps: {\n      fullWidth: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(CustomInput, {\n    labelText: \"State\",\n    id: \"state\",\n    formControlProps: {\n      fullWidth: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(CustomInput, {\n    labelText: \"Country\",\n    id: \"country\",\n    formControlProps: {\n      fullWidth: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    component: \"legend\",\n    style: {\n      textAlign: 'left'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Image\"), React.createElement(Dropzone, {\n    onDrop: handleOnDrop,\n    multiple: \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, function (_ref) {\n    var getRootProps = _ref.getRootProps,\n        getInputProps = _ref.getInputProps;\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", Object.assign({}, getRootProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, filename === \"\" ? \"Drag and drop file here, or click to select file\" : filename)));\n  }))))))));\n}\n\nexport default CurrentAddress;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/components/AddEmployeeForms/CurrentAddress.js"],"names":["React","useState","makeStyles","InputLabel","FormLabel","RadioGroup","Radio","FormControlLabel","Field","GridItem","GridContainer","CustomInput","Button","Card","CardHeader","CardAvatar","CardBody","CardFooter","avatar","DateFnsUtils","format","DatePicker","MuiPickersUtilsProvider","KeyboardDatePicker","Dropzone","styles","cardCategoryWhite","color","margin","fontSize","marginTop","marginBottom","cardTitleWhite","minHeight","fontWeight","fontFamily","textDecoration","useStyles","CurrentAddress","props","classes","filename","setFilename","file","setFile","handleDateChange","date","setBirthDate","handleOnDrop","files","rejectedFiles","curfile","console","log","name","reader","FileReader","addEventListener","result","readAsDataURL","fullWidth","textAlign","getRootProps","getInputProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,UAAT,EAAoBC,SAApB,EAA8BC,UAA9B,EAA0CC,KAA1C,EAAiDC,gBAAjD,QAAyE,mBAAzE;AACA,SAASC,KAAT,QAAsB,QAAtB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,OAAOC,MAAP,MAAmB,oCAAnB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,UAAT,EAAqBC,uBAArB,QAAmD,qBAAnD;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,IAAMC,MAAM,GAAG;AACXC,EAAAA,iBAAiB,EAAE;AACjBC,IAAAA,KAAK,EAAE,uBADU;AAEjBC,IAAAA,MAAM,EAAE,GAFS;AAGjBC,IAAAA,QAAQ,EAAE,MAHO;AAIjBC,IAAAA,SAAS,EAAE,GAJM;AAKjBC,IAAAA,YAAY,EAAE;AALG,GADR;AAQXC,EAAAA,cAAc,EAAE;AACdL,IAAAA,KAAK,EAAE,SADO;AAEdG,IAAAA,SAAS,EAAE,KAFG;AAGdG,IAAAA,SAAS,EAAE,MAHG;AAIdC,IAAAA,UAAU,EAAE,KAJE;AAKdC,IAAAA,UAAU,EAAE,4CALE;AAMdJ,IAAAA,YAAY,EAAE,KANA;AAOdK,IAAAA,cAAc,EAAE;AAPF;AARL,CAAf;AAmBA,IAAMC,SAAS,GAAGnC,UAAU,CAACuB,MAAD,CAA5B;;AAEA,SAASa,cAAT,CAAwBC,KAAxB,EAA+B;AAE3B,MAAMC,OAAO,GAAGH,SAAS,EAAzB;;AAF2B,kBAGEpC,QAAQ,CAAC,EAAD,CAHV;AAAA;AAAA,MAGpBwC,QAHoB;AAAA,MAGXC,WAHW;;AAAA,mBAINzC,QAAQ,CAAC,EAAD,CAJF;AAAA;AAAA,MAIpB0C,IAJoB;AAAA,MAIfC,OAJe;;AAK3B,WAASC,gBAAT,CAA0BC,IAA1B,EAA+B;AAC3BC,IAAAA,YAAY,CAAC3B,MAAM,CAAC0B,IAAD,EAAO,YAAP,CAAP,CAAZ;AACH;;AACD,WAASE,YAAT,CAAsBC,KAAtB,EAA4BC,aAA5B,EAA0C;AACtC,QAAMC,OAAO,GAACF,KAAK,CAAC,CAAD,CAAnB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAAC,CAAD,CAAL,CAASK,IAArB;AACAZ,IAAAA,WAAW,CAACO,KAAK,CAAC,CAAD,CAAL,CAASK,IAAV,CAAX,CAHsC,CAKtC;;AACA,QAAMC,MAAM,GAAC,IAAIC,UAAJ,EAAb;AACAD,IAAAA,MAAM,CAACE,gBAAP,CAAwB,MAAxB,EAA+B,YAAI;AAC/BL,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAEJT,MAAAA,OAAO,CAACW,MAAM,CAACG,MAAR,CAAP,CAHmC,CAI/B;AACA;AACA;AACF,KAPF,EAOG,KAPH;AAQMH,IAAAA,MAAM,CAACI,aAAP,CAAqBR,OAArB;AACT;;AACD,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE,EAAd;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAEX,OAAO,CAACR,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAG,IAAA,SAAS,EAAEQ,OAAO,CAACd,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,CADF,EAKE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE,EAAd;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAA0B,IAAA,EAAE,EAAE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,EAAE,EAAC,SAFL;AAGE,IAAA,gBAAgB,EAAE;AAChBkC,MAAAA,SAAS,EAAE;AADK,KAHpB,CAME;AACA;AACA;AARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAaE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE,EAAd;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAA0B,IAAA,EAAE,EAAE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,EAAE,EAAC,SAFL;AAGE,IAAA,gBAAgB,EAAE;AAChBA,MAAAA,SAAS,EAAE;AADK,KAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAbF,EAsBE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE,EAAd;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAA0B,IAAA,EAAE,EAAE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,EAAE,EAAC,MAFL;AAGE,IAAA,gBAAgB,EAAE;AAChBA,MAAAA,SAAS,EAAE;AADK,KAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAtBF,EA+BE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE,EAAd;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAA0B,IAAA,EAAE,EAAE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AACE,IAAA,SAAS,EAAC,OADZ;AAEE,IAAA,EAAE,EAAC,OAFL;AAGE,IAAA,gBAAgB,EAAE;AAChBA,MAAAA,SAAS,EAAE;AADK,KAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA/BF,EAwCE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE,EAAd;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAA0B,IAAA,EAAE,EAAE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AACE,IAAA,SAAS,EAAC,SADZ;AAEE,IAAA,EAAE,EAAC,SAFL;AAGE,IAAA,gBAAgB,EAAE;AAChBA,MAAAA,SAAS,EAAE;AADK,KAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAxCF,EAiDE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE,EAAd;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAA0B,IAAA,EAAE,EAAE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,QAArB;AAA8B,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAC;AAAX,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,EAEA,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAEb,YAAlB;AAAgC,IAAA,QAAQ,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEC;AAAA,QAAEc,YAAF,QAAEA,YAAF;AAAA,QAAgBC,aAAhB,QAAgBA,aAAhB;AAAA,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,6CAASD,YAAY,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACI,+CAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAItB,QAAQ,KAAG,EAAX,GAAc,kDAAd,GAAiEA,QAArE,CAFJ,CADA,CADH;AAAA,GAFD,CAFA,CAjDF,CADF,CALF,CADF,CADA,CADA,CADJ;AA0GH;;AAED,eAAeH,cAAf","sourcesContent":["import React ,{useState} from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { InputLabel,FormLabel,RadioGroup, Radio, FormControlLabel } from \"@material-ui/core\";\nimport { Field } from \"formik\"\n// core components\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardAvatar from \"components/Card/CardAvatar.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport avatar from \"assets/img/faces/marc.jpg\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { format } from \"date-fns\"\nimport { DatePicker, MuiPickersUtilsProvider} from \"material-ui-pickers\";\nimport { KeyboardDatePicker } from '@material-ui/pickers'\nimport Dropzone from 'react-dropzone';\n\nconst styles = {\n    cardCategoryWhite: {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\"\n    },\n    cardTitleWhite: {\n      color: \"#FFFFFF\",\n      marginTop: \"0px\",\n      minHeight: \"auto\",\n      fontWeight: \"300\",\n      fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n      marginBottom: \"3px\",\n      textDecoration: \"none\"\n    }\n  };\n  \nconst useStyles = makeStyles(styles);\n\nfunction CurrentAddress(props) {\n\n    const classes = useStyles();\n    const [filename,setFilename]=useState('')\n    const [file,setFile]=useState('')\n    function handleDateChange(date){\n        setBirthDate(format(date, 'dd/MM/yyyy'))\n    }\n    function handleOnDrop(files,rejectedFiles){\n        const curfile=files[0]\n        console.log(files[0].name)\n        setFilename(files[0].name)\n        \n        // this.setState({imagename:files[0].name})\n        const reader=new FileReader()\n        reader.addEventListener(\"load\",()=>{\n            console.log(\"ondrop called\")\n            \n        setFile(reader.result)\n            // this.setState({\n            //       image:reader.result\n            //   })\n         },false)\n              reader.readAsDataURL(curfile)\n    }\n    return (\n        <div>\n        <GridContainer>\n        <GridItem xs={12} sm={12} md={8}>\n          <Card>\n            <CardHeader color=\"primary\">\n              <h4 className={classes.cardTitleWhite}>Add Employee</h4>\n              <p className={classes.cardCategoryWhite}>Current Address</p>\n            </CardHeader>\n            <CardBody>\n              <GridContainer>\n                <GridItem xs={12} sm={12} md={12}>\n                  <CustomInput\n                    labelText=\"Street 1\"\n                    id=\"street1\"\n                    formControlProps={{\n                      fullWidth: true\n                    }}\n                    // inputProps={{\n                    //   disabled: true\n                    // }}\n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={12}>\n                  <CustomInput\n                    labelText=\"Street 2\"\n                    id=\"street2\"\n                    formControlProps={{\n                      fullWidth: true\n                    }}\n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={12}>\n                  <CustomInput\n                    labelText=\"City\"\n                    id=\"city\"\n                    formControlProps={{\n                      fullWidth: true\n                    }}\n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={12}>\n                  <CustomInput\n                    labelText=\"State\"\n                    id=\"state\"\n                    formControlProps={{\n                      fullWidth: true\n                    }}\n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={12}>\n                  <CustomInput\n                    labelText=\"Country\"\n                    id=\"country\"\n                    formControlProps={{\n                      fullWidth: true\n                    }}\n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={12}>\n                <FormLabel component=\"legend\" style={{textAlign:'left'}}>Image</FormLabel>\n                <Dropzone onDrop={handleOnDrop} multiple=\"true\">\n                    \n                {({getRootProps, getInputProps}) => (\n                    <section>\n                    <div {...getRootProps()}>\n                        <input {...getInputProps()} />\n                        <p>{filename===\"\"?\"Drag and drop file here, or click to select file\":filename}</p>\n                        \n                    </div>\n                    </section>\n                )}\n                </Dropzone>\n                </GridItem>\n              </GridContainer>\n              \n            </CardBody>\n            {/* <CardFooter>\n              <Button color=\"primary\">Update Profile</Button>\n            </CardFooter> */}\n          </Card>\n        </GridItem>\n        {/* <GridItem xs={12} sm={12} md={4}>\n          <Card profile>\n            <CardAvatar profile>\n              <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                <img src={avatar} alt=\"...\" />\n              </a>\n            </CardAvatar>\n            <CardBody profile>\n              <h6 className={classes.cardCategory}>CEO / CO-FOUNDER</h6>\n              <h4 className={classes.cardTitle}>Alec Thompson</h4>\n              <p className={classes.description}>\n                Don{\"'\"}t be scared of the truth because we need to restart the\n                human foundation in truth And I love you like Kanye loves Kanye\n                I love Rick Owens’ bed design but the back is...\n              </p>\n              <Button color=\"primary\" round>\n                Follow\n              </Button>\n            </CardBody>\n          </Card>\n        </GridItem> */}\n      </GridContainer>\n    </div>\n    );\n}\n\nexport default CurrentAddress;"]},"metadata":{},"sourceType":"module"}