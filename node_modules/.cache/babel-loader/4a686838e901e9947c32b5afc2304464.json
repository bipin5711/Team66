{"ast":null,"code":"import _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/views/Employee/StepperNavigationButtons.js\";\nimport React, { useContext, createContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { StepContext } from 'views/Employee/AddEmployee';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: '100%'\n    },\n    button: {\n      marginRight: theme.spacing(1)\n    },\n    instructions: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1)\n    },\n    cardCategoryWhite: {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\"\n    },\n    cardTitleWhite: {\n      color: \"#FFFFFF\",\n      marginTop: \"0px\",\n      minHeight: \"auto\",\n      fontWeight: \"300\",\n      fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n      marginBottom: \"3px\",\n      textDecoration: \"none\"\n    }\n  };\n});\n\nfunction getSteps() {\n  return ['Employee Information', 'Current Address', 'Permanent Address', 'Emergency Contact', 'Job Details', 'Id Prrof', 'Employee Picture', 'Feedback'];\n}\n\nexport default function StepperNavigationButtons() {\n  var classes = useStyles();\n\n  var _useContext = useContext(StepContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      activeStep = _useContext2[0],\n      setActiveStep = _useContext2[1];\n\n  var _useState = useState(new Set()),\n      _useState2 = _slicedToArray(_useState, 2),\n      skipped = _useState2[0],\n      setSkipped = _useState2[1];\n\n  var steps = getSteps();\n\n  var isStepOptional = function isStepOptional(step) {\n    return step === 7 || step === 5;\n  };\n\n  var isStepSkipped = function isStepSkipped(step) {\n    return skipped.has(step);\n  }; // const handleNext = () => {\n  //   let newSkipped = skipped;\n  //   if (isStepSkipped(activeStep)) {\n  //     newSkipped = new Set(newSkipped.values());\n  //     newSkipped.delete(activeStep);\n  //   }\n  //   setActiveStep(prevActiveStep => prevActiveStep + 1);\n  //   setSkipped(newSkipped);\n  // };\n\n\n  var handleBack = function handleBack() {\n    setActiveStep(function (prevActiveStep) {\n      return prevActiveStep - 1;\n    });\n  };\n\n  var handleSkip = function handleSkip() {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep(function (prevActiveStep) {\n      return prevActiveStep + 1;\n    });\n    setSkipped(function (prevSkipped) {\n      var newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Button, {\n    disabled: activeStep === 0,\n    onClick: handleBack,\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Back\"), isStepOptional(activeStep) && React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleSkip,\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Skip\"), React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\" //   onClick={handleNext}\n    ,\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, activeStep === steps.length - 1 ? 'Finish' : 'Next'));\n}\n;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/views/Employee/StepperNavigationButtons.js"],"names":["React","useContext","createContext","useState","makeStyles","Button","StepContext","useStyles","theme","root","width","button","marginRight","spacing","instructions","marginTop","marginBottom","cardCategoryWhite","color","margin","fontSize","cardTitleWhite","minHeight","fontWeight","fontFamily","textDecoration","getSteps","StepperNavigationButtons","classes","activeStep","setActiveStep","Set","skipped","setSkipped","steps","isStepOptional","step","isStepSkipped","has","handleBack","prevActiveStep","handleSkip","Error","prevSkipped","newSkipped","values","add","length"],"mappings":"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","sourcesContent":["import React , {useContext,createContext, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Button from '@material-ui/core/Button';\nimport {StepContext} from 'views/Employee/AddEmployee'\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n    },\n    button: {\n      marginRight: theme.spacing(1),\n    },\n    instructions: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n    cardCategoryWhite: {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\"\n    },\n    cardTitleWhite: {\n      color: \"#FFFFFF\",\n      marginTop: \"0px\",\n      minHeight: \"auto\",\n      fontWeight: \"300\",\n      fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n      marginBottom: \"3px\",\n      textDecoration: \"none\"\n    }\n  }));\n  function getSteps() {\n    return ['Employee Information', 'Current Address', 'Permanent Address', 'Emergency Contact', 'Job Details', 'Id Prrof', 'Employee Picture', 'Feedback'];\n  }\nexport default function StepperNavigationButtons(){\n    const classes=useStyles()\n    const [activeStep, setActiveStep] = useContext(StepContext);\n    const [skipped, setSkipped] = useState(new Set());\n    const steps = getSteps();\n    const isStepOptional = step => {\n      return step === 7 || step ===5 ;\n    };\n  \n    const isStepSkipped = step => {\n      return skipped.has(step);\n    };\n  \n    // const handleNext = () => {\n    //   let newSkipped = skipped;\n    //   if (isStepSkipped(activeStep)) {\n    //     newSkipped = new Set(newSkipped.values());\n    //     newSkipped.delete(activeStep);\n    //   }\n  \n    //   setActiveStep(prevActiveStep => prevActiveStep + 1);\n    //   setSkipped(newSkipped);\n    // };\n  \n    const handleBack = () => {\n      setActiveStep(prevActiveStep => prevActiveStep - 1);\n    };\n  \n    const handleSkip = () => {\n      if (!isStepOptional(activeStep)) {\n        // You probably want to guard against something like this,\n        // it should never occur unless someone's actively trying to break something.\n        throw new Error(\"You can't skip a step that isn't optional.\");\n      }\n  \n      setActiveStep(prevActiveStep => prevActiveStep + 1);\n      setSkipped(prevSkipped => {\n        const newSkipped = new Set(prevSkipped.values());\n        newSkipped.add(activeStep);\n        return newSkipped;\n      });\n    };\n  \n    \n    return(\n      <div>\n                <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n                  Back\n                </Button>\n                {isStepOptional(activeStep) && (\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleSkip}\n                    className={classes.button}\n                  >\n                    Skip\n                  </Button>\n                )}\n  \n                <Button\n                type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                //   onClick={handleNext}\n                  className={classes.button}\n                  \n                >\n                  {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                </Button>\n                \n              </div>\n    )\n  };"]},"metadata":{},"sourceType":"module"}