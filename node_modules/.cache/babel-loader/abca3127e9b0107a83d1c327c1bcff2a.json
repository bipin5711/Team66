{"ast":null,"code":"import _defineProperty from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/components/AddEmployeeForms/EmergencyContact.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from 'react';\nimport { TextField } from \"@material-ui/core\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport { Formik, Field, Form } from 'formik';\nimport { EmployeeContext } from 'views/Employee/AddEmployee';\nimport StepperNavigationButtons from 'views/Employee/StepperNavigationButtons';\nimport * as Yup from 'yup';\nimport { StepContext } from 'views/Employee/AddEmployee';\nvar ValidationSchema = Yup.object().shape({\n  name1: Yup.string().min(2, 'too Short!').required('Required'),\n  relationship1: Yup.string().required('Required')\n}); // const initialValues={\n//   fullName:'',\n//         preferredName:'',\n//         birthDate:new Date(),\n//         gender:'',\n//         maritalStatus:''}\n\nfunction EmergencyContact(props) {\n  var _useContext = useContext(EmployeeContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      employeeData = _useContext2[0],\n      setEmployeeData = _useContext2[1];\n\n  var _useContext3 = useContext(StepContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      activeStep = _useContext4[0],\n      setActiveStep = _useContext4[1];\n\n  var _useState = useState(new Set()),\n      _useState2 = _slicedToArray(_useState, 2),\n      skipped = _useState2[0],\n      setSkipped = _useState2[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    initialValues: employeeData // validationSchema={ValidationSchema}\n    ,\n    onSubmit: function onSubmit(values) {\n      //handleNext()\n      var newSkipped = skipped;\n\n      var isStepSkipped = function isStepSkipped(step) {\n        return skipped.has(step);\n      };\n\n      if (isStepSkipped(activeStep)) {\n        newSkipped = new Set(newSkipped.values());\n        newSkipped[\"delete\"](activeStep);\n      }\n\n      setActiveStep(function (prevActiveStep) {\n        return prevActiveStep + 1;\n      });\n      setSkipped(newSkipped);\n      alert(\"fd\");\n      setEmployeeData(_objectSpread({}, employeeData, {\n        emergencyName1: values.name1,\n        emergencyMobile1: values.mobile1,\n        emergencyRelationship1: values.relationship1,\n        emergencyName2: values.name2,\n        emergencyMobile2: values.mobile2,\n        emergencyRelationship2: values.relationship2\n      }));\n      console.log(\"information\", employeeData);\n    },\n    render: function render(_ref) {\n      var errors = _ref.errors,\n          values = _ref.values,\n          touched = _ref.touched,\n          handleChange = _ref.handleChange,\n          handleSubmit = _ref.handleSubmit;\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Name1\",\n        id: \"name1\",\n        name: \"name1\",\n        value: values.name1,\n        component: TextField,\n        onChange: handleChange,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Mobile\",\n        id: \"mobile1\",\n        value: values.mobile1,\n        name: \"mobile1\",\n        component: TextField,\n        onChange: handleChange,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Relationship\",\n        id: \"relationship1\",\n        name: \"relationship1\",\n        value: values.relationship1,\n        component: TextField,\n        onChange: handleChange,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Name 2\",\n        id: \"name2\",\n        value: values.name2,\n        name: \"name2\",\n        component: TextField,\n        onChange: handleChange,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Mobile\",\n        id: \"mobile2\",\n        name: \"mobile2\",\n        value: values.mobile2,\n        component: TextField,\n        onChange: handleChange,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Relationship\",\n        id: \"relationship2\",\n        value: values.relationship2,\n        name: \"relationship2\",\n        component: TextField,\n        onChange: handleChange,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(StepperNavigationButtons, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }));\n}\n\nexport default EmergencyContact;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/components/AddEmployeeForms/EmergencyContact.js"],"names":["React","useState","useContext","TextField","GridItem","GridContainer","Formik","Field","Form","EmployeeContext","StepperNavigationButtons","Yup","StepContext","ValidationSchema","object","shape","name1","string","min","required","relationship1","EmergencyContact","props","employeeData","setEmployeeData","activeStep","setActiveStep","Set","skipped","setSkipped","values","newSkipped","isStepSkipped","step","has","prevActiveStep","alert","emergencyName1","emergencyMobile1","mobile1","emergencyRelationship1","emergencyName2","name2","emergencyMobile2","mobile2","emergencyRelationship2","relationship2","console","log","errors","touched","handleChange","handleSubmit"],"mappings":"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","sourcesContent":["import React ,{useState, useContext} from 'react';\nimport { TextField } from \"@material-ui/core\";\n// core components\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport { Formik , Field, Form} from 'formik'\nimport {EmployeeContext} from 'views/Employee/AddEmployee'\nimport  StepperNavigationButtons  from 'views/Employee/StepperNavigationButtons';\nimport * as Yup from 'yup'\nimport {StepContext} from 'views/Employee/AddEmployee'\n\nconst ValidationSchema = Yup.object().shape({\n  name1: Yup.string()\n    .min(2,'too Short!')\n    .required('Required'),\n  relationship1: Yup.string().required('Required'),\n \n   \n}); \n// const initialValues={\n//   fullName:'',\n//         preferredName:'',\n//         birthDate:new Date(),\n//         gender:'',\n//         maritalStatus:''}\nfunction EmergencyContact(props) {\n    const [employeeData,setEmployeeData]=useContext(EmployeeContext)\n    const [activeStep, setActiveStep] = useContext(StepContext);\n    const [skipped, setSkipped] = useState(new Set());\n    \n    return (\n        <div>\n          <Formik\n            initialValues={employeeData}\n            // validationSchema={ValidationSchema}\n            onSubmit={values => {\n              //handleNext()\n              let newSkipped = skipped;\n              const isStepSkipped = step => {\n                return skipped.has(step);\n              };\n              if (isStepSkipped(activeStep)) {\n                newSkipped = new Set(newSkipped.values());\n                newSkipped.delete(activeStep);\n              }\n              setActiveStep(prevActiveStep => prevActiveStep + 1);\n              setSkipped(newSkipped);\n\n\n              alert(\"fd\")\n              setEmployeeData({...employeeData,\n                emergencyName1:values.name1,\n                emergencyMobile1:values.mobile1,\n                emergencyRelationship1:values.relationship1,\n                emergencyName2:values.name2,\n                emergencyMobile2:values.mobile2,\n                emergencyRelationship2:values.relationship2})\n              console.log(\"information\",employeeData)\n              }} \n            render= {({errors,values, touched ,handleChange, handleSubmit}) => (\n              <Form>\n              <GridContainer>\n                <GridItem xs={12} sm={12} md={12}>\n                  <Field\n                    label=\"Name1\"\n                    id=\"name1\"\n                    name=\"name1\"\n                    value={values.name1}\n                    component={TextField}\n                    onChange={handleChange}\n                    fullWidth\n                \n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={12}>\n                  <Field\n                    label=\"Mobile\"\n                    id=\"mobile1\"\n                    value={values.mobile1}\n                    name=\"mobile1\"\n                    component={TextField}\n                    onChange={handleChange}\n                    fullWidth\n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={12}>\n                  <Field\n                    label=\"Relationship\"\n                    id=\"relationship1\"\n                    name=\"relationship1\"\n                    value={values.relationship1}\n                    component={TextField}\n                    onChange={handleChange}\n                    fullWidth\n                \n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={12}>\n                  <Field\n                    label=\"Name 2\"\n                    id=\"name2\"\n                    value={values.name2}\n                    name=\"name2\"\n                    component={TextField}\n                    onChange={handleChange}\n                    fullWidth\n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={12}>\n                  <Field\n                    label=\"Mobile\"\n                    id=\"mobile2\"\n                    name=\"mobile2\"\n                    value={values.mobile2}\n                    component={TextField}\n                    onChange={handleChange}\n                    fullWidth\n                \n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={12}>\n                  <Field\n                    label=\"Relationship\"\n                    id=\"relationship2\"\n                    value={values.relationship2}\n                    name=\"relationship2\"\n                    component={TextField}\n                    onChange={handleChange}\n                    fullWidth\n                  />\n                </GridItem>\n               \n                <GridItem>\n                <StepperNavigationButtons />\n                {/* <Button type=\"submit\">fds</Button> */}\n                </GridItem>\n              </GridContainer>\n              </Form>\n               )\n               } \n            >\n              \n              </Formik>\n              </div>\n    );\n}\n\nexport default EmergencyContact;"]},"metadata":{},"sourceType":"module"}