{"ast":null,"code":"import _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/components/Stepper/StepperNavigationButtons.js\";\nimport React, { useContext, createContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles'; // import Button from '@material-ui/core/Button';\n\nimport { StepContext } from 'views/Employee/Add';\nimport Button from \"components/CustomButtons/Button.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    button: {\n      marginRight: theme.spacing(1),\n      marginTop: \"32px\" // paddingBottom: \"10px\"\n\n    }\n  };\n});\n\nfunction getSteps() {\n  return ['Employee Information', 'Current Address', 'Permanent Address', 'Emergency Contact', 'Job Details', 'Id Prrof', 'Employee Picture', 'Feedback'];\n}\n\nexport default function StepperNavigationButtons() {\n  var classes = useStyles();\n\n  var _useContext = useContext(StepContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      activeStep = _useContext2[0],\n      setActiveStep = _useContext2[1];\n\n  var _useState = useState(new Set()),\n      _useState2 = _slicedToArray(_useState, 2),\n      skipped = _useState2[0],\n      setSkipped = _useState2[1];\n\n  var steps = getSteps();\n\n  var isStepOptional = function isStepOptional(step) {\n    return step === 7 || step === 5;\n  };\n\n  var isStepSkipped = function isStepSkipped(step) {\n    return skipped.has(step);\n  };\n\n  var handleBack = function handleBack() {\n    setActiveStep(function (prevActiveStep) {\n      return prevActiveStep - 1;\n    });\n  };\n\n  var handleSkip = function handleSkip() {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep(function (prevActiveStep) {\n      return prevActiveStep + 1;\n    });\n    setSkipped(function (prevSkipped) {\n      var newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 5,\n    sm: 2,\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Button, {\n    disabled: activeStep === 0,\n    onClick: handleBack,\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Back\")), isStepOptional(activeStep) && React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleSkip,\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Skip\")), React.createElement(GridItem, {\n    xs: 5,\n    sm: 2,\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\" //   onClick={handleNext}\n    ,\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, activeStep === steps.length - 1 ? 'Finish' : 'Next'))));\n}\n;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/components/Stepper/StepperNavigationButtons.js"],"names":["React","useContext","createContext","useState","makeStyles","StepContext","Button","GridItem","GridContainer","useStyles","theme","button","marginRight","spacing","marginTop","getSteps","StepperNavigationButtons","classes","activeStep","setActiveStep","Set","skipped","setSkipped","steps","isStepOptional","step","isStepSkipped","has","handleBack","prevActiveStep","handleSkip","Error","prevSkipped","newSkipped","values","add","length"],"mappings":"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","sourcesContent":["import React, { useContext, createContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n// import Button from '@material-ui/core/Button';\nimport { StepContext } from 'views/Employee/Add'\nimport Button from \"components/CustomButtons/Button.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    marginRight: theme.spacing(1),\n    marginTop: \"32px\",\n    // paddingBottom: \"10px\"\n  },\n}));\nfunction getSteps() {\n  return ['Employee Information', 'Current Address', 'Permanent Address', 'Emergency Contact', 'Job Details', 'Id Prrof', 'Employee Picture', 'Feedback'];\n}\nexport default function StepperNavigationButtons() {\n  const classes = useStyles()\n  const [activeStep, setActiveStep] = useContext(StepContext);\n  const [skipped, setSkipped] = useState(new Set());\n  const steps = getSteps();\n  const isStepOptional = step => {\n    return step === 7 || step === 5;\n  };\n  const isStepSkipped = step => {\n    return skipped.has(step);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(prevSkipped => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  return (\n    <div>\n       <GridContainer>\n      <GridItem xs={5} sm={2} md={3}>\n      <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n        Back\n                </Button>\n                </GridItem>\n                \n      {isStepOptional(activeStep) && (\n        <GridItem xs={12} sm={12}><Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleSkip}\n          className={classes.button}\n        >Skip</Button></GridItem>\n      )}\n      <GridItem xs={5} sm={2} md={3}>\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        //   onClick={handleNext}\n        className={classes.button}\n      >\n        {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n      </Button></GridItem>\n      </GridContainer>\n    </div>\n  )\n};"]},"metadata":{},"sourceType":"module"}