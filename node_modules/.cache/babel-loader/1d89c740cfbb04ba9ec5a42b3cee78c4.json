{"ast":null,"code":"import _defineProperty from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/components/AddEmployeeForms/IdProof.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from 'react';\nimport { FormLabel } from \"@material-ui/core\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport { Formik, Form } from 'formik';\nimport StepperNavigationButtons from 'components/Stepper/StepperNavigationButtons';\nimport { StepContext, EmployeeContext, TitleContext } from 'views/Employee/Add';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CustomDropzone from 'components/Dropzone/Dropzone';\nvar useStyles = makeStyles({\n  field: {\n    marginTop: \"32px\"\n  }\n});\n\nfunction IdProof(props) {\n  var classes = useStyles();\n\n  var _useContext = useContext(EmployeeContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      employeeData = _useContext2[0],\n      setEmployeeData = _useContext2[1];\n\n  var _useContext3 = useContext(StepContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      activeStep = _useContext4[0],\n      setActiveStep = _useContext4[1];\n\n  var _useState = useState(new Set()),\n      _useState2 = _slicedToArray(_useState, 2),\n      skipped = _useState2[0],\n      setSkipped = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filename = _useState4[0],\n      setFilename = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      file = _useState6[0],\n      setFile = _useState6[1];\n\n  var _useContext5 = useContext(TitleContext),\n      _useContext6 = _slicedToArray(_useContext5, 2),\n      title = _useContext6[0],\n      setTitle = _useContext6[1];\n\n  setTitle('ID Proof');\n\n  function handleOnDrop(files, rejectedFiles) {\n    var curfile = files[0];\n    setFilename(files[0].name);\n    var reader = new FileReader();\n    reader.addEventListener(\"load\", function () {\n      setFile(reader.result);\n    }, false);\n    reader.readAsDataURL(curfile);\n  }\n\n  return React.createElement(Formik, {\n    initialValues: employeeData // validationSchema={ValidationSchema}\n    ,\n    onSubmit: function onSubmit(values) {\n      //handleNext()\n      var newSkipped = skipped;\n\n      var isStepSkipped = function isStepSkipped(step) {\n        return skipped.has(step);\n      };\n\n      if (isStepSkipped(activeStep)) {\n        newSkipped = new Set(newSkipped.values());\n        newSkipped[\"delete\"](activeStep);\n      }\n\n      setActiveStep(function (prevActiveStep) {\n        return prevActiveStep + 1;\n      });\n      setSkipped(newSkipped);\n      setEmployeeData(_objectSpread({}, employeeData, {\n        idProof: filename\n      }));\n    },\n    render: function render() {\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        style: {\n          textAlign: 'left'\n        },\n        className: classes.field,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Upload ID Proof\"), React.createElement(Field // label=\"Image\"\n      , {\n        id: \"idProof\",\n        name: \"idProof\",\n        component: CustomDropzone,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(StepperNavigationButtons, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  });\n}\n\nexport default IdProof;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/components/AddEmployeeForms/IdProof.js"],"names":["React","useState","useContext","FormLabel","GridItem","GridContainer","Formik","Form","StepperNavigationButtons","StepContext","EmployeeContext","TitleContext","makeStyles","CustomDropzone","useStyles","field","marginTop","IdProof","props","classes","employeeData","setEmployeeData","activeStep","setActiveStep","Set","skipped","setSkipped","filename","setFilename","file","setFile","title","setTitle","handleOnDrop","files","rejectedFiles","curfile","name","reader","FileReader","addEventListener","result","readAsDataURL","values","newSkipped","isStepSkipped","step","has","prevActiveStep","idProof","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { FormLabel } from \"@material-ui/core\";\n// core components\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport { Formik, Form } from 'formik'\nimport StepperNavigationButtons from 'components/Stepper/StepperNavigationButtons';\nimport { StepContext, EmployeeContext, TitleContext } from 'views/Employee/Add'\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CustomDropzone from 'components/Dropzone/Dropzone'\n\nconst useStyles=makeStyles({\n  field:{\n    marginTop: \"32px\"\n  }\n})\nfunction IdProof(props) {\n\n  const classes=useStyles()\n  const [employeeData, setEmployeeData] = useContext(EmployeeContext)\n  const [activeStep, setActiveStep] = useContext(StepContext);\n  const [skipped, setSkipped] = useState(new Set());\n  const [filename, setFilename] = useState('')\n  const [file, setFile] = useState('')\n  const [title, setTitle] = useContext(TitleContext);\n  setTitle('ID Proof')\n\n  function handleOnDrop(files, rejectedFiles) {\n    const curfile = files[0]\n    setFilename(files[0].name)\n    const reader = new FileReader()\n    reader.addEventListener(\"load\", () => {\n      setFile(reader.result)\n    }, false)\n    reader.readAsDataURL(curfile)\n  }\n\n  return (\n      <Formik\n        initialValues={employeeData}\n        // validationSchema={ValidationSchema}\n        onSubmit={values => {\n          //handleNext()\n          let newSkipped = skipped;\n          const isStepSkipped = step => {\n            return skipped.has(step);\n          };\n          if (isStepSkipped(activeStep)) {\n            newSkipped = new Set(newSkipped.values());\n            newSkipped.delete(activeStep);\n          }\n          setActiveStep(prevActiveStep => prevActiveStep + 1);\n          setSkipped(newSkipped);\n          setEmployeeData({\n            ...employeeData,\n            idProof: filename,\n          })\n        }}\n        render={() => (\n          <Form>\n            <GridContainer>\n\n              <GridItem xs={12} sm={12} md={12}>\n                <FormLabel component=\"legend\" style={{ textAlign: 'left' }} className={classes.field}>Upload ID Proof</FormLabel>\n                <Field\n                  // label=\"Image\"\n                  id=\"idProof\"\n                  name=\"idProof\"\n                  component={CustomDropzone}\n                  fullWidth\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={12}>\n                <StepperNavigationButtons />\n              </GridItem>\n            </GridContainer>\n          </Form>\n        )}\n      >\n      </Formik>\n  );\n}\n\nexport default IdProof;"]},"metadata":{},"sourceType":"module"}