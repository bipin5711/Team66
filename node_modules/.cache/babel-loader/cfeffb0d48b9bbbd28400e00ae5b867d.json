{"ast":null,"code":"import _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/views/Employee/StepperNavigationButtons.js\";\nexport default function StepperNavigationButtons() {\n  var classes = useStyles();\n\n  var _useContext = useContext(StepContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      activeStep = _useContext2[0],\n      setActiveStep = _useContext2[1];\n\n  var _useState = useState(new Set()),\n      _useState2 = _slicedToArray(_useState, 2),\n      skipped = _useState2[0],\n      setSkipped = _useState2[1];\n\n  var steps = getSteps();\n\n  var isStepOptional = function isStepOptional(step) {\n    return step === 7;\n  };\n\n  var isStepSkipped = function isStepSkipped(step) {\n    return skipped.has(step);\n  };\n\n  var handleNext = function handleNext() {\n    var newSkipped = skipped;\n\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped[\"delete\"](activeStep);\n    }\n\n    setActiveStep(function (prevActiveStep) {\n      return prevActiveStep + 1;\n    });\n    setSkipped(newSkipped);\n  };\n\n  var handleBack = function handleBack() {\n    setActiveStep(function (prevActiveStep) {\n      return prevActiveStep - 1;\n    });\n  };\n\n  var handleSkip = function handleSkip() {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep(function (prevActiveStep) {\n      return prevActiveStep + 1;\n    });\n    setSkipped(function (prevSkipped) {\n      var newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Button, {\n    disabled: activeStep === 0,\n    onClick: handleBack,\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Back\"), isStepOptional(activeStep) && React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleSkip,\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Skip\"), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleNext,\n    className: classes.button,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, activeStep === steps.length - 1 ? 'Finish' : 'Next'));\n}\n;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/views/Employee/StepperNavigationButtons.js"],"names":["StepperNavigationButtons","classes","useStyles","useContext","StepContext","activeStep","setActiveStep","useState","Set","skipped","setSkipped","steps","getSteps","isStepOptional","step","isStepSkipped","has","handleNext","newSkipped","values","prevActiveStep","handleBack","handleSkip","Error","prevSkipped","add","button","length"],"mappings":";;AAAA,eAAe,SAASA,wBAAT,GAAmC;AAC9C,MAAMC,OAAO,GAACC,SAAS,EAAvB;;AAD8C,oBAEVC,UAAU,CAACC,WAAD,CAFA;AAAA;AAAA,MAEvCC,UAFuC;AAAA,MAE3BC,aAF2B;;AAAA,kBAGhBC,QAAQ,CAAC,IAAIC,GAAJ,EAAD,CAHQ;AAAA;AAAA,MAGvCC,OAHuC;AAAA,MAG9BC,UAH8B;;AAI9C,MAAMC,KAAK,GAAGC,QAAQ,EAAtB;;AACA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,IAAI,EAAI;AAC7B,WAAOA,IAAI,KAAK,CAAhB;AACD,GAFD;;AAIA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAD,IAAI,EAAI;AAC5B,WAAOL,OAAO,CAACO,GAAR,CAAYF,IAAZ,CAAP;AACD,GAFD;;AAIA,MAAMG,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,QAAIC,UAAU,GAAGT,OAAjB;;AACA,QAAIM,aAAa,CAACV,UAAD,CAAjB,EAA+B;AAC7Ba,MAAAA,UAAU,GAAG,IAAIV,GAAJ,CAAQU,UAAU,CAACC,MAAX,EAAR,CAAb;AACAD,MAAAA,UAAU,UAAV,CAAkBb,UAAlB;AACD;;AAEDC,IAAAA,aAAa,CAAC,UAAAc,cAAc;AAAA,aAAIA,cAAc,GAAG,CAArB;AAAA,KAAf,CAAb;AACAV,IAAAA,UAAU,CAACQ,UAAD,CAAV;AACD,GATD;;AAWA,MAAMG,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBf,IAAAA,aAAa,CAAC,UAAAc,cAAc;AAAA,aAAIA,cAAc,GAAG,CAArB;AAAA,KAAf,CAAb;AACD,GAFD;;AAIA,MAAME,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,QAAI,CAACT,cAAc,CAACR,UAAD,CAAnB,EAAiC;AAC/B;AACA;AACA,YAAM,IAAIkB,KAAJ,CAAU,4CAAV,CAAN;AACD;;AAEDjB,IAAAA,aAAa,CAAC,UAAAc,cAAc;AAAA,aAAIA,cAAc,GAAG,CAArB;AAAA,KAAf,CAAb;AACAV,IAAAA,UAAU,CAAC,UAAAc,WAAW,EAAI;AACxB,UAAMN,UAAU,GAAG,IAAIV,GAAJ,CAAQgB,WAAW,CAACL,MAAZ,EAAR,CAAnB;AACAD,MAAAA,UAAU,CAACO,GAAX,CAAepB,UAAf;AACA,aAAOa,UAAP;AACD,KAJS,CAAV;AAKD,GAbD;;AAgBA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACU,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEb,UAAU,KAAK,CAAjC;AAAoC,IAAA,OAAO,EAAEgB,UAA7C;AAAyD,IAAA,SAAS,EAAEpB,OAAO,CAACyB,MAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADV,EAIWb,cAAc,CAACR,UAAD,CAAd,IACC,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,OAAO,EAAEiB,UAHX;AAIE,IAAA,SAAS,EAAErB,OAAO,CAACyB,MAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALZ,EAeU,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,OAAO,EAAET,UAHX;AAIE,IAAA,SAAS,EAAEhB,OAAO,CAACyB,MAJrB;AAKE,IAAA,IAAI,EAAC,QALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGrB,UAAU,KAAKM,KAAK,CAACgB,MAAN,GAAe,CAA9B,GAAkC,QAAlC,GAA6C,MAPhD,CAfV,CADF;AA4BD;AAAA","sourcesContent":["export default function StepperNavigationButtons(){\n    const classes=useStyles()\n    const [activeStep, setActiveStep] = useContext(StepContext);\n    const [skipped, setSkipped] = useState(new Set());\n    const steps = getSteps();\n    const isStepOptional = step => {\n      return step === 7;\n    };\n  \n    const isStepSkipped = step => {\n      return skipped.has(step);\n    };\n  \n    const handleNext = () => {\n      let newSkipped = skipped;\n      if (isStepSkipped(activeStep)) {\n        newSkipped = new Set(newSkipped.values());\n        newSkipped.delete(activeStep);\n      }\n  \n      setActiveStep(prevActiveStep => prevActiveStep + 1);\n      setSkipped(newSkipped);\n    };\n  \n    const handleBack = () => {\n      setActiveStep(prevActiveStep => prevActiveStep - 1);\n    };\n  \n    const handleSkip = () => {\n      if (!isStepOptional(activeStep)) {\n        // You probably want to guard against something like this,\n        // it should never occur unless someone's actively trying to break something.\n        throw new Error(\"You can't skip a step that isn't optional.\");\n      }\n  \n      setActiveStep(prevActiveStep => prevActiveStep + 1);\n      setSkipped(prevSkipped => {\n        const newSkipped = new Set(prevSkipped.values());\n        newSkipped.add(activeStep);\n        return newSkipped;\n      });\n    };\n  \n    \n    return(\n      <div>\n                <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n                  Back\n                </Button>\n                {isStepOptional(activeStep) && (\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleSkip}\n                    className={classes.button}\n                  >\n                    Skip\n                  </Button>\n                )}\n  \n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleNext}\n                  className={classes.button}\n                  type=\"submit\"\n                >\n                  {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                </Button>\n                \n              </div>\n    )\n  };"]},"metadata":{},"sourceType":"module"}