{"ast":null,"code":"import _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/components/AddEmployeeForms/EmployeeInformation.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { FormLabel, Radio, FormControlLabel } from \"@material-ui/core\";\nimport { TextField, RadioGroup } from 'formik-material-ui';\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomDatePicker from 'components/Pickers/DatePicker';\nimport { Formik, Field, Form } from 'formik';\nimport StepperNavigationButtons from 'components/Stepper/StepperNavigationButtons';\nimport * as Yup from 'yup';\nimport { StepContext, EmployeeContext, TitleContext } from 'views/Employee/Add';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { format } from 'date-fns';\nvar validationSchema = Yup.object().shape({\n  name: Yup.string().min(2, 'too Short!').required('Required'),\n  preferredName: Yup.string(),\n  birthDate: Yup.date().nullable().min(new Date('01-01-1900'), 'Birth Date must be greater than 01-01-1960').max(new Date(), 'Birth Date is cannot greater than current day').required('Birth date is Required')\n});\nvar useStyles = makeStyles({\n  field: _defineProperty({\n    marginTop: '32px'\n  }, '@media (max-width:769px)', {\n    // eslint-disable-line no-useless-computed-key\n    marginTop: '10px'\n  })\n});\n\nfunction EmployeeInformation(props) {\n  var classes = useStyles();\n\n  var _useContext = useContext(EmployeeContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      employeeData = _useContext2[0],\n      setEmployeeData = _useContext2[1];\n\n  var _useContext3 = useContext(StepContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      activeStep = _useContext4[0],\n      setActiveStep = _useContext4[1];\n\n  var _useState = useState(new Set()),\n      _useState2 = _slicedToArray(_useState, 2),\n      skipped = _useState2[0],\n      setSkipped = _useState2[1]; // const [data,setData]=useState({})\n  // console.log\n\n\n  var _useContext5 = useContext(TitleContext),\n      _useContext6 = _slicedToArray(_useContext5, 2),\n      title = _useContext6[0],\n      setTitle = _useContext6[1];\n\n  setTitle('Employee Information');\n  return React.createElement(Formik, {\n    initialValues: employeeData // validationSchema={validationSchema}\n    ,\n    onSubmit: function onSubmit(values) {\n      //handleNext()\n      var newSkipped = skipped;\n\n      var isStepSkipped = function isStepSkipped(step) {\n        return skipped.has(step);\n      };\n\n      if (isStepSkipped(activeStep)) {\n        newSkipped = new Set(newSkipped.values());\n        newSkipped[\"delete\"](activeStep);\n      } // alert(values.birthDate.length)\n\n\n      setActiveStep(function (prevActiveStep) {\n        return prevActiveStep + 1;\n      });\n      setSkipped(newSkipped);\n      setEmployeeData(_objectSpread({}, employeeData, {\n        name: values.name,\n        maritalStatus: values.maritalStatus,\n        preferredName: values.preferredName,\n        birthDate: values.birthDate.length === undefined ? format(values.birthDate, 'yyyy-MM-dd') : values.birthDate,\n        gender: values.gender\n      })); // console.log(values.name)\n    },\n    render: function render(_ref) {\n      var values = _ref.values,\n          setFieldValue = _ref.setFieldValue;\n      // console.log(\"values\",values)\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Full Name(As on your ID)\",\n        id: \"name\",\n        name: \"name\" // value={employeeData.name}\n        ,\n        component: TextField,\n        className: classes.field,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Preferred Name\",\n        id: \"preferredName\",\n        name: \"preferredName\",\n        className: classes.field,\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }))), React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        style: {\n          textAlign: 'left'\n        },\n        className: classes.field,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Birth Date\"), React.createElement(Field, {\n        name: \"birthDate\",\n        component: CustomDatePicker // label=\"Date\"\n        ,\n        placeholder: \"Enter Date of Birth\",\n        fullWidth: true,\n        format: \"dd-MM-yyyy\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        style: {\n          textAlign: 'left'\n        },\n        className: classes.field,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Gender\"), React.createElement(Field, {\n        fullWidth: true,\n        id: \"gender\",\n        name: \"gender\",\n        component: RadioGroup,\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        id: \"gender\",\n        label: \"Male\",\n        control: React.createElement(Radio, {\n          id: \"gender\",\n          color: \"secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }),\n        value: \"Male\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        id: \"gender\",\n        value: \"Female\",\n        control: React.createElement(Radio, {\n          id: \"gender\",\n          color: \"secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }),\n        label: \"Female\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }))), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        style: {\n          textAlign: 'left'\n        },\n        className: classes.field,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Marital Status\"), React.createElement(Field, {\n        fullWidth: true,\n        id: \"maritalStatus\",\n        name: \"maritalStatus\",\n        component: RadioGroup,\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        id: \"maritalStatus\",\n        label: \"Married\",\n        control: React.createElement(Radio, {\n          id: \"maritalStatus\",\n          color: \"secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }),\n        value: \"Married\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        id: \"maritalStatus\",\n        value: \"Single\",\n        control: React.createElement(Radio, {\n          id: \"maritalStatus\",\n          color: \"secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }),\n        label: \"Single\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        id: \"maritalStatus\",\n        value: \"Other\",\n        control: React.createElement(Radio, {\n          id: \"maritalStatus\",\n          color: \"secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }),\n        label: \"Other\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      })))), React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(StepperNavigationButtons, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  });\n}\n\nexport default EmployeeInformation;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/components/AddEmployeeForms/EmployeeInformation.js"],"names":["React","useState","useContext","useEffect","FormLabel","Radio","FormControlLabel","TextField","RadioGroup","GridItem","GridContainer","CustomDatePicker","Formik","Field","Form","StepperNavigationButtons","Yup","StepContext","EmployeeContext","TitleContext","makeStyles","format","validationSchema","object","shape","name","string","min","required","preferredName","birthDate","date","nullable","Date","max","useStyles","field","marginTop","EmployeeInformation","props","classes","employeeData","setEmployeeData","activeStep","setActiveStep","Set","skipped","setSkipped","title","setTitle","values","newSkipped","isStepSkipped","step","has","prevActiveStep","maritalStatus","length","undefined","gender","setFieldValue","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { FormLabel, Radio, FormControlLabel } from \"@material-ui/core\";\nimport { TextField, RadioGroup } from 'formik-material-ui';\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomDatePicker from 'components/Pickers/DatePicker'\nimport { Formik, Field, Form } from 'formik'\nimport StepperNavigationButtons from 'components/Stepper/StepperNavigationButtons';\nimport * as Yup from 'yup'\nimport { StepContext, EmployeeContext, TitleContext } from 'views/Employee/Add'\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { format } from 'date-fns';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'too Short!')\n    .required('Required'),\n  preferredName: Yup.string(),\n  birthDate: Yup.date().nullable()\n    .min(new Date('01-01-1900'), 'Birth Date must be greater than 01-01-1960')\n    .max(new Date(), 'Birth Date is cannot greater than current day')\n    .required('Birth date is Required'),\n\n\n});\nconst useStyles = makeStyles({\n  \n  field: {\n    marginTop: '32px',\n    ['@media (max-width:769px)']: { // eslint-disable-line no-useless-computed-key\n      marginTop: '10px'\n    }\n  }\n\n})\nfunction EmployeeInformation(props) {\n  const classes = useStyles()\n  const [employeeData, setEmployeeData] = useContext(EmployeeContext)\n  const [activeStep, setActiveStep] = useContext(StepContext);\n  const [skipped, setSkipped] = useState(new Set());\n  // const [data,setData]=useState({})\n  // console.log\n  const [title, setTitle] = useContext(TitleContext);\n  setTitle('Employee Information')\n  return (\n\n    <Formik\n      initialValues={employeeData}\n      // validationSchema={validationSchema}\n      onSubmit={values => {\n        //handleNext()\n        let newSkipped = skipped;\n        const isStepSkipped = step => {\n          return skipped.has(step);\n        };\n        if (isStepSkipped(activeStep)) {\n          newSkipped = new Set(newSkipped.values());\n          newSkipped.delete(activeStep);\n        }\n        // alert(values.birthDate.length)\n        setActiveStep(prevActiveStep => prevActiveStep + 1);\n        setSkipped(newSkipped);\n        setEmployeeData({\n          ...employeeData,\n          name: values.name,\n          maritalStatus: values.maritalStatus,\n          preferredName: values.preferredName,\n          birthDate: values.birthDate.length===undefined?format(values.birthDate, 'yyyy-MM-dd'):values.birthDate,\n          gender: values.gender\n        })\n        // console.log(values.name)\n      }}\n      render={({ values, setFieldValue }) => {\n        // console.log(\"values\",values)\n        return (\n        <Form>\n          <GridContainer>\n            <GridItem xs={12} sm={12} md={7}>\n              <Field\n                label=\"Full Name(As on your ID)\"\n                id=\"name\"\n                name=\"name\"\n                // value={employeeData.name}\n                component={TextField}\n                className={classes.field}\n                fullWidth\n              />\n            </GridItem>\n\n            <GridItem xs={12} sm={12} md={5}>\n              <Field\n                label=\"Preferred Name\"\n                id=\"preferredName\"\n                name=\"preferredName\"\n                className={classes.field}\n                component={TextField}\n                fullWidth\n              />\n\n            </GridItem>\n          </GridContainer>\n          <GridContainer>\n            <GridItem xs={12} sm={12} md={3}>\n              <FormLabel component=\"legend\" style={{ textAlign: 'left' }} className={classes.field}>Birth Date</FormLabel>\n              <Field\n                name=\"birthDate\"\n                component={CustomDatePicker}\n                // label=\"Date\"\n                placeholder=\"Enter Date of Birth\"\n                fullWidth\n                format=\"dd-MM-yyyy\"\n              />\n            </GridItem>\n\n            <GridItem xs={12} sm={12} md={4}>\n              <FormLabel component=\"legend\" style={{ textAlign: 'left' }} className={classes.field}>Gender</FormLabel>\n              <Field fullWidth\n                id=\"gender\"\n                name=\"gender\"\n                component={RadioGroup}\n                row\n              >\n                <FormControlLabel\n                  id=\"gender\"\n                  label=\"Male\"\n                  control={<Radio id=\"gender\" color=\"secondary\" />}\n                  value=\"Male\"\n                />\n                <FormControlLabel\n                  id=\"gender\"\n                  value=\"Female\"\n                  control={<Radio id=\"gender\" color=\"secondary\" />}\n                  label=\"Female\"\n                />\n              </Field>\n            </GridItem>\n\n            <GridItem xs={12} sm={12} md={5}>\n              <FormLabel component=\"legend\" style={{ textAlign: 'left' }} className={classes.field}>Marital Status</FormLabel>\n              <Field fullWidth\n                id=\"maritalStatus\"\n                name=\"maritalStatus\"\n                component={RadioGroup}\n                row\n              >\n                <FormControlLabel\n                  id=\"maritalStatus\"\n                  label=\"Married\"\n                  control={<Radio id=\"maritalStatus\" color=\"secondary\" />}\n                  value=\"Married\"\n                />\n                <FormControlLabel\n                  id=\"maritalStatus\"\n                  value=\"Single\"\n                  control={<Radio id=\"maritalStatus\" color=\"secondary\" />}\n                  label=\"Single\"\n                />\n                <FormControlLabel\n                  id=\"maritalStatus\"\n                  value=\"Other\"\n                  control={<Radio id=\"maritalStatus\" color=\"secondary\" />}\n                  label=\"Other\"\n                />\n              </Field>\n            </GridItem>\n          </GridContainer>\n          <GridContainer>\n            <GridItem xs={12} sm={12} md={5}>\n              <StepperNavigationButtons />\n            </GridItem>\n\n          </GridContainer>\n        </Form>\n      )\n    }}\n  >\n    </Formik>\n  );\n}\n\nexport default EmployeeInformation;"]},"metadata":{},"sourceType":"module"}