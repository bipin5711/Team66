{"ast":null,"code":"import _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/views/Employee/AddEmployee.js\";\nimport React, { useContext, createContext, useState } from 'react';\nimport EmployeeInformation from 'components/AddEmployeeForms/EmployeeInformation';\nimport CurrentAddress from 'components/AddEmployeeForms/CurrentAddress';\nimport PermanentAddress from 'components/AddEmployeeForms/PermanentAddress';\nimport EmergencyContact from 'components/AddEmployeeForms/EmergencyContact';\nimport JobDetails from 'components/AddEmployeeForms/JobDetails';\nimport IdProof from 'components/AddEmployeeForms/IdProof';\nimport EmployeePicture from 'components/AddEmployeeForms/EmployeePicture';\nimport Feedback from 'components/AddEmployeeForms/Feedback';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nexport var getButtons = function getButtons() {\n  var classes = useStyles();\n\n  var _useContext = useContext(StepContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      activeStep = _useContext2[0],\n      setActiveStep = _useContext2[1];\n\n  var _useState = useState(new Set()),\n      _useState2 = _slicedToArray(_useState, 2),\n      skipped = _useState2[0],\n      setSkipped = _useState2[1];\n\n  var steps = getSteps();\n\n  var isStepOptional = function isStepOptional(step) {\n    return step === 7;\n  };\n\n  var isStepSkipped = function isStepSkipped(step) {\n    return skipped.has(step);\n  };\n\n  var handleNext = function handleNext() {\n    var newSkipped = skipped;\n\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped[\"delete\"](activeStep);\n    }\n\n    setActiveStep(function (prevActiveStep) {\n      return prevActiveStep + 1;\n    });\n    setSkipped(newSkipped);\n  };\n\n  var handleBack = function handleBack() {\n    setActiveStep(function (prevActiveStep) {\n      return prevActiveStep - 1;\n    });\n  };\n\n  var handleSkip = function handleSkip() {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep(function (prevActiveStep) {\n      return prevActiveStep + 1;\n    });\n    setSkipped(function (prevSkipped) {\n      var newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Button, {\n    disabled: activeStep === 0,\n    onClick: handleBack,\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Back\"), isStepOptional(activeStep) && React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleSkip,\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Skip\"), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleNext,\n    className: classes.button,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, activeStep === steps.length - 1 ? 'Finish' : 'Next'));\n};\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: '100%'\n    },\n    button: {\n      marginRight: theme.spacing(1)\n    },\n    instructions: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1)\n    },\n    cardCategoryWhite: {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\"\n    },\n    cardTitleWhite: {\n      color: \"#FFFFFF\",\n      marginTop: \"0px\",\n      minHeight: \"auto\",\n      fontWeight: \"300\",\n      fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n      marginBottom: \"3px\",\n      textDecoration: \"none\"\n    }\n  };\n});\n\nfunction getSteps() {\n  return ['Employee Information', 'Current Address', 'Permanent Address', 'Emergency Contact', 'Job Details', 'Id Prrof', 'Employee Picture', 'Feedback'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return React.createElement(EmployeeInformation, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      });\n\n    case 1:\n      return React.createElement(CurrentAddress, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      });\n\n    case 2:\n      return React.createElement(PermanentAddress, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      });\n\n    case 3:\n      return React.createElement(EmergencyContact, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      });\n\n    case 4:\n      return React.createElement(JobDetails, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      });\n\n    case 5:\n      return React.createElement(IdProof, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      });\n\n    case 6:\n      return React.createElement(EmployeePicture, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      });\n\n    case 7:\n      return React.createElement(Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      });\n\n    default:\n      return 'Unknown step';\n  }\n}\n\nvar initialValues = {\n  fullName: '',\n  preferredName: 'ds',\n  birthDate: '',\n  gender: '',\n  maritalStatus: '',\n  currentStreet1: '',\n  currentStreet2: '',\n  currentCity: '',\n  currentState: '',\n  currentCountry: '',\n  currentAddressProof: '',\n  permanentStreet1: '',\n  permanentStreet2: '',\n  permanentCity: '',\n  permanentState: '',\n  permanentCountry: '',\n  permanentAddressProof: '',\n  emergencyName1: '',\n  emergencyMobile1: '',\n  emergencyRelationship1: '',\n  emergencyName2: '',\n  emergencyMobile2: '',\n  emergencyRelationship2: '',\n  jobHireDate: '',\n  jobSalary: '',\n  jobCurrentsalary: '',\n  jobBond: '',\n  idProof: '',\n  picture: '',\n  feedback: ''\n}; // const initialValues={\n//     employeeInformation:{\n//         fullName:'',\n//         preferredName:'',\n//         birthDate:'',\n//         gender:'',\n//         maritalStatus:''\n//     },\n//     currentAddress:{\n//         street1:'',\n//         street2:'',\n//         city:'',\n//         state:'',\n//         country:'',\n//         addressProof:''\n//     },\n//     permanentAddress:{\n//         street1:'',\n//         street2:'',\n//         city:'',\n//         state:'',\n//         country:'',\n//         addressProof:''\n//     },\n//     emergencyContact:{\n//         name1:'',\n//         mobile1:'',\n//         relationship1:'',\n//         name2:'',\n//         mobile2:'',\n//         relationship2:''\n//     },\n//     jobDetails:{\n//         hireDate:'',\n//         salary:'',\n//         currentSalary:'',\n//         bond:''\n//     },\n//     idProof:{\n//         idProof:''\n//     },\n//     employeePicture:{\n//         picture:''\n//     },\n//     feedback:{\n//         feedback:''\n//     }    \n// }\n\nexport var EmployeeContext = createContext();\nexport var StepContext = createContext();\nexport var SkipContext = createContext();\nexport default function AddEmployee(props) {\n  var _useState3 = useState(initialValues),\n      _useState4 = _slicedToArray(_useState3, 2),\n      employeeData = _useState4[0],\n      setEmployeeData = _useState4[1];\n\n  console.log(\"parent\", employeeData);\n  var classes = useStyles();\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      activeStep = _React$useState2[0],\n      setActiveStep = _React$useState2[1];\n\n  var _React$useState3 = React.useState(new Set()),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      skipped = _React$useState4[0],\n      setSkipped = _React$useState4[1];\n\n  var steps = getSteps();\n\n  var isStepOptional = function isStepOptional(step) {\n    return step === 7;\n  };\n\n  var isStepSkipped = function isStepSkipped(step) {\n    return skipped.has(step);\n  };\n\n  var handleReset = function handleReset() {\n    setActiveStep(0);\n  };\n\n  return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: classes.cardTitleWhite,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, \"Add Employee\"), React.createElement(\"p\", {\n    className: classes.cardCategoryWhite,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }, \"Employee Information\")), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, React.createElement(Stepper, {\n    activeStep: activeStep,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, steps.map(function (label, index) {\n    var stepProps = {};\n    var labelProps = {};\n\n    if (isStepOptional(index)) {\n      labelProps.optional = React.createElement(Typography, {\n        variant: \"caption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, \"Optional\");\n    }\n\n    if (isStepSkipped(index)) {\n      stepProps.completed = false;\n    }\n\n    return React.createElement(Step, Object.assign({\n      key: label\n    }, stepProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }), React.createElement(StepLabel, Object.assign({}, labelProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }), label));\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  }, activeStep === steps.length ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.instructions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  }, \"All steps completed - you're finished\"), React.createElement(Button, {\n    onClick: handleReset,\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }, \"Reset\")) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.instructions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297\n    },\n    __self: this\n  }, React.createElement(EmployeeContext.Provider, {\n    value: [employeeData, setEmployeeData],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }, React.createElement(StepContext.Provider, {\n    value: [activeStep, setActiveStep],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299\n    },\n    __self: this\n  }, React.createElement(SkipContext.Provider, {\n    value: [skipped, setSkipped],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300\n    },\n    __self: this\n  }, getStepContent(activeStep))))))))))));\n} // export default AddEmployee;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/views/Employee/AddEmployee.js"],"names":["React","useContext","createContext","useState","EmployeeInformation","CurrentAddress","PermanentAddress","EmergencyContact","JobDetails","IdProof","EmployeePicture","Feedback","makeStyles","Stepper","Step","StepLabel","Button","Typography","Card","CardHeader","CardBody","GridItem","GridContainer","getButtons","classes","useStyles","StepContext","activeStep","setActiveStep","Set","skipped","setSkipped","steps","getSteps","isStepOptional","step","isStepSkipped","has","handleNext","newSkipped","values","prevActiveStep","handleBack","handleSkip","Error","prevSkipped","add","button","length","theme","root","width","marginRight","spacing","instructions","marginTop","marginBottom","cardCategoryWhite","color","margin","fontSize","cardTitleWhite","minHeight","fontWeight","fontFamily","textDecoration","getStepContent","initialValues","fullName","preferredName","birthDate","gender","maritalStatus","currentStreet1","currentStreet2","currentCity","currentState","currentCountry","currentAddressProof","permanentStreet1","permanentStreet2","permanentCity","permanentState","permanentCountry","permanentAddressProof","emergencyName1","emergencyMobile1","emergencyRelationship1","emergencyName2","emergencyMobile2","emergencyRelationship2","jobHireDate","jobSalary","jobCurrentsalary","jobBond","idProof","picture","feedback","EmployeeContext","SkipContext","AddEmployee","props","employeeData","setEmployeeData","console","log","handleReset","map","label","index","stepProps","labelProps","optional","completed"],"mappings":"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","sourcesContent":["import React , {useContext,createContext, useState} from 'react';\nimport EmployeeInformation from 'components/AddEmployeeForms/EmployeeInformation';\nimport CurrentAddress from 'components/AddEmployeeForms/CurrentAddress';\nimport PermanentAddress from 'components/AddEmployeeForms/PermanentAddress';\nimport EmergencyContact from 'components/AddEmployeeForms/EmergencyContact';\nimport JobDetails from 'components/AddEmployeeForms/JobDetails';\nimport IdProof from 'components/AddEmployeeForms/IdProof';\nimport EmployeePicture from 'components/AddEmployeeForms/EmployeePicture';\nimport Feedback from 'components/AddEmployeeForms/Feedback';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nexport const getButtons= ()=>{\n  const classes=useStyles()\n  const [activeStep, setActiveStep] = useContext(StepContext);\n  const [skipped, setSkipped] = useState(new Set());\n  const steps = getSteps();\n  const isStepOptional = step => {\n    return step === 7;\n  };\n\n  const isStepSkipped = step => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(prevSkipped => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  \n  return(\n    <div>\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n                Back\n              </Button>\n              {isStepOptional(activeStep) && (\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleSkip}\n                  className={classes.button}\n                >\n                  Skip\n                </Button>\n              )}\n\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleNext}\n                className={classes.button}\n                type=\"submit\"\n              >\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n              </Button>\n              \n            </div>\n  )\n};\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n    },\n    button: {\n      marginRight: theme.spacing(1),\n    },\n    instructions: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n    cardCategoryWhite: {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\"\n    },\n    cardTitleWhite: {\n      color: \"#FFFFFF\",\n      marginTop: \"0px\",\n      minHeight: \"auto\",\n      fontWeight: \"300\",\n      fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n      marginBottom: \"3px\",\n      textDecoration: \"none\"\n    }\n  }));\n  \n  function getSteps() {\n    return ['Employee Information', 'Current Address', 'Permanent Address', 'Emergency Contact', 'Job Details', 'Id Prrof', 'Employee Picture', 'Feedback'];\n  }\n  \n  function getStepContent(step) {\n    switch (step) {\n        case 0:\n            return <EmployeeInformation/>;\n        case 1:\n            return <CurrentAddress/>;\n        case 2:\n            return <PermanentAddress/>;\n        case 3:\n            return <EmergencyContact/>;\n        case 4:\n            return <JobDetails/>;\n        case 5:\n            return <IdProof/>;\n        case 6:\n            return <EmployeePicture/>;\n        case 7:\n            return <Feedback/>;  \n        default:\n            return 'Unknown step';\n    }\n  }\n  \n\n  const initialValues={\n    fullName:'',\n    preferredName:'ds',\n    birthDate:'',\n    gender:'',\n    maritalStatus:'',\n    currentStreet1:'',\n    currentStreet2:'',\n    currentCity:'',\n    currentState:'',\n    currentCountry:'',\n    currentAddressProof:'',\n    permanentStreet1:'',\n    permanentStreet2:'',\n    permanentCity:'',\n    permanentState:'',\n    permanentCountry:'',\n    permanentAddressProof:'',\n    emergencyName1:'',\n    emergencyMobile1:'',\n    emergencyRelationship1:'',\n    emergencyName2:'',\n    emergencyMobile2:'',\n    emergencyRelationship2:'',\n    jobHireDate:'',\n    jobSalary:'',\n    jobCurrentsalary:'',\n    jobBond:'',\n    idProof:'',\n    picture:'',\n    feedback:''\n    \n  }\n// const initialValues={\n//     employeeInformation:{\n//         fullName:'',\n//         preferredName:'',\n//         birthDate:'',\n//         gender:'',\n//         maritalStatus:''\n//     },\n//     currentAddress:{\n//         street1:'',\n//         street2:'',\n//         city:'',\n//         state:'',\n//         country:'',\n//         addressProof:''\n//     },\n//     permanentAddress:{\n//         street1:'',\n//         street2:'',\n//         city:'',\n//         state:'',\n//         country:'',\n//         addressProof:''\n//     },\n//     emergencyContact:{\n//         name1:'',\n//         mobile1:'',\n//         relationship1:'',\n//         name2:'',\n//         mobile2:'',\n//         relationship2:''\n//     },\n//     jobDetails:{\n//         hireDate:'',\n//         salary:'',\n//         currentSalary:'',\n//         bond:''\n//     },\n//     idProof:{\n//         idProof:''\n//     },\n//     employeePicture:{\n//         picture:''\n//     },\n//     feedback:{\n//         feedback:''\n//     }    \n// }\nexport const EmployeeContext=createContext()\nexport const StepContext=createContext()\nexport const SkipContext=createContext()\n\n\nexport default function AddEmployee(props) {\n  const [employeeData,setEmployeeData]=useState(initialValues)\n  console.log(\"parent\",employeeData)\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n  const steps = getSteps();\n\n  const isStepOptional = step => {\n    return step === 7;\n  };\n\n  const isStepSkipped = step => {\n    return skipped.has(step);\n  };\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n    return (\n      <Card>\n            <CardHeader color=\"primary\">\n              <h4 className={classes.cardTitleWhite}>Add Employee</h4>\n              <p className={classes.cardCategoryWhite}>Employee Information</p>\n            </CardHeader>\n            <CardBody>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          \n    <div className={classes.root}>\n      \n          <Stepper activeStep={activeStep}>\n        {steps.map((label, index) => {\n          const stepProps = {};\n          const labelProps = {};\n          if (isStepOptional(index)) {\n            labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n          }\n          if (isStepSkipped(index)) {\n            stepProps.completed = false;\n          }\n          return (\n            <Step key={label} {...stepProps}>\n              <StepLabel {...labelProps}>{label}</StepLabel>\n            </Step>\n          );\n        })}\n      </Stepper>\n      <div>\n   \n        {activeStep === steps.length ? (\n          <div>\n            <Typography className={classes.instructions}>\n              All steps completed - you&apos;re finished\n            </Typography>\n            <Button onClick={handleReset} className={classes.button}>\n              Reset\n            </Button>\n          </div>\n        ) : (\n          <div>\n            <Typography className={classes.instructions}>\n             <EmployeeContext.Provider value={[employeeData,setEmployeeData]}>\n               <StepContext.Provider value={[activeStep,setActiveStep]}>\n               <SkipContext.Provider value={[skipped,setSkipped]}>\n            {getStepContent(activeStep)}\n            </SkipContext.Provider>\n            </StepContext.Provider>\n            </EmployeeContext.Provider>\n            </Typography>\n            \n          </div>\n        )}\n      </div>\n        \n    </div>\n   \n          </GridItem>\n       \n      </GridContainer>\n      </CardBody>\n            {/* <CardFooter>\n              <Button color=\"primary\">Update Profile</Button>\n            </CardFooter> */}\n          </Card>\n    );\n}\n\n// export default AddEmployee;"]},"metadata":{},"sourceType":"module"}