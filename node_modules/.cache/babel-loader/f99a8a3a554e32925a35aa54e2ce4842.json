{"ast":null,"code":"import _defineProperty from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/components/AddEmployeeForms/CurrentAddress.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from 'react';\nimport { FormLabel } from \"@material-ui/core\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Dropzone from 'react-dropzone';\nimport StepperNavigationButtons from 'views/Employee/StepperNavigationButtons';\nimport { EmployeeContext } from 'views/Employee/AddEmployee';\nimport * as Yup from 'yup';\nimport { Formik, Form, Field } from 'formik';\nimport { StepContext } from 'views/Employee/AddEmployee';\nimport { TextField } from 'formik-material-ui';\nvar validationSchema = Yup.object().shape({\n  street1: Yup.string().required('Required'),\n  city: Yup.string().required('Required'),\n  addressProof: Yup.string().required('Required')\n});\n\nfunction CurrentAddress(props) {\n  var _useContext = useContext(EmployeeContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      employeeData = _useContext2[0],\n      setEmployeeData = _useContext2[1];\n\n  var _useContext3 = useContext(StepContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      activeStep = _useContext4[0],\n      setActiveStep = _useContext4[1];\n\n  var _useState = useState(new Set()),\n      _useState2 = _slicedToArray(_useState, 2),\n      skipped = _useState2[0],\n      setSkipped = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filename = _useState4[0],\n      setFilename = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      file = _useState6[0],\n      setFile = _useState6[1];\n\n  function handleOnDrop(files, rejectedFiles) {\n    var curfile = files[0];\n    setFilename(files[0].name);\n    var reader = new FileReader();\n    reader.addEventListener(\"load\", function () {\n      setFile(reader.result);\n    }, false);\n    reader.readAsDataURL(curfile);\n  }\n\n  return React.createElement(Formik, {\n    initialValues: employeeData,\n    validationSchema: validationSchema,\n    onSubmit: function onSubmit(values) {\n      //handleNext()\n      var newSkipped = skipped;\n\n      var isStepSkipped = function isStepSkipped(step) {\n        return skipped.has(step);\n      };\n\n      if (isStepSkipped(activeStep)) {\n        newSkipped = new Set(newSkipped.values());\n        newSkipped[\"delete\"](activeStep);\n      }\n\n      setActiveStep(function (prevActiveStep) {\n        return prevActiveStep + 1;\n      });\n      setSkipped(newSkipped);\n      setEmployeeData(_objectSpread({}, employeeData, {\n        currentStreet1: values.street1,\n        currentStreet2: values.street2,\n        currentCity: values.city,\n        currentState: values.state,\n        currentCountry: values.country,\n        currentAddressProof: filename\n      }));\n    },\n    render: function render() {\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Street 1\",\n        id: \"street1\",\n        name: \"street1\",\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Street 2\",\n        id: \"street2\",\n        name: \"street2\",\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"City\",\n        id: \"city\",\n        name: \"city\",\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"State\",\n        id: \"state\",\n        name: \"state\",\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Country\",\n        id: \"country\",\n        name: \"country\",\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        style: {\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Image\"), React.createElement(Dropzone, {\n        onDrop: handleOnDrop,\n        multiple: \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, function (_ref) {\n        var getRootProps = _ref.getRootProps,\n            getInputProps = _ref.getInputProps;\n        return React.createElement(\"section\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(\"div\", Object.assign({}, getRootProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        })), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, filename === \"\" ? \"Drag and drop file here, or click to select file\" : filename)));\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(StepperNavigationButtons, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  });\n}\n\nexport default CurrentAddress;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/components/AddEmployeeForms/CurrentAddress.js"],"names":["React","useState","useContext","FormLabel","GridItem","GridContainer","Dropzone","StepperNavigationButtons","EmployeeContext","Yup","Formik","Form","Field","StepContext","TextField","validationSchema","object","shape","street1","string","required","city","addressProof","CurrentAddress","props","employeeData","setEmployeeData","activeStep","setActiveStep","Set","skipped","setSkipped","filename","setFilename","file","setFile","handleOnDrop","files","rejectedFiles","curfile","name","reader","FileReader","addEventListener","result","readAsDataURL","values","newSkipped","isStepSkipped","step","has","prevActiveStep","currentStreet1","currentStreet2","street2","currentCity","currentState","state","currentCountry","country","currentAddressProof","textAlign","getRootProps","getInputProps"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { FormLabel } from \"@material-ui/core\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Dropzone from 'react-dropzone';\nimport StepperNavigationButtons from 'views/Employee/StepperNavigationButtons';\nimport { EmployeeContext } from 'views/Employee/AddEmployee'\nimport * as Yup from 'yup'\nimport { Formik, Form, Field } from 'formik'\nimport { StepContext } from 'views/Employee/AddEmployee'\nimport { TextField } from 'formik-material-ui'; \n\nconst validationSchema = Yup.object().shape({\n  street1: Yup.string()\n    .required('Required'),\n  city: Yup.string()\n    .required('Required'),\n   addressProof: Yup.string().required('Required')\n\n});\nfunction CurrentAddress(props) {\n  const [employeeData, setEmployeeData] = useContext(EmployeeContext)\n  const [activeStep, setActiveStep] = useContext(StepContext);\n  const [skipped, setSkipped] = useState(new Set());\n  const [filename, setFilename] = useState('')\n  const [file, setFile] = useState('')\n\n  function handleOnDrop(files, rejectedFiles) {\n    const curfile = files[0]\n    setFilename(files[0].name)\n    const reader = new FileReader()\n    reader.addEventListener(\"load\", () => {\n      setFile(reader.result)\n    }, false)\n    reader.readAsDataURL(curfile)\n  }\n  return (\n      <Formik\n        initialValues={employeeData}\n        validationSchema={validationSchema}\n        onSubmit={values => {\n          //handleNext()\n          let newSkipped = skipped;\n          const isStepSkipped = step => {\n            return skipped.has(step);\n          };\n          if (isStepSkipped(activeStep)) {\n            newSkipped = new Set(newSkipped.values());\n            newSkipped.delete(activeStep);\n          }\n          setActiveStep(prevActiveStep => prevActiveStep + 1);\n          setSkipped(newSkipped);\n          setEmployeeData({\n            ...employeeData,\n            currentStreet1: values.street1,\n            currentStreet2: values.street2,\n            currentCity: values.city,\n            currentState: values.state,\n            currentCountry: values.country,\n            currentAddressProof: filename\n          })\n        }}\n        render={() => (\n          <Form>\n            <GridContainer>\n\n              <GridItem xs={12} sm={12} md={12}>\n                <Field\n                  label=\"Street 1\"\n                  id=\"street1\"\n                  name=\"street1\"\n                  component={TextField}\n                  fullWidth\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={12}>\n                <Field\n                  label=\"Street 2\"\n                  id=\"street2\"\n                  name=\"street2\"\n                  component={TextField}\n                  fullWidth\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={12}>\n                <Field\n                  label=\"City\"\n                  id=\"city\"\n                  name=\"city\"\n                  component={TextField}\n                  fullWidth\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={12}>\n                <Field\n                  label=\"State\"\n                  id=\"state\"\n                  name=\"state\"\n                  component={TextField}\n                  fullWidth\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={12}>\n                <Field\n                  label=\"Country\"\n                  id=\"country\"\n                  name=\"country\"\n                  component={TextField}\n                  fullWidth\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={12}>\n                <FormLabel component=\"legend\" style={{ textAlign: 'left' }}>Image</FormLabel>\n                <Dropzone onDrop={handleOnDrop} multiple=\"true\">\n                  {({ getRootProps, getInputProps }) => (\n                    <section>\n                      <div {...getRootProps()}>\n                        <input {...getInputProps()} />\n                        <p>{filename === \"\" ? \"Drag and drop file here, or click to select file\" : filename}</p>\n                      </div>\n                    </section>\n                  )}\n                </Dropzone>\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={12}>\n                <StepperNavigationButtons />\n              </GridItem>\n\n            </GridContainer>\n          </Form>\n        )}\n      > \n    </Formik>\n  );\n}\n\nexport default CurrentAddress;"]},"metadata":{},"sourceType":"module"}