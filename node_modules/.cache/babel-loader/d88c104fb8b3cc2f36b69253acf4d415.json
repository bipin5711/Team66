{"ast":null,"code":"import _defineProperty from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/components/AddEmployeeForms/EmployeePicture.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from 'react';\nimport { FormLabel } from \"@material-ui/core\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport { Formik, Form, Field } from 'formik';\nimport { StepContext, EmployeeContext, TitleContext } from 'views/Employee/Add';\nimport StepperNavigationButtons from 'components/Stepper/StepperNavigationButtons';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CustomDropzone from 'components/Dropzone/Dropzone';\nvar useStyles = makeStyles({\n  field: {\n    marginTop: \"32px\"\n  }\n});\n\nfunction EmployeePicture(props) {\n  var classes = useStyles();\n\n  var _useContext = useContext(EmployeeContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      employeeData = _useContext2[0],\n      setEmployeeData = _useContext2[1];\n\n  var _useContext3 = useContext(StepContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      activeStep = _useContext4[0],\n      setActiveStep = _useContext4[1];\n\n  var _useState = useState(new Set()),\n      _useState2 = _slicedToArray(_useState, 2),\n      skipped = _useState2[0],\n      setSkipped = _useState2[1];\n\n  var _useContext5 = useContext(TitleContext),\n      _useContext6 = _slicedToArray(_useContext5, 2),\n      title = _useContext6[0],\n      setTitle = _useContext6[1];\n\n  var fileList = [];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      image = _useState4[0],\n      setImage = _useState4[1];\n\n  setTitle('Employee Picture');\n  return React.createElement(Formik, {\n    initialValues: employeeData // validationSchema={ValidationSchema}\n    ,\n    onSubmit: function onSubmit(values) {\n      //handleNext()\n      var newSkipped = skipped;\n\n      var isStepSkipped = function isStepSkipped(step) {\n        return skipped.has(step);\n      };\n\n      if (isStepSkipped(activeStep)) {\n        newSkipped = new Set(newSkipped.values());\n        newSkipped[\"delete\"](activeStep);\n      }\n\n      setActiveStep(function (prevActiveStep) {\n        return prevActiveStep + 1;\n      });\n      setSkipped(newSkipped);\n      setEmployeeData(_objectSpread({}, employeeData, {\n        picture: values.picture\n      }));\n    },\n    render: function render(_ref) {\n      var values = _ref.values,\n          setFieldValue = _ref.setFieldValue;\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        style: {\n          textAlign: 'left'\n        },\n        className: classes.field,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Upload Picture\"), React.createElement(CustomDropzone, {\n        list: values.picture,\n        callBack: function callBack(files) {\n          var exist = 0;\n          files.map(function (file) {\n            fileList.map(function (existingFile) {\n              if (existingFile.name === file.name && existingFile.size === file.size) {\n                exist = 1; // alert(\"File has already selected\")\n              }\n            });\n\n            if (exist === 0) {\n              fileList.push(file);\n              var reader = new FileReader();\n              reader.addEventListener(\"load\", function () {\n                console.log(\"ondrop called\");\n                setImage(reader.result);\n              }, false);\n              reader.readAsDataURL(file);\n              console.log(\"bipinb\", image);\n            } else {\n              exist = 0;\n            }\n          });\n          setFieldValue('picture', fileList);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })), React.createElement(\"img\", {\n        src: image,\n        height: \"100px\",\n        width: \"100px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(StepperNavigationButtons, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  });\n}\n\nexport default EmployeePicture;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/components/AddEmployeeForms/EmployeePicture.js"],"names":["React","useState","useContext","FormLabel","GridItem","GridContainer","Formik","Form","Field","StepContext","EmployeeContext","TitleContext","StepperNavigationButtons","makeStyles","CustomDropzone","useStyles","field","marginTop","EmployeePicture","props","classes","employeeData","setEmployeeData","activeStep","setActiveStep","Set","skipped","setSkipped","title","setTitle","fileList","image","setImage","values","newSkipped","isStepSkipped","step","has","prevActiveStep","picture","setFieldValue","textAlign","files","exist","map","file","existingFile","name","size","push","reader","FileReader","addEventListener","console","log","result","readAsDataURL"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { FormLabel } from \"@material-ui/core\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport { Formik, Form, Field } from 'formik'\nimport { StepContext, EmployeeContext, TitleContext } from 'views/Employee/Add'\nimport StepperNavigationButtons from 'components/Stepper/StepperNavigationButtons';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CustomDropzone from 'components/Dropzone/Dropzone'\n\nconst useStyles = makeStyles({\n  field: {\n    marginTop: \"32px\"\n  }\n})\n\nfunction EmployeePicture(props) {\n\n  const classes = useStyles()\n  const [employeeData, setEmployeeData] = useContext(EmployeeContext)\n  const [activeStep, setActiveStep] = useContext(StepContext);\n  const [skipped, setSkipped] = useState(new Set());\n  const [title, setTitle] = useContext(TitleContext);\n  const fileList = []\n\n  const [image,setImage]=useState('')\n  setTitle('Employee Picture')\n\n  return (\n\n    <Formik\n      initialValues={employeeData}\n      // validationSchema={ValidationSchema}\n      onSubmit={values => {\n        //handleNext()\n        let newSkipped = skipped;\n        const isStepSkipped = step => {\n          return skipped.has(step);\n        };\n        if (isStepSkipped(activeStep)) {\n          newSkipped = new Set(newSkipped.values());\n          newSkipped.delete(activeStep);\n        }\n        setActiveStep(prevActiveStep => prevActiveStep + 1);\n        setSkipped(newSkipped);\n        setEmployeeData({\n          ...employeeData,\n          picture: values.picture,\n        })\n      }}\n      render={({ values, setFieldValue }) => {\n        return (\n          <Form>\n            <GridContainer>\n              <GridItem xs={12} sm={12} md={12}>\n                <FormLabel component=\"legend\" style={{ textAlign: 'left' }} className={classes.field}>Upload Picture</FormLabel>\n                <CustomDropzone list={values.picture} callBack={files => {\n                  var exist = 0\n                  files.map(file => {\n                    fileList.map(existingFile => {\n                      if (existingFile.name === file.name && existingFile.size === file.size) {\n                        exist = 1\n                        // alert(\"File has already selected\")\n                      }\n                    })\n                    if (exist === 0) {\n                      fileList.push(file)\n                      const reader=new FileReader()\n                      reader.addEventListener(\"load\",()=>{\n                      console.log(\"ondrop called\")\n                      setImage(reader.result)},false)\n                        reader.readAsDataURL(file)\n                        console.log(\"bipinb\",image)\n                    }\n                    else {\n                      exist = 0;\n                    }\n                  })\n                  setFieldValue('picture', fileList)\n                }} />\n              </GridItem>\n              <img src={image} height=\"100px\" width=\"100px\"/>\n              <GridItem xs={12} sm={12} md={12}>\n                <StepperNavigationButtons />\n              </GridItem>\n            </GridContainer>\n          </Form>\n        )\n      }}\n    >\n    </Formik>\n  );\n}\n\nexport default EmployeePicture;"]},"metadata":{},"sourceType":"module"}