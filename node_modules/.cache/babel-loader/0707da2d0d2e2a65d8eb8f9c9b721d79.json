{"ast":null,"code":"import _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/components/Modal/Modal.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography } from '@material-ui/core';\nvar useStyles = makeStyles({\n  // modalWrapper: {\n  //     background: 'white',\n  //     border: '1px solid #d0cccc',\n  //     boxShadow: '0 5px 8px 0 rgba(0,0,0,0.2), 0 7px 20px 0 rgba(0,0,0,0.17)',\n  //     margin: '100px auto 0',\n  //     transition: 'all .8s',\n  //     width: '60%',\n  //     height:'auto',\n  //     transform: 'translateY(0vh)' ,\n  //     opacity: '1'\n  // },\n  // modalHeader: {\n  //     background: '#ffffff',\n  //     height: 'auto',\n  //     lineHeight: '40px',\n  //     padding: '5px 20px',\n  //     // textAlign: 'right',\n  // },\n  // modalBody: {\n  //     padding: '10px 15px',\n  //     textAlign: 'center',\n  // },\n  // modalFooter: {\n  //     background: '#ffffff',\n  //     height: 'auto',\n  //     padding: '15px',\n  // }\n  modal: {\n    /* modal container fixed across whole screen */\n    position: 'fixed',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n\n    /* z-index must be higher than .modal-background */\n    zIndex: 1000,\n\n    /* enables scrolling for tall modals */\n    overflow: 'auto'\n  },\n  modalBody: {\n    padding: '20px',\n    background: '#fff',\n\n    /* margin exposes part of the modal background */\n    margin: '40px'\n  },\n  modalBackground: {\n    /* modal background fixed across whole screen */\n    position: 'fixed',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n\n    /* semi-transparent black  */\n    backgroundColor: '#000',\n    opacity: 0.75,\n\n    /* z-index must be below .modal and above everything else  */\n    zIndex: 900\n  } // bodymodal-open {\n  //     /* body overflow is hidden to hide main scrollbar when modal window is open */\n  //     overflow: hidden;\n  // }\n\n});\n\nfunction Modal(_ref) {\n  var orderstatus = _ref.orderstatus,\n      createddate = _ref.createddate,\n      ordernumber = _ref.ordernumber,\n      children = _ref.children;\n  var classes = useStyles();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showModal = _useState2[0],\n      setShowModal = _useState2[1];\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: function onClick() {\n      setShowModal(!showModal);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Open\"), showModal ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modalBody\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, children, React.createElement(\"button\", {\n    onClick: function onClick() {\n      setShowModal(!showModal);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"CLOSE\"))), React.createElement(\"div\", {\n    className: \"modalBackground\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })) : \"\");\n}\n\nexport default Modal;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/components/Modal/Modal.js"],"names":["React","useState","makeStyles","Typography","useStyles","modal","position","top","right","bottom","left","zIndex","overflow","modalBody","padding","background","margin","modalBackground","backgroundColor","opacity","Modal","orderstatus","createddate","ordernumber","children","classes","showModal","setShowModal"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AAEA,IAAMC,SAAS,GAAGF,UAAU,CAAC;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEAG,EAAAA,KAAK,EAAE;AACH;AACAC,IAAAA,QAAQ,EAAE,OAFP;AAGHC,IAAAA,GAAG,EAAE,CAHF;AAIHC,IAAAA,KAAK,EAAE,CAJJ;AAKHC,IAAAA,MAAM,EAAE,CALL;AAMHC,IAAAA,IAAI,EAAE,CANH;;AAQH;AACAC,IAAAA,MAAM,EAAE,IATL;;AAWH;AACAC,IAAAA,QAAQ,EAAE;AAZP,GAjCkB;AAiDzBC,EAAAA,SAAS,EAAE;AACPC,IAAAA,OAAO,EAAE,MADF;AAEPC,IAAAA,UAAU,EAAE,MAFL;;AAIP;AACAC,IAAAA,MAAM,EAAE;AALD,GAjDc;AAwDzBC,EAAAA,eAAe,EAAE;AACb;AACAX,IAAAA,QAAQ,EAAE,OAFG;AAGbC,IAAAA,GAAG,EAAE,CAHQ;AAIbC,IAAAA,KAAK,EAAE,CAJM;AAKbC,IAAAA,MAAM,EAAE,CALK;AAMbC,IAAAA,IAAI,EAAE,CANO;;AAQb;AACAQ,IAAAA,eAAe,EAAE,MATJ;AAUbC,IAAAA,OAAO,EAAE,IAVI;;AAYb;AACAR,IAAAA,MAAM,EAAE;AAbK,GAxDQ,CAwEzB;AACA;AACA;AACA;;AA3EyB,CAAD,CAA5B;;AA8EA,SAASS,KAAT,OAAgE;AAAA,MAAhDC,WAAgD,QAAhDA,WAAgD;AAAA,MAApCC,WAAoC,QAApCA,WAAoC;AAAA,MAAvBC,WAAuB,QAAvBA,WAAuB;AAAA,MAAXC,QAAW,QAAXA,QAAW;AAC5D,MAAMC,OAAO,GAAGrB,SAAS,EAAzB;;AAD4D,kBAE7BH,QAAQ,CAAC,KAAD,CAFqB;AAAA;AAAA,MAErDyB,SAFqD;AAAA,MAE3CC,YAF2C;;AAG5D,SACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,OAAO,EAAE,mBAAI;AAACA,MAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AAAyB,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAGKA,SAAS,GACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,QADL,EAEI;AAAQ,IAAA,OAAO,EAAE,mBAAI;AAACG,MAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AAAyB,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,CADA,CADA,EAOJ;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPI,CADU,GAyBP,EA5BP,CADJ;AAkCH;;AAED,eAAeN,KAAf","sourcesContent":["import React, {useState} from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n    // modalWrapper: {\n    //     background: 'white',\n    //     border: '1px solid #d0cccc',\n    //     boxShadow: '0 5px 8px 0 rgba(0,0,0,0.2), 0 7px 20px 0 rgba(0,0,0,0.17)',\n    //     margin: '100px auto 0',\n    //     transition: 'all .8s',\n    //     width: '60%',\n    //     height:'auto',\n    //     transform: 'translateY(0vh)' ,\n    //     opacity: '1'\n    // },\n    \n    // modalHeader: {\n    //     background: '#ffffff',\n    //     height: 'auto',\n    //     lineHeight: '40px',\n    //     padding: '5px 20px',\n    //     // textAlign: 'right',\n    // },\n    \n   \n    // modalBody: {\n    //     padding: '10px 15px',\n    //     textAlign: 'center',\n    // },\n    \n    // modalFooter: {\n    //     background: '#ffffff',\n    //     height: 'auto',\n    //     padding: '15px',\n    // }\n\n    modal: {\n        /* modal container fixed across whole screen */\n        position: 'fixed',\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n    \n        /* z-index must be higher than .modal-background */\n        zIndex: 1000,\n        \n        /* enables scrolling for tall modals */\n        overflow: 'auto',\n    \n        \n    },\n    modalBody: {\n        padding: '20px',\n        background: '#fff',\n\n        /* margin exposes part of the modal background */\n        margin: '40px',\n    },\n    modalBackground :{\n        /* modal background fixed across whole screen */\n        position: 'fixed',\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n    \n        /* semi-transparent black  */\n        backgroundColor: '#000',\n        opacity: 0.75,\n        \n        /* z-index must be below .modal and above everything else  */\n        zIndex: 900,\n    }\n    \n    // bodymodal-open {\n    //     /* body overflow is hidden to hide main scrollbar when modal window is open */\n    //     overflow: hidden;\n    // }\n    \n})\nfunction Modal({orderstatus,createddate, ordernumber,children}) {\n    const classes = useStyles()\n    const [showModal,setShowModal]=useState(false)\n    return (\n        <React.Fragment>\n            <button onClick={()=>{setShowModal(!showModal)}}>Open</button>\n            \n            {showModal?\n            <div>\n            <div className=\"modal\">\n            <div className=\"modalBody\">\n                {children}\n                <button onClick={()=>{setShowModal(!showModal)}}>CLOSE</button>\n            </div>\n        </div>\n        <div className=\"modalBackground\"></div>\n        {/* <div className={classes.modalWrapper}>\n                <div className={classes.modalHeader}>\n                <Typography className={classes.expansionPanelSummary}>\n                Order Number: {ordernumber} -{\" \"}\n                <span>\n                    {orderstatus === \"Inactive\" ? \"Order Failed\" : orderstatus} - {createddate}\n                </span>\n            </Typography>\n                </div>\n                <div className={classes.modalBody}>\n                    {children}\n                </div>\n                <div className={classes.modalFooter}>\n                    <button onClick={()=>{setShowModal(!showModal)}}>CLOSE</button>\n                </div>\n            </div> */}\n        </div>:\"\"} \n            \n            </React.Fragment>\n        \n    );\n}\n\nexport default Modal;"]},"metadata":{},"sourceType":"module"}