{"ast":null,"code":"import _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/components/Modal/Modal.js\";\nimport React, { useState } from 'react';\n\nfunction Modal(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showModal = _useState2[0],\n      setShowModal = _useState2[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: function onClick() {\n      setShowModal(!showModal);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"Open\"), showModal ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"dsd\", React.createElement(\"button\", {\n    onClick: function onClick() {\n      setShowModal(!showModal);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Close\")) : \"\");\n}\n\nexport default Modal;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/components/Modal/Modal.js"],"names":["React","useState","Modal","props","showModal","setShowModal"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA,kBACaF,QAAQ,CAAC,KAAD,CADrB;AAAA;AAAA,MACXG,SADW;AAAA,MACDC,YADC;;AAElB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,OAAO,EAAE,mBAAI;AAACA,MAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AAAyB,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKA,SAAS,GACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACA;AAAQ,IAAA,OAAO,EAAE,mBAAI;AAACC,MAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AAAyB,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,CADU,GAGH,EALX,CADJ;AASH;;AAED,eAAeF,KAAf","sourcesContent":["import React, {useState} from 'react';\n\nfunction Modal(props) {\n    const [showModal,setShowModal]=useState(false)\n    return (\n        <div>\n            <button onClick={()=>{setShowModal(!showModal)}}>Open</button>\n            {showModal?\n            <div >dsd\n            <button onClick={()=>{setShowModal(!showModal)}}>Close</button>\n            </div>:\"\"}\n        </div>\n    );\n}\n\nexport default Modal;"]},"metadata":{},"sourceType":"module"}