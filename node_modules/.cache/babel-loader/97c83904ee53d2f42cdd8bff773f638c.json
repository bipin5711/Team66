{"ast":null,"code":"import _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/views/Employee/View.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\"; // import Table from \"components/Table/Table.js\";\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport { makeStyles } from \"@material-ui/core/styles\"; // import Button from '@material-ui/core/Button'\n\nimport Button from \"components/CustomButtons/Button.js\";\nimport { Link, useParams } from 'react-router-dom'; // import { useSelector, useDispatch } from 'react-redux'\n\nimport { showEmployee } from 'redux/EmployeeAction';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport api, { url } from '../../lib/axios';\nimport { Grid } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField'; // import ExpansionPanel from 'components/ExpansionPanel/ExpansionPanel'\n// import Modal from 'components/Modal/Modal';\n\nvar styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n      fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\"\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\"\n    }\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    display: 'inline-block',\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  },\n  table: {\n    border: 0\n  },\n  tableCell: {\n    border: 0,\n    padding: 3 // minWidth:'auto',\n    // width:'140px'\n    // maxWidth:'5%'\n\n  },\n  tableRow: {\n    marginTop: 25,\n    marginBottom: 5\n  },\n  addBtn: {\n    \"float\": 'right',\n    display: 'inline',\n    border: '1px solid white',\n    zIndex: '1px',\n    margin: '-5px 0px'\n  },\n  filelink: {\n    // width:'100%',\n    // // backgroundColor:'#eeeeee',\n    color: 'black' // height:'20px',\n    // width:'auto',\n    // padding:'5px 20px',\n    // marginRight:'10px',\n    // borderRadius:'1%'\n\n  },\n  heading: {\n    marginTop: 25,\n    marginBottom: 5\n  },\n  textfield: {\n    margin: '2em 0',\n    borderBottom: '2px solid grey'\n  },\n  image: {\n    borderRadius: '50%',\n    margin: 'auto ',\n    align: 'center',\n    maxWidth: '250px' //  ['@media (max-width:425px)']: { // eslint-disable-line no-useless-computed-key\n    //   margin: '1.5em 1.5em ',\n    //   align: 'center',\n    // },\n    // ['@media (max-width:768px)']: { // eslint-disable-line no-useless-computed-key\n    //   margin: '1.5em 0em',\n    //   align: 'center',\n    // },\n    // ['@media (max-width:1024px)']: { // eslint-disable-line no-useless-computed-key\n    //   margin: '1.5em 0em',\n    //   align: 'center',\n    // }\n    // borderRadius: '50%',\n    // position: 'absolute',\n    // top: '50%',\n    // left: '50%',\n    // transform: 'translateX(-50%) translateY(-50%)',\n    // maxWidth: '100%',\n    // maxHeight: '100%',\n\n  } // button:{\n  //     flexDirection: 'row', \n  //     justifyContent: 'flex-end',\n  //     alignSelf: 'flex-end',\n  //     alignItems: 'flex-end'\n  // }\n\n};\nvar useStyles = makeStyles(styles);\n\nfunction EmployeeView(props) {\n  var classes = useStyles();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useParams = useParams(),\n      id = _useParams.id; // const data = useSelector(state => state)\n  // console.log(data)\n  // const dispatch = useDispatch();\n  // let pictureBlob = new Blob(data.picture, { type: 'image/jpeg' });\n  // const pictureBlobUrl = URL.createObjectURL(pictureBlob)\n\n\n  var handleGet = function handleGet(id) {\n    api.get(\"employees/\".concat(id)).then(function (res) {\n      setData(res.data.data);\n      console.log(\"ds\", data);\n    })[\"catch\"](function (err) {\n      console.log(\"err\", err);\n    });\n  };\n\n  useEffect(function () {\n    handleGet(id);\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, console.log(\"bipin\", data), React.createElement(CardHeader, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: classes.cardTitleWhite,\n    style: {\n      display: 'inline'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"Employee Details\")))), React.createElement(CardBody, {\n    style: {\n      minHeight: '200px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, data ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 4,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    width: \"80%\",\n    src: url + \"1416a168-9e64-487f-9504-961d9f1c9399.jpeg\",\n    className: classes.image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 8,\n    md: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.heading,\n    variant: \"h6\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, \"Employee Information\")), React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.textfield,\n    value: data.name,\n    label: \"Name\",\n    fullWidth: true,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.textfield,\n    value: data.birthDate,\n    label: \"Birth Date\",\n    fullWidth: true,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.textfield,\n    value: data.gender,\n    label: \"Gender\",\n    fullWidth: true,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.textfield,\n    value: data.maritalStatus,\n    label: \"Marital Status\",\n    fullWidth: true,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  })))), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.heading,\n    variant: \"h6\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407\n    },\n    __self: this\n  }, \"Current Address\")), React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.textfield,\n    value: data.currentAddress.street1,\n    label: \"Street 1\",\n    fullWidth: true,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.textfield,\n    value: data.currentAddress.street2,\n    label: \"Street 2\",\n    fullWidth: true,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.textfield,\n    value: data.currentAddress.city,\n    label: \"City\",\n    fullWidth: true,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.textfield,\n    value: data.currentAddress.state,\n    label: \"State\",\n    fullWidth: true,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.textfield,\n    value: data.currentAddress.country,\n    label: \"Country\",\n    fullWidth: true,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424\n    },\n    __self: this\n  })))), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.heading,\n    variant: \"h6\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432\n    },\n    __self: this\n  }, \"Permanent Address\")), React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.textfield,\n    value: data.permanentAddress.street1,\n    label: \"Street 1\",\n    fullWidth: true,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.textfield,\n    value: data.permanentAddress.street2,\n    label: \"Street 2\",\n    fullWidth: true,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.textfield,\n    value: data.permanentAddress.city,\n    label: \"City\",\n    fullWidth: true,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.textfield,\n    value: data.permanentAddress.state,\n    label: \"State\",\n    fullWidth: true,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.textfield,\n    value: data.permanentAddress.country,\n    label: \"Country\",\n    fullWidth: true,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449\n    },\n    __self: this\n  })))))), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.heading,\n    variant: \"h6\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462\n    },\n    __self: this\n  }, \"Emergency Contact\")), React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.textfield,\n    value: data.emergencyContacts[0].name,\n    label: \"Name\",\n    fullWidth: true,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.textfield,\n    value: data.emergencyContacts[0].mobile,\n    label: \"Mobile\",\n    fullWidth: true,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.textfield,\n    value: data.emergencyContacts[0].relationship,\n    label: \"Relationship\",\n    fullWidth: true,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.textfield,\n    value: data.emergencyContacts[1].name,\n    label: \"Name\",\n    fullWidth: true,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.textfield,\n    value: data.emergencyContacts[1].mobile,\n    label: \"Mobile\",\n    fullWidth: true,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.textfield,\n    value: data.emergencyContacts[1].relationship,\n    label: \"Relationship\",\n    fullWidth: true,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482\n    },\n    __self: this\n  })))), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.heading,\n    variant: \"h6\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490\n    },\n    __self: this\n  }, \"Job Details\")), React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.textfield,\n    value: data.hireDate,\n    label: \"Hire Date\",\n    fullWidth: true,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.textfield,\n    value: data.salary,\n    label: \"Salary\",\n    fullWidth: true,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.textfield,\n    value: data.currentSalary,\n    label: \"Current Salary\",\n    fullWidth: true,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.textfield,\n    value: data.bond,\n    label: \"Bond\",\n    fullWidth: true,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504\n    },\n    __self: this\n  })))))))) : \"No Data Available\")))));\n}\n\nexport default EmployeeView;\n{\n  /* <Table aria-label=\"simple table\">\n         <TableHead>\n           <TableRow>\n             <TableCell>Name</TableCell>\n             <TableCell align=\"right\">City</TableCell>\n             <TableCell align=\"right\">State</TableCell>\n             <TableCell align=\"right\">Country</TableCell>\n             <TableCell align=\"right\">Salary</TableCell>\n             <TableCell align=\"center\" colSpan={2}>Action</TableCell>\n           </TableRow>\n         </TableHead>\n         <TableBody>\n           {rows.map(row => (\n             <TableRow key={row.name}>\n               <TableCell component=\"th\" scope=\"row\">\n                 {row.name}\n               </TableCell>\n               <TableCell align=\"right\">{row.calories}</TableCell>\n               <TableCell align=\"right\">{row.fat}</TableCell>\n               <TableCell align=\"right\">{row.carbs}</TableCell>\n               <TableCell align=\"right\">{row.protein}</TableCell>\n               <TableCell align=\"right\"><Button variant=\"contained\" color=\"primary\"  component={Link} to=\"/admin/editEmployee\">\n                 Edit\n             </Button></TableCell>\n               <TableCell align=\"right\"><Button variant=\"contained\" color=\"primary\"  component={Link} to=\"/admin/deleteEmployee\">\n                 Delete\n             </Button></TableCell>\n             </TableRow>\n           ))}\n         </TableBody>\n       </Table> */\n}\n{\n  /* <Table\n         tableHeaderColor=\"primary\"\n         tableHead={[\"Name\", \"State\",\"Country\", \"City\", \"Salary\"]}\n         tableData={[\n           // data\n           [\"1\", \"Dakota Rice\", \"$36,738\", \"Niger\", \"Oud-Turnhout\"],\n           [\"2\", \"Minerva Hooper\", \"$23,789\", \"Curaçao\", \"Sinaai-Waas\"],\n           [\"3\", \"Sage Rodriguez\", \"$56,142\", \"Netherlands\", \"Baileux\"],\n           [\n             \"4\",\n             \"Philip Chaney\",\n             \"$38,735\",\n             \"Korea, South\",\n             \"Overland Park\"\n           ],\n           [\n             \"5\",\n             \"Doris Greene\",\n             \"$63,542\",\n             \"Malawi\",\n             \"Feldkirchen in Kärnten\"\n           ],\n           [\"6\", \"Mason Porter\", \"$78,615\", \"Chile\", \"Gloucester\"]\n         ]}\n       /> */\n}","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/views/Employee/View.js"],"names":["React","useState","useContext","useEffect","GridItem","GridContainer","Table","TableBody","TableCell","TableHead","TableRow","Card","CardHeader","CardBody","makeStyles","Button","Link","useParams","showEmployee","EditIcon","DeleteIcon","Typography","Avatar","api","url","Grid","TextField","styles","cardCategoryWhite","color","margin","fontSize","marginTop","marginBottom","fontFamily","cardTitleWhite","minHeight","fontWeight","display","textDecoration","lineHeight","table","border","tableCell","padding","tableRow","addBtn","zIndex","filelink","heading","textfield","borderBottom","image","borderRadius","align","maxWidth","useStyles","EmployeeView","props","classes","data","setData","id","handleGet","get","then","res","console","log","err","name","birthDate","gender","maritalStatus","currentAddress","street1","street2","city","state","country","permanentAddress","emergencyContacts","mobile","relationship","hireDate","salary","currentSalary","bond"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\n// import Table from \"components/Table/Table.js\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n// import Button from '@material-ui/core/Button'\nimport Button from \"components/CustomButtons/Button.js\";\nimport { Link, useParams } from 'react-router-dom'\n// import { useSelector, useDispatch } from 'react-redux'\nimport { showEmployee } from 'redux/EmployeeAction'\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Typography from '@material-ui/core/Typography'\nimport Avatar from '@material-ui/core/Avatar';\nimport api, { url } from '../../lib/axios';\nimport { Grid } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n// import ExpansionPanel from 'components/ExpansionPanel/ExpansionPanel'\n// import Modal from 'components/Modal/Modal';\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n      fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\"\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\"\n    }\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    display: 'inline-block',\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  },\n  table: {\n    border: 0,\n\n  },\n  tableCell: {\n    border: 0,\n    padding: 3,\n    // minWidth:'auto',\n    // width:'140px'\n    // maxWidth:'5%'\n  },\n  tableRow: {\n    marginTop: 25,\n    marginBottom: 5,\n  },\n  addBtn: {\n    float: 'right',\n    display: 'inline',\n    border: '1px solid white',\n    zIndex: '1px',\n    margin: '-5px 0px'\n\n  },\n  filelink: {\n    // width:'100%',\n    // // backgroundColor:'#eeeeee',\n    color: 'black',\n    // height:'20px',\n    // width:'auto',\n    // padding:'5px 20px',\n    // marginRight:'10px',\n    // borderRadius:'1%'\n\n\n  },\n  heading: {\n    marginTop: 25,\n    marginBottom: 5,\n  },\n  textfield: {\n    margin: '2em 0',\n    borderBottom:'2px solid grey'\n  },\n  image:{\n    borderRadius: '50%', \n    margin: 'auto ', \n    align: 'center',\n     maxWidth: '250px',\n    //  ['@media (max-width:425px)']: { // eslint-disable-line no-useless-computed-key\n    //   margin: '1.5em 1.5em ',\n    //   align: 'center',\n    // },\n    // ['@media (max-width:768px)']: { // eslint-disable-line no-useless-computed-key\n    //   margin: '1.5em 0em',\n    //   align: 'center',\n    // },\n    // ['@media (max-width:1024px)']: { // eslint-disable-line no-useless-computed-key\n    //   margin: '1.5em 0em',\n    //   align: 'center',\n    // }\n    // borderRadius: '50%',\n    // position: 'absolute',\n    // top: '50%',\n    // left: '50%',\n    // transform: 'translateX(-50%) translateY(-50%)',\n    // maxWidth: '100%',\n    // maxHeight: '100%',\n    \n  }\n  // button:{\n  //     flexDirection: 'row', \n  //     justifyContent: 'flex-end',\n  //     alignSelf: 'flex-end',\n  //     alignItems: 'flex-end'\n  // }\n};\n\nconst useStyles = makeStyles(styles);\n\n\nfunction EmployeeView(props) {\n  const classes = useStyles();\n  const [data, setData] = useState()\n  let { id } = useParams();\n  // const data = useSelector(state => state)\n  // console.log(data)\n  // const dispatch = useDispatch();\n  // let pictureBlob = new Blob(data.picture, { type: 'image/jpeg' });\n  // const pictureBlobUrl = URL.createObjectURL(pictureBlob)\n  const handleGet = (id) => {\n    api.get(`employees/${id}`).then(res => {\n      setData(res.data.data)\n      console.log(\"ds\", data)\n    }).catch(err => { console.log(\"err\", err) })\n  }\n  useEffect(() => {\n    handleGet(id)\n\n  }, [])\n\n  return (\n    <div>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            {/* in cardheader we can use plain attribute */}\n            {console.log(\"bipin\", data)}\n            <CardHeader color=\"primary\">\n              <GridContainer>\n                <GridItem xs={12} sm={12} md={12}>\n                  <h4 className={classes.cardTitleWhite} style={{ display: 'inline' }}>\n                    Employee Details\n            </h4>\n                  {/* </GridItem> */}\n                  {/* <GridItem xs={12} sm={12} md={6}>\n                  <Button className={classes.addBtn} color=\"transparent\" component={Link} to=\"/admin/addEmployee\">\n                    Add Employee\n            </Button> */}\n                </GridItem>\n              </GridContainer>\n            </CardHeader>\n            <CardBody style={{ minHeight: '200px' }}>\n              {/* <ExpansionPanel orderstatus=\"Inactive\" createddate=\"dsada\" ordernumber=\"12\">\n                    fdsd\n          </ExpansionPanel>\n          <ExpansionPanel orderstatus=\"active\" createddate=\"dsada\" ordernumber=\"12\">\n                    fdsd\n          </ExpansionPanel> */}\n              {/* <Modal orderstatus=\"active\" createddate=\"dsada\" ordernumber=\"12\">dghj</Modal> */}\n\n              {data ?\n                <div>\n                  <GridContainer spacing={1}>\n                    <GridItem xs={12} sm={4} md={4}>\n                      {/* <Avatar alt=\"Remy Sharp\" src={data.image} height=\"300px\" width=\"400px\" /> */}\n                      {/* {data.image ? */}\n                      <img width=\"80%\" src={url + \"1416a168-9e64-487f-9504-961d9f1c9399.jpeg\"} className={classes.image}/>\n                      {/* : \"\"} */}\n                    </GridItem>\n                    <GridItem xs={12} sm={8} md={8}>\n                      <GridContainer>\n                        <GridItem xs={12} sm={12} md={12}>\n                          <Typography className={classes.heading} variant=\"h6\" component=\"h2\">\n                            Employee Information\n                              </Typography>\n                        </GridItem>\n                        <GridItem xs={12} sm={6} md={4}>\n                          <TextField className={classes.textfield} value={data.name} label=\"Name\" fullWidth disabled />\n                        </GridItem>\n                        <GridItem xs={12} sm={6} md={4}>\n                          <TextField className={classes.textfield} value={data.birthDate} label=\"Birth Date\" fullWidth disabled />\n                        </GridItem>\n                        <GridItem xs={12} sm={6} md={4}>\n                          <TextField className={classes.textfield} value={data.gender} label=\"Gender\" fullWidth disabled />\n                        </GridItem>\n                        <GridItem xs={12} sm={6} md={4}>\n                          <TextField className={classes.textfield} value={data.maritalStatus} label=\"Marital Status\" fullWidth disabled />\n                        </GridItem>\n                        {/* <GridItem xs={12} sm={6} md={4}>\n                        <TextField value={} label=\"\" disabled/>\n                        </GridItem> */}\n                      </GridContainer>\n                      {/* <Table className={classes.table}>\n                        <TableHead>\n                          <TableRow colSpan={2}>\n                            <Typography className={classes.tableRow} variant=\"h6\" component=\"h2\">\n                              Employee Information\n                              </Typography>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          <TableRow>\n                            <TableCell className={classes.tableCell} style={{ width: '150px' }}>Name:</TableCell>\n                            <TableCell className={classes.tableCell} align=\"left\">{data.name ? data.name : \"Not Set\"}</TableCell>\n                          </TableRow>\n                          <TableRow>\n                            <TableCell className={classes.tableCell}>BirthDate:</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">{data.birthDate ? data.birthDate : \"Not Set\"}</TableCell>\n                          </TableRow>\n                          <TableRow>\n                            <TableCell className={classes.tableCell}>Gender:</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">{data.gender ? data.gender : \"Not Set\"}</TableCell>\n                          </TableRow>\n                          <TableRow>\n                            <TableCell className={classes.tableCell}>Marital Status:</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">{data.maritalStatus ? data.maritalStatus : \"Not Set\"}</TableCell>\n                          </TableRow>\n                        </TableBody>\n                      </Table>\n                      <Table aria-label=\"simple table\">\n                        <TableHead>\n                          <TableRow colSpan={2}> <Typography className={classes.tableRow} variant=\"h6\" component=\"h2\">\n                            Current Address</Typography>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          <TableRow>\n                            <TableCell className={classes.tableCell} style={{ width: '150px' }}>Street 1:</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">{data.currentAddress.street1 ? data.currentAddress.street1 : \"Not Set\"}</TableCell>\n                          </TableRow>\n                          <TableRow>\n                            <TableCell className={classes.tableCell}>Street 2:</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">{data.currentAddress.street2 ? data.currentAddress.street2 : \"Not Set\"}</TableCell>\n                          </TableRow>\n                          <TableRow>\n                            <TableCell className={classes.tableCell}>City:</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">{data.currentAddress.city ? data.currentAddress.city : \"Not Set\"}</TableCell>\n                          </TableRow>\n                          <TableRow>\n                            <TableCell className={classes.tableCell}>State:</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">{data.currentAddress.state ? data.currentAddress.state : \"Not Set\"}</TableCell>\n                          </TableRow>\n                          <TableRow>\n                            <TableCell className={classes.tableCell}>Country:</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">{data.currentAddress.country ? data.currentAddress.country : \"Not Set\"}</TableCell>\n                          </TableRow> */}\n                      {/* <TableRow>\n                            <TableCell className={classes.tableCell}>Current Address Proof:</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">\n                              {\n                                data.currentAddressProof.map(file => {\n                                  let currentAddressProofBlob = new Blob([file], { type: 'application/pdf' });\n                                  var currentAddressUrl = (URL.createObjectURL(currentAddressProofBlob))\n                                  return (\n                                    <a className={classes.filelink} href={currentAddressUrl} target=\"_blank\">{file.name} </a>\n                                  )\n                                })}\n                            </TableCell>\n                          </TableRow> */}\n                      {/* </TableBody>\n                      </Table>\n                      <Table aria-label=\"simple table\">\n                        <TableHead>\n                          <TableRow> <Typography className={classes.tableRow} variant=\"h6\" component=\"h2\">\n                            Permanent Address</Typography>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          <TableRow>\n                            <TableCell className={classes.tableCell} style={{ width: '150px' }}>Street 1</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">{data.permanentAddress.street1 ? data.permanentAddress.street1 : \"Not Set\"}</TableCell>\n                          </TableRow>\n                          <TableRow>\n                            <TableCell className={classes.tableCell}>Street 2</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">{data.permanentAddress.street2 ? data.permanentAddress.street2 : \"Not Set\"}</TableCell>\n                          </TableRow>\n                          <TableRow>\n                            <TableCell className={classes.tableCell}>City</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">{data.permanentAddress.city ? data.permanentAddress.city : \"Not Set\"}</TableCell>\n                          </TableRow>\n                          <TableRow>\n                            <TableCell className={classes.tableCell}>State</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">{data.permanentAddress.state ? data.permanentAddress.state : \"Not Set\"}</TableCell>\n                          </TableRow>\n                          <TableRow>\n                            <TableCell className={classes.tableCell}>Country</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">{data.permanentAddress.country ? data.permanentAddress.country : \"Not Set\"}</TableCell>\n                          </TableRow> */}\n                      {/* <TableRow>\n                            <TableCell className={classes.tableCell}>Permanent Address Proof:</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">\n                              {\n                                data.permanentAddressProof.map(file => {\n                                  let permanentAddressProofBlob = new Blob([file], { type: 'application/pdf' });\n                                  var permanentAddressUrl = (URL.createObjectURL(permanentAddressProofBlob))\n                                  return (\n                                    <a href={permanentAddressUrl} target=\"_blank\">{file.name} </a>\n                                  )\n                                })}\n                            </TableCell>\n                          </TableRow> */}\n                      {/* </TableBody>\n                      </Table>\n                      <Table aria-label=\"simple table\">\n                        <TableHead>\n                          <TableRow colSpan={2}> <Typography className={classes.tableRow} variant=\"h6\" component=\"h2\">\n                            Emergency Contact</Typography>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          <TableRow>\n                            <TableCell className={classes.tableCell} style={{ width: '150px' }}>Name:</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">{data.emergencyContacts.name ? data.emergencyContacts.name : \"Not Set\"}</TableCell>\n                          </TableRow>\n                          <TableRow>\n                            <TableCell className={classes.tableCell}>Mobile:</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">{data.emergencyContacts.mobile ? data.emergencyContacts.mobile : \"Not Set\"}</TableCell>\n                          </TableRow>\n                          <TableRow>\n                            <TableCell className={classes.tableCell}>RealtionShip:</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">{data.emergencyContacts.relationship ? data.emergencyContacts.relationship : \"Not Set\"}</TableCell>\n                          </TableRow>\n\n                        </TableBody>\n                      </Table>\n                      <Table aria-label=\"simple table\">\n                        <TableHead>\n                          <TableRow colSpan={2}> <Typography className={classes.tableRow} variant=\"h6\" component=\"h2\">\n                            Job Details</Typography>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          <TableRow>\n                            <TableCell className={classes.tableCell} style={{ width: '150px' }}>Hire Date:</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">{data.hireDate ? data.hireDate : \"Not Set\"}</TableCell>\n                          </TableRow>\n                          <TableRow>\n                            <TableCell className={classes.tableCell}>Salary:</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">{data.salary ? data.salary : \"Not Set\"}</TableCell>\n                          </TableRow>\n                          <TableRow>\n                            <TableCell className={classes.tableCell}>Current Salary:</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">{data.currentSalary ? data.currentSalary : \"Not Set\"}</TableCell>\n                          </TableRow>\n                          <TableRow>\n                            <TableCell className={classes.tableCell}>Bond:</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">{data.bond ? data.bond : \"Not Set\"}</TableCell>\n                          </TableRow>\n                        </TableBody>\n                      </Table> */}\n                      {/* <Table aria-label=\"simple table\">\n                        <TableHead>\n                          <TableRow colSpan={2}> <Typography className={classes.tableRow} variant=\"h6\" component=\"h2\">\n                            Id Proof</Typography>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          <TableRow>\n                            <TableCell className={classes.tableCell} style={{ width: '150px' }}>Id Proof:</TableCell>\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">\n                              {\n                                data.idProof.map(file => {\n                                  let idProofBlob = new Blob([file], { type: 'application/pdf' });\n                                  var idProofUrl = (URL.createObjectURL(idProofBlob))\n                                  return (\n                                    <a href={idProofUrl} target=\"_blank\">{file.name} </a>\n                                  )\n                                })}\n                            </TableCell>\n                          </TableRow>\n                        </TableBody>\n                      </Table> */}\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={12}>\n\n                      <GridContainer spacing={2}>\n                        <GridItem xs={12} sm={12} md={6}>\n                          <GridContainer>\n                            <GridItem xs={12} sm={12} md={12}>\n                              <Typography className={classes.heading} variant=\"h6\" component=\"h2\">\n                                Current Address\n                              </Typography>\n                            </GridItem>\n                            <GridItem xs={12} sm={6} md={6}>\n                              <TextField className={classes.textfield} value={data.currentAddress.street1} label=\"Street 1\" fullWidth disabled />\n                            </GridItem>\n                            <GridItem xs={12} sm={6} md={6}>\n                              <TextField className={classes.textfield} value={data.currentAddress.street2} label=\"Street 2\" fullWidth disabled />\n                            </GridItem>\n                            <GridItem xs={12} sm={6} md={4}>\n                              <TextField className={classes.textfield} value={data.currentAddress.city} label=\"City\" fullWidth disabled />\n                            </GridItem>\n                            <GridItem xs={12} sm={6} md={4}>\n                              <TextField className={classes.textfield} value={data.currentAddress.state} label=\"State\" fullWidth disabled />\n                            </GridItem>\n                            <GridItem xs={12} sm={6} md={4}>\n                              <TextField className={classes.textfield} value={data.currentAddress.country} label=\"Country\" fullWidth disabled />\n                            </GridItem>\n                            </GridContainer>\n                            \n                        </GridItem>\n                        <GridItem xs={12} sm={12} md={6}>\n                          <GridContainer>\n                            <GridItem xs={12} sm={12} md={12}>\n                              <Typography className={classes.heading} variant=\"h6\" component=\"h2\">\n                                Permanent Address\n                              </Typography>\n                            </GridItem>\n                            <GridItem xs={12} sm={6} md={6}>\n                              <TextField className={classes.textfield} value={data.permanentAddress.street1} label=\"Street 1\" fullWidth disabled />\n                            </GridItem>\n                            <GridItem xs={12} sm={6} md={6}>\n                              <TextField className={classes.textfield} value={data.permanentAddress.street2} label=\"Street 2\" fullWidth disabled />\n                            </GridItem>\n                            <GridItem xs={12} sm={6} md={4}>\n                              <TextField className={classes.textfield} value={data.permanentAddress.city} label=\"City\" fullWidth disabled />\n                            </GridItem>\n                            <GridItem xs={12} sm={6} md={4}>\n                              <TextField className={classes.textfield} value={data.permanentAddress.state} label=\"State\" fullWidth disabled />\n                            </GridItem>\n                            <GridItem xs={12} sm={6} md={4}>\n                              <TextField className={classes.textfield} value={data.permanentAddress.country} label=\"Country\" fullWidth disabled />\n                            </GridItem>\n                            </GridContainer>\n                            \n                        </GridItem>\n                      </GridContainer>\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={12}>\n\n                      <GridContainer spacing={2}>\n                        <GridItem xs={12} sm={12} md={6}>\n                          <GridContainer>\n                            <GridItem xs={12} sm={12} md={12}>\n                              <Typography className={classes.heading} variant=\"h6\" component=\"h2\">\n                                Emergency Contact\n                              </Typography>\n                            </GridItem>\n                            <GridItem xs={12} sm={6} md={4}>\n                              <TextField className={classes.textfield} value={data.emergencyContacts[0].name} label=\"Name\" fullWidth disabled />\n                            </GridItem>\n                            <GridItem xs={12} sm={6} md={4}>\n                              <TextField className={classes.textfield} value={data.emergencyContacts[0].mobile} label=\"Mobile\" fullWidth disabled />\n                            </GridItem>\n                            <GridItem xs={12} sm={6} md={4}>\n                              <TextField className={classes.textfield} value={data.emergencyContacts[0].relationship} label=\"Relationship\" fullWidth disabled />\n                            </GridItem>\n                            <GridItem xs={12} sm={6} md={4}>\n                              <TextField className={classes.textfield} value={data.emergencyContacts[1].name} label=\"Name\" fullWidth disabled />\n                            </GridItem>\n                            <GridItem xs={12} sm={6} md={4}>\n                              <TextField className={classes.textfield} value={data.emergencyContacts[1].mobile} label=\"Mobile\" fullWidth disabled />\n                            </GridItem>\n                            <GridItem xs={12} sm={6} md={4}>\n                              <TextField className={classes.textfield} value={data.emergencyContacts[1].relationship} label=\"Relationship\" fullWidth disabled />\n                            </GridItem>\n                            </GridContainer>\n                            \n                        </GridItem>\n                        <GridItem xs={12} sm={12} md={6}>\n                          <GridContainer>\n                            <GridItem xs={12} sm={12} md={12}>\n                              <Typography className={classes.heading} variant=\"h6\" component=\"h2\">\n                                Job Details\n                              </Typography>\n                            </GridItem>\n                            <GridItem xs={12} sm={6} md={6}>\n                              <TextField className={classes.textfield} value={data.hireDate} label=\"Hire Date\" fullWidth disabled />\n                            </GridItem>\n                            <GridItem xs={12} sm={6} md={6}>\n                              <TextField className={classes.textfield} value={data.salary} label=\"Salary\" fullWidth disabled />\n                            </GridItem>\n                            <GridItem xs={12} sm={6} md={6}>\n                              <TextField className={classes.textfield} value={data.currentSalary} label=\"Current Salary\" fullWidth disabled />\n                            </GridItem>\n                            <GridItem xs={12} sm={6} md={6}>\n                              <TextField className={classes.textfield} value={data.bond} label=\"Bond\" fullWidth disabled />\n                            </GridItem>\n                            </GridContainer>\n                            \n                        </GridItem>\n                      </GridContainer>\n                    </GridItem>\n                  </GridContainer>\n                </div>\n                  : \"No Data Available\"}\n  \n            </CardBody>\n          </Card>\n        </GridItem>\n\n      </GridContainer>\n    </div>\n      );\n    }\n    \n    export default EmployeeView;\n    \n{/* <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell align=\"right\">City</TableCell>\n            <TableCell align=\"right\">State</TableCell>\n            <TableCell align=\"right\">Country</TableCell>\n            <TableCell align=\"right\">Salary</TableCell>\n            <TableCell align=\"center\" colSpan={2}>Action</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.name}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">{row.calories}</TableCell>\n              <TableCell align=\"right\">{row.fat}</TableCell>\n              <TableCell align=\"right\">{row.carbs}</TableCell>\n              <TableCell align=\"right\">{row.protein}</TableCell>\n              <TableCell align=\"right\"><Button variant=\"contained\" color=\"primary\"  component={Link} to=\"/admin/editEmployee\">\n                Edit\n            </Button></TableCell>\n              <TableCell align=\"right\"><Button variant=\"contained\" color=\"primary\"  component={Link} to=\"/admin/deleteEmployee\">\n                Delete\n            </Button></TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table> */}\n      {/* <Table\n              tableHeaderColor=\"primary\"\n              tableHead={[\"Name\", \"State\",\"Country\", \"City\", \"Salary\"]}\n              tableData={[\n                // data\n                [\"1\", \"Dakota Rice\", \"$36,738\", \"Niger\", \"Oud-Turnhout\"],\n                [\"2\", \"Minerva Hooper\", \"$23,789\", \"Curaçao\", \"Sinaai-Waas\"],\n                [\"3\", \"Sage Rodriguez\", \"$56,142\", \"Netherlands\", \"Baileux\"],\n                [\n                  \"4\",\n                  \"Philip Chaney\",\n                  \"$38,735\",\n                  \"Korea, South\",\n                  \"Overland Park\"\n                ],\n                [\n                  \"5\",\n                  \"Doris Greene\",\n                  \"$63,542\",\n                  \"Malawi\",\n                  \"Feldkirchen in Kärnten\"\n                ],\n                [\"6\", \"Mason Porter\", \"$78,615\", \"Chile\", \"Gloucester\"]\n              ]}\n            /> */}"]},"metadata":{},"sourceType":"module"}