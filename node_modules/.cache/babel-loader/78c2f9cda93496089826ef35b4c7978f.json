{"ast":null,"code":"import _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/views/Employee/Add.js\";\nimport React, { createContext, useState, useEffect } from 'react';\nimport EmployeeInformation from 'components/AddEmployeeForms/EmployeeInformation';\nimport CurrentAddress from 'components/AddEmployeeForms/CurrentAddress';\nimport PermanentAddress from 'components/AddEmployeeForms/PermanentAddress';\nimport EmergencyContact from 'components/AddEmployeeForms/EmergencyContact';\nimport JobDetails from 'components/AddEmployeeForms/JobDetails';\nimport IdProof from 'components/AddEmployeeForms/IdProof';\nimport EmployeePicture from 'components/AddEmployeeForms/EmployeePicture';\nimport Feedback from 'components/AddEmployeeForms/Feedback';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { addEmployee } from 'redux/EmployeeAction'; // const initialValues = {\n//   fullName: '',\n//   preferredName: '',\n//   birthDate: null,\n//   gender: '',\n//   maritalStatus: '',\n//   currentStreet1: '',\n//   currentStreet2: '',\n//   currentCity: '',\n//   currentState: '',\n//   currentCountry: '',\n//   currentAddressProof: [],\n//   permanentStreet1: '',\n//   permanentStreet2: '',\n//   permanentCity: '',\n//   permanentState: '',\n//   permanentCountry: '',\n//   permanentAddressProof: [],\n//   emergencyName1: '',\n//   emergencyMobile1: '',\n//   emergencyRelationship1: '',\n//   emergencyName2: '',\n//   emergencyMobile2: '',\n//   emergencyRelationship2: '',\n//   jobHireDate: null,\n//   jobSalary: '',\n//   jobCurrentSalary: '',\n//   jobBond: '',\n//   idProof: [],\n//   picture: [],\n//   // image:'',\n//   feedback: ''\n// }\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: '100%'\n    },\n    button: {\n      marginRight: theme.spacing(1)\n    },\n    instructions: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1)\n    },\n    cardCategoryWhite: {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\"\n    },\n    cardTitleWhite: {\n      color: \"#FFFFFF\",\n      // marginBottom: \"3px\",\n      // marginTop: \"0px\",\n      marginTop: \"10px\",\n      marginBottom: \"10px\",\n      minHeight: \"auto\",\n      fontWeight: \"300\",\n      fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n      textDecoration: \"none\"\n    }\n  };\n});\nvar initialValues = {\n  birthDate: null,\n  bond: '',\n  currentAddress: {\n    city: '',\n    country: '',\n    // id: '',\n    state: '',\n    street1: '',\n    street2: ''\n  },\n  currentSalary: '',\n  emergencyContacts: [// {\n    //   id: '',\n    //   name: '',\n    //   relationship: ''\n    // }\n  ],\n  employeeAttachments: [// {\n    //   fileName: '',\n    //   id: '',\n    //   originalFileName: '',\n    //   size: '',\n    //   type: ''\n    // }\n  ],\n  feedback: '',\n  gender: '',\n  // id: 0,\n  hireDate: null,\n  maritalStatus: '',\n  name: '',\n  permanentAddress: {\n    city: '',\n    country: '',\n    // id: '',\n    state: '',\n    street1: '',\n    street2: ''\n  },\n  preferredName: '',\n  salary: ''\n}; // const QontoConnector = withStyles({\n//   alternativeLabel: {\n//     // top: 10,\n//     left: 'calc(-50% + 16px)',\n//     right: 'calc(50% + 16px)',\n//   },\n//   active: {\n//     '& $line': {\n//       borderColor: '#9830b0',\n//     },\n//   },\n//   completed: {\n//     '& $line': {\n//       borderColor: '#9830b0'\n//     },\n//   },\n//   line: {\n//     borderColor: '#999999',\n//     borderTopWidth: 3,\n//     borderRadius: 1,\n//   },\n// })(StepConnector);\n// const useQontoStepIconStyles = makeStyles({\n//   root: {\n//     color: 'red',\n//     display: 'flex',\n//     height: 22,\n//     alignItems: 'center',\n//   },\n//   active: {\n//     color: '#9830b0',\n//   },\n//   circle: {\n//     width: 25,\n//     height: 25,\n//     borderRadius: '50%',\n//     backgroundColor: '#eaeaf0',\n//   },\n//   completed: {\n//     color: '#ffffff',\n//     backgroundColor:'#9830b0',\n//     width: 25,\n//     height: 25,\n//     borderRadius: '50%',\n//     zIndex: 1,\n//     fontSize: 18,\n//   },\n// });\n// function QontoStepIcon(props) {\n//   const classes = useQontoStepIconStyles();\n//   const { active, completed } = props;\n//   return (\n//     <div>\n//       {completed ? <Check className={classes.completed} /> : <div className={classes.circle} />}\n//     </div>\n//   );\n// }\n\nfunction getSteps() {\n  // return ['', '', '', '', '', '', '', ''];\n  return ['Employee Information', 'Current Address', 'Permanent Address', 'Emergency Contact', 'Job Details', 'Id Proof', 'Employee Picture', 'Feedback'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return React.createElement(EmployeeInformation, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      });\n\n    case 1:\n      return React.createElement(CurrentAddress, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      });\n\n    case 2:\n      return React.createElement(PermanentAddress, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      });\n\n    case 3:\n      return React.createElement(EmergencyContact, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      });\n\n    case 4:\n      return React.createElement(JobDetails, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      });\n\n    case 5:\n      return React.createElement(IdProof, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      });\n\n    case 6:\n      return React.createElement(EmployeePicture, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      });\n\n    case 7:\n      return React.createElement(Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      });\n\n    default:\n      return 'Unknown step';\n  }\n}\n\nexport var EmployeeContext = createContext();\nexport var TitleContext = createContext();\nexport var EmployeeDataContext = createContext();\nexport var StepContext = createContext();\nexport var SkipContext = createContext();\n\nfunction AddEmployee(props) {\n  var classes = useStyles();\n  var dispatch = useDispatch();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(initialValues),\n      _useState4 = _slicedToArray(_useState3, 2),\n      employeeData = _useState4[0],\n      setEmployeeData = _useState4[1];\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      activeStep = _React$useState2[0],\n      setActiveStep = _React$useState2[1];\n\n  var _React$useState3 = React.useState(new Set()),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      skipped = _React$useState4[0],\n      setSkipped = _React$useState4[1];\n\n  var steps = getSteps();\n  useEffect(function () {\n    // dispatch({ type:'ADD_EMPLOYEE',payload:employeeData })\n    // console.log(employeeData)\n    // dispatch(addEmployee(employeeData))\n    console.log(\"team66\", employeeData);\n  }, [employeeData]);\n\n  var isStepOptional = function isStepOptional(step) {\n    return step === 7 || step === 5;\n  };\n\n  var isStepSkipped = function isStepSkipped(step) {\n    return skipped.has(step);\n  };\n\n  var handleReset = function handleReset() {\n    setActiveStep(0);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    zeroMinWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    lg: 9,\n    xl: 6,\n    zeroMinWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: classes.cardTitleWhite,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }, title)), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, React.createElement(Stepper, {\n    style: {\n      padding: '5px 0px'\n    },\n    activeStep: activeStep,\n    alternativeLabel: true,\n    noWrap: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, steps.map(function (label, index) {\n    var stepProps = {};\n    var labelProps = {};\n\n    if (isStepOptional(index)) {\n      labelProps.optional = React.createElement(Typography, {\n        variant: \"caption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, \"Optional\");\n    }\n\n    if (isStepSkipped(index)) {\n      stepProps.completed = false;\n    }\n\n    return React.createElement(Step, Object.assign({\n      key: label\n    }, stepProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }), React.createElement(StepLabel, Object.assign({}, labelProps, {\n      noWrap: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }), label));\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  }, activeStep === steps.length ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.instructions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }, \"All steps completed - you're finished\"), React.createElement(Button, {\n    onClick: handleReset,\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  }, \"Reset\"), React.createElement(Button, {\n    component: Link,\n    to: \"/admin/employee\",\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }, \"View Submitted Data\")) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.instructions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302\n    },\n    __self: this\n  }, React.createElement(EmployeeContext.Provider, {\n    value: [employeeData, setEmployeeData],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303\n    },\n    __self: this\n  }, React.createElement(StepContext.Provider, {\n    value: [activeStep, setActiveStep],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304\n    },\n    __self: this\n  }, React.createElement(SkipContext.Provider, {\n    value: [skipped, setSkipped],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305\n    },\n    __self: this\n  }, React.createElement(TitleContext.Provider, {\n    value: [title, setTitle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306\n    },\n    __self: this\n  }, getStepContent(activeStep)))))))))))));\n}\n\nexport default AddEmployee;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/views/Employee/Add.js"],"names":["React","createContext","useState","useEffect","EmployeeInformation","CurrentAddress","PermanentAddress","EmergencyContact","JobDetails","IdProof","EmployeePicture","Feedback","Stepper","Step","StepLabel","Button","Typography","Card","CardHeader","CardBody","GridItem","GridContainer","makeStyles","withStyles","useDispatch","Link","addEmployee","useStyles","theme","root","width","button","marginRight","spacing","instructions","marginTop","marginBottom","cardCategoryWhite","color","margin","fontSize","cardTitleWhite","minHeight","fontWeight","fontFamily","textDecoration","initialValues","birthDate","bond","currentAddress","city","country","state","street1","street2","currentSalary","emergencyContacts","employeeAttachments","feedback","gender","hireDate","maritalStatus","name","permanentAddress","preferredName","salary","getSteps","getStepContent","step","EmployeeContext","TitleContext","EmployeeDataContext","StepContext","SkipContext","AddEmployee","props","classes","dispatch","title","setTitle","employeeData","setEmployeeData","activeStep","setActiveStep","Set","skipped","setSkipped","steps","console","log","isStepOptional","isStepSkipped","has","handleReset","padding","map","label","index","stepProps","labelProps","optional","completed","length"],"mappings":"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","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport EmployeeInformation from 'components/AddEmployeeForms/EmployeeInformation';\nimport CurrentAddress from 'components/AddEmployeeForms/CurrentAddress';\nimport PermanentAddress from 'components/AddEmployeeForms/PermanentAddress';\nimport EmergencyContact from 'components/AddEmployeeForms/EmergencyContact';\nimport JobDetails from 'components/AddEmployeeForms/JobDetails';\nimport IdProof from 'components/AddEmployeeForms/IdProof';\nimport EmployeePicture from 'components/AddEmployeeForms/EmployeePicture';\nimport Feedback from 'components/AddEmployeeForms/Feedback';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { addEmployee} from 'redux/EmployeeAction'\n\n// const initialValues = {\n//   fullName: '',\n//   preferredName: '',\n//   birthDate: null,\n//   gender: '',\n//   maritalStatus: '',\n//   currentStreet1: '',\n//   currentStreet2: '',\n//   currentCity: '',\n//   currentState: '',\n//   currentCountry: '',\n//   currentAddressProof: [],\n//   permanentStreet1: '',\n//   permanentStreet2: '',\n//   permanentCity: '',\n//   permanentState: '',\n//   permanentCountry: '',\n//   permanentAddressProof: [],\n//   emergencyName1: '',\n//   emergencyMobile1: '',\n//   emergencyRelationship1: '',\n//   emergencyName2: '',\n//   emergencyMobile2: '',\n//   emergencyRelationship2: '',\n//   jobHireDate: null,\n//   jobSalary: '',\n//   jobCurrentSalary: '',\n//   jobBond: '',\n//   idProof: [],\n//   picture: [],\n//   // image:'',\n//   feedback: ''\n// }\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  cardCategoryWhite: {\n    color: \"rgba(255,255,255,.62)\",\n    margin: \"0\",\n    fontSize: \"14px\",\n    marginTop: \"0\",\n    marginBottom: \"0\"\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    // marginBottom: \"3px\",\n    // marginTop: \"0px\",\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    textDecoration: \"none\"\n  }\n}));\n\n\nconst initialValues={\n  birthDate: null,\n  bond: '',\n  currentAddress: {\n    city: '',\n    country: '',\n    // id: '',\n    state: '',\n    street1: '',\n    street2: ''\n  },\n  currentSalary: '',\n  emergencyContacts: [\n    // {\n    //   id: '',\n    //   name: '',\n    //   relationship: ''\n    // }\n  ],\n  employeeAttachments: [\n    // {\n    //   fileName: '',\n    //   id: '',\n    //   originalFileName: '',\n    //   size: '',\n    //   type: ''\n    // }\n  ],\n  feedback: '',\n  gender: '',\n  // id: 0,\n  hireDate:null,\n  maritalStatus: '',\n  name: '',\n  permanentAddress: {\n    city: '',\n    country: '',\n    // id: '',\n    state: '',\n    street1: '',\n    street2: ''\n  },\n  preferredName: '',\n  salary: ''\n}\n// const QontoConnector = withStyles({\n//   alternativeLabel: {\n//     // top: 10,\n//     left: 'calc(-50% + 16px)',\n//     right: 'calc(50% + 16px)',\n//   },\n//   active: {\n//     '& $line': {\n//       borderColor: '#9830b0',\n//     },\n//   },\n//   completed: {\n//     '& $line': {\n//       borderColor: '#9830b0'\n//     },\n//   },\n//   line: {\n//     borderColor: '#999999',\n//     borderTopWidth: 3,\n//     borderRadius: 1,\n//   },\n// })(StepConnector);\n\n// const useQontoStepIconStyles = makeStyles({\n//   root: {\n//     color: 'red',\n//     display: 'flex',\n//     height: 22,\n//     alignItems: 'center',\n//   },\n//   active: {\n//     color: '#9830b0',\n//   },\n//   circle: {\n//     width: 25,\n//     height: 25,\n//     borderRadius: '50%',\n//     backgroundColor: '#eaeaf0',\n\n//   },\n//   completed: {\n//     color: '#ffffff',\n//     backgroundColor:'#9830b0',\n//     width: 25,\n//     height: 25,\n//     borderRadius: '50%',\n//     zIndex: 1,\n//     fontSize: 18,\n//   },\n// });\n// function QontoStepIcon(props) {\n//   const classes = useQontoStepIconStyles();\n//   const { active, completed } = props;\n\n//   return (\n//     <div>\n//       {completed ? <Check className={classes.completed} /> : <div className={classes.circle} />}\n//     </div>\n//   );\n// }\nfunction getSteps() {\n  // return ['', '', '', '', '', '', '', ''];\n  return ['Employee Information', 'Current Address', 'Permanent Address', 'Emergency Contact', 'Job Details', 'Id Proof', 'Employee Picture', 'Feedback'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return <EmployeeInformation />;\n    case 1:\n      return <CurrentAddress />;\n    case 2:\n      return <PermanentAddress />;\n    case 3:\n      return <EmergencyContact />;\n    case 4:\n      return <JobDetails />;\n    case 5:\n      return <IdProof />;\n    case 6:\n      return <EmployeePicture />;\n    case 7:\n      return <Feedback />;\n    default:\n      return 'Unknown step';\n  }\n}\n\n\nexport const EmployeeContext = createContext()\nexport const TitleContext = createContext()\nexport const EmployeeDataContext = createContext()\nexport const StepContext = createContext()\nexport const SkipContext = createContext()\n\nfunction AddEmployee(props) {\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState('')\n  const [employeeData, setEmployeeData] = useState(initialValues)\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n  const steps = getSteps();\n  useEffect(() => {\n    // dispatch({ type:'ADD_EMPLOYEE',payload:employeeData })\n  // console.log(employeeData)\n    // dispatch(addEmployee(employeeData))\n    console.log(\"team66\",employeeData)\n  }, [employeeData])\n\n  const isStepOptional = step => {\n    return step === 7 || step === 5;\n  };\n\n  const isStepSkipped = step => {\n    return skipped.has(step);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n  return (\n    <div>\n      <GridContainer zeroMinWidth>\n        <GridItem xs={12} sm={12} md={12} lg={9} xl={6} zeroMinWidth>\n          <Card>\n            <CardHeader color=\"primary\">\n              <h4 className={classes.cardTitleWhite}>{title}</h4>\n              {/* <h4 className={classes.cardTitleWhite}>Add Employee</h4>\n              <p className={classes.cardCategoryWhite}>{title}</p> */}\n            </CardHeader>\n            <CardBody>\n              {/* <div className={classes.root}> */}\n              <Stepper style={{padding:'5px 0px'}} activeStep={activeStep} alternativeLabel noWrap>\n                {/* connector={<QontoConnector />} */}\n                {steps.map((label, index) => {\n                  const stepProps = {};\n                  const labelProps = {};\n                  if (isStepOptional(index)) {\n                    labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n                  }\n                  if (isStepSkipped(index)) {\n                    stepProps.completed = false;\n                  }\n                  return (\n                    <Step key={label} {...stepProps}>\n                      <StepLabel {...labelProps} noWrap>{label}</StepLabel>\n                      {/* StepIconComponent={QontoStepIcon} */}\n                    </Step>\n                  );\n                })}\n              </Stepper>\n              <div>\n                {activeStep === steps.length ? (\n                  <div>\n                    <Typography className={classes.instructions}>\n                      All steps completed - you&apos;re finished\n            </Typography>\n                    <Button onClick={handleReset} className={classes.button}>\n                      Reset\n            </Button>\n            <Button component={Link} to=\"/admin/employee\" className={classes.button}>View Submitted Data</Button>\n                  </div>\n                ) : (\n                    <div>\n                      <Typography className={classes.instructions}>\n                        <EmployeeContext.Provider value={[employeeData, setEmployeeData]}>\n                          <StepContext.Provider value={[activeStep, setActiveStep]}>\n                            <SkipContext.Provider value={[skipped, setSkipped]}>\n                              <TitleContext.Provider value={[title, setTitle]}>\n                                        {getStepContent(activeStep)}\n                              </TitleContext.Provider>\n                            </SkipContext.Provider>\n                          </StepContext.Provider>\n                        </EmployeeContext.Provider>\n                      </Typography>\n\n                    </div>\n                  )}\n              </div>\n              {/* </div> */}\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer>\n    </div>\n  );\n}\nexport default AddEmployee"]},"metadata":{},"sourceType":"module"}