{"ast":null,"code":"import _defineProperty from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/components/AddEmployeeForms/Feedback.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from 'react';\nimport { TextField } from 'formik-material-ui';\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport { Formik, Field, Form, FormLabel } from 'formik';\nimport { StepContext, EmployeeContext } from 'views/Employee/Add';\nimport StepperNavigationButtons from 'components/Stepper/StepperNavigationButtons';\nimport Employee from 'views/Employee/List';\nimport { makeStyles } from \"@material-ui/core/styles\";\nvar useStyles = makeStyles({\n  field: {\n    marginTop: \"32px\"\n  }\n});\n\nfunction Feedback(props) {\n  var classes = useStyles();\n\n  var _useContext = useContext(EmployeeContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      employeeData = _useContext2[0],\n      setEmployeeData = _useContext2[1];\n\n  var _useContext3 = useContext(StepContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      activeStep = _useContext4[0],\n      setActiveStep = _useContext4[1];\n\n  var _useState = useState(new Set()),\n      _useState2 = _slicedToArray(_useState, 2),\n      skipped = _useState2[0],\n      setSkipped = _useState2[1];\n\n  return React.createElement(Formik, {\n    initialValues: employeeData // validationSchema={ValidationSchema}\n    ,\n    onSubmit: function onSubmit(values) {\n      //handleNext()\n      var newSkipped = skipped;\n\n      var isStepSkipped = function isStepSkipped(step) {\n        return skipped.has(step);\n      };\n\n      if (isStepSkipped(activeStep)) {\n        newSkipped = new Set(newSkipped.values());\n        newSkipped[\"delete\"](activeStep);\n      }\n\n      setActiveStep(function (prevActiveStep) {\n        return prevActiveStep + 1;\n      });\n      setSkipped(newSkipped);\n      setEmployeeData(_objectSpread({}, employeeData, {\n        feedback: values.feedback\n      }));\n      return React.createElement(Employee, {\n        data: employeeData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      });\n    },\n    render: function render() {\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        style: {\n          textAlign: 'left'\n        },\n        className: classes.field,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Feedback\"), React.createElement(Field, {\n        label: \"Any feedback to improve the company\",\n        id: \"feedback\",\n        name: \"feedback\",\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(StepperNavigationButtons, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  });\n}\n\nexport default Feedback;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/components/AddEmployeeForms/Feedback.js"],"names":["React","useState","useContext","TextField","GridItem","GridContainer","Formik","Field","Form","FormLabel","StepContext","EmployeeContext","StepperNavigationButtons","Employee","makeStyles","useStyles","field","marginTop","Feedback","props","classes","employeeData","setEmployeeData","activeStep","setActiveStep","Set","skipped","setSkipped","values","newSkipped","isStepSkipped","step","has","prevActiveStep","feedback","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { TextField } from 'formik-material-ui'; \nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport { Formik, Field, Form,FormLabel } from 'formik'\nimport { StepContext, EmployeeContext } from 'views/Employee/Add'\nimport StepperNavigationButtons from 'components/Stepper/StepperNavigationButtons';\nimport Employee from 'views/Employee/List';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles=makeStyles({\n  field:{\n    marginTop: \"32px\"\n  }\n})\n\nfunction Feedback(props) {\n\n  const classes=useStyles()\n  const [employeeData, setEmployeeData] = useContext(EmployeeContext)\n  const [activeStep, setActiveStep] = useContext(StepContext);\n  const [skipped, setSkipped] = useState(new Set());\n\n  return (\n      <Formik\n        initialValues={employeeData}\n        // validationSchema={ValidationSchema}\n        onSubmit={values => {\n          //handleNext()\n          let newSkipped = skipped;\n          const isStepSkipped = step => {\n            return skipped.has(step);\n          };\n          if (isStepSkipped(activeStep)) {\n            newSkipped = new Set(newSkipped.values());\n            newSkipped.delete(activeStep);\n          }\n          setActiveStep(prevActiveStep => prevActiveStep + 1);\n          setSkipped(newSkipped);\n          setEmployeeData({\n            ...employeeData,\n            feedback: values.feedback,\n          })\n          return <Employee data={employeeData}/>\n        }}\n        render={() => (\n          <Form>\n            <GridContainer>\n\n              <GridItem xs={12} sm={12} md={12}>\n              <FormLabel component=\"legend\" style={{ textAlign: 'left'}} className={classes.field}>Feedback</FormLabel>\n                <Field\n                  label=\"Any feedback to improve the company\"\n                  id=\"feedback\"\n                  name=\"feedback\"\n                  component={TextField}\n                  fullWidth\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={12}>\n                <StepperNavigationButtons />\n              </GridItem>\n\n            </GridContainer>\n          </Form>\n        )}\n      >\n      </Formik>\n  );\n}\n\nexport default Feedback;"]},"metadata":{},"sourceType":"module"}