{"ast":null,"code":"import _defineProperty from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/components/AddEmployeeForms/EmployeePicture.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from 'react';\nimport { FormLabel } from \"@material-ui/core\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport { Formik, Form } from 'formik';\nimport { EmployeeContext } from 'views/Employee/AddEmployee';\nimport StepperNavigationButtons from 'components/Stepper/StepperNavigationButtons';\nimport { StepContext } from 'views/Employee/AddEmployee';\nimport Dropzone from 'react-dropzone';\n\nfunction EmployeePicture(props) {\n  var _useContext = useContext(EmployeeContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      employeeData = _useContext2[0],\n      setEmployeeData = _useContext2[1];\n\n  var _useContext3 = useContext(StepContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      activeStep = _useContext4[0],\n      setActiveStep = _useContext4[1];\n\n  var _useState = useState(new Set()),\n      _useState2 = _slicedToArray(_useState, 2),\n      skipped = _useState2[0],\n      setSkipped = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filename = _useState4[0],\n      setFilename = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      file = _useState6[0],\n      setFile = _useState6[1];\n\n  function handleOnDrop(files, rejectedFiles) {\n    var curfile = files[0];\n    setFilename(files[0].name);\n    var reader = new FileReader();\n    reader.addEventListener(\"load\", function () {\n      setFile(reader.result);\n    }, false);\n    reader.readAsDataURL(curfile);\n  }\n\n  return React.createElement(Formik, {\n    initialValues: employeeData // validationSchema={ValidationSchema}\n    ,\n    onSubmit: function onSubmit(values) {\n      //handleNext()\n      var newSkipped = skipped;\n\n      var isStepSkipped = function isStepSkipped(step) {\n        return skipped.has(step);\n      };\n\n      if (isStepSkipped(activeStep)) {\n        newSkipped = new Set(newSkipped.values());\n        newSkipped[\"delete\"](activeStep);\n      }\n\n      setActiveStep(function (prevActiveStep) {\n        return prevActiveStep + 1;\n      });\n      setSkipped(newSkipped);\n      setEmployeeData(_objectSpread({}, employeeData, {\n        picture: filename\n      }));\n    },\n    render: function render() {\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        style: {\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Upload Picture\"), React.createElement(Dropzone, {\n        onDrop: handleOnDrop,\n        multiple: \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, function (_ref) {\n        var getRootProps = _ref.getRootProps,\n            getInputProps = _ref.getInputProps;\n        return React.createElement(\"section\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(\"div\", Object.assign({}, getRootProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        })), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, filename === \"\" ? \"Drag and drop file here, or click to select file\" : filename)));\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(StepperNavigationButtons, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  });\n}\n\nexport default EmployeePicture;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/components/AddEmployeeForms/EmployeePicture.js"],"names":["React","useState","useContext","FormLabel","GridItem","GridContainer","Formik","Form","EmployeeContext","StepperNavigationButtons","StepContext","Dropzone","EmployeePicture","props","employeeData","setEmployeeData","activeStep","setActiveStep","Set","skipped","setSkipped","filename","setFilename","file","setFile","handleOnDrop","files","rejectedFiles","curfile","name","reader","FileReader","addEventListener","result","readAsDataURL","values","newSkipped","isStepSkipped","step","has","prevActiveStep","picture","textAlign","getRootProps","getInputProps"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { FormLabel } from \"@material-ui/core\";\n// core components\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport { Formik, Form } from 'formik'\nimport { EmployeeContext } from 'views/Employee/AddEmployee'\nimport StepperNavigationButtons from 'components/Stepper/StepperNavigationButtons';\nimport { StepContext } from 'views/Employee/AddEmployee'\nimport Dropzone from 'react-dropzone';\n\nfunction EmployeePicture(props) {\n\n  const [employeeData, setEmployeeData] = useContext(EmployeeContext)\n  const [activeStep, setActiveStep] = useContext(StepContext);\n  const [skipped, setSkipped] = useState(new Set());\n  const [filename, setFilename] = useState('')\n  const [file, setFile] = useState('')\n\n  function handleOnDrop(files, rejectedFiles) {\n    const curfile = files[0]\n    setFilename(files[0].name)\n    const reader = new FileReader()\n    reader.addEventListener(\"load\", () => {\n      setFile(reader.result)\n    }, false)\n    reader.readAsDataURL(curfile)\n  }\n\n  return (\n\n      <Formik\n        initialValues={employeeData}\n        // validationSchema={ValidationSchema}\n        onSubmit={values => {\n          //handleNext()\n          let newSkipped = skipped;\n          const isStepSkipped = step => {\n            return skipped.has(step);\n          };\n          if (isStepSkipped(activeStep)) {\n            newSkipped = new Set(newSkipped.values());\n            newSkipped.delete(activeStep);\n          }\n          setActiveStep(prevActiveStep => prevActiveStep + 1);\n          setSkipped(newSkipped);\n          setEmployeeData({\n            ...employeeData,\n            picture: filename,\n          })\n        }}\n        render={() => (\n          <Form>\n            <GridContainer>\n\n              <GridItem xs={12} sm={12} md={12}>\n                <FormLabel component=\"legend\" style={{ textAlign: 'left' }}>Upload Picture</FormLabel>\n                <Dropzone onDrop={handleOnDrop} multiple=\"true\">\n                  {({ getRootProps, getInputProps }) => (\n                    <section>\n                      <div {...getRootProps()}>\n                        <input {...getInputProps()} />\n                        <p>{filename === \"\" ? \"Drag and drop file here, or click to select file\" : filename}</p>\n                      </div>\n                    </section>\n                  )}\n                </Dropzone>\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={12}>\n                <StepperNavigationButtons />\n              </GridItem>\n\n            </GridContainer>\n          </Form>\n        )}\n      >\n    </Formik>\n  );\n}\n\nexport default EmployeePicture;"]},"metadata":{},"sourceType":"module"}