{"ast":null,"code":"import _defineProperty from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/components/AddEmployeeForms/JobDetails.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from 'react';\nimport { FormLabel, Radio, FormControlLabel } from \"@material-ui/core\";\nimport { TextField, RadioGroup } from 'formik-material-ui';\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { DatePicker, MuiPickersUtilsProvider } from \"material-ui-pickers\";\nimport { Formik, Field, Form } from 'formik';\nimport { StepContext, EmployeeContext, TitleContext } from 'views/Employee/Add';\nimport StepperNavigationButtons from 'components/Stepper/StepperNavigationButtons';\nimport * as Yup from 'yup';\nimport { makeStyles } from \"@material-ui/core/styles\";\nvar useStyles = makeStyles({\n  field: {\n    marginTop: \"32px\"\n  }\n});\nvar validationSchema = Yup.object().shape({\n  jobHireDate: Yup.date().nullable().min(new Date('01-01-1960'), 'Hire date must be greater than 01-01-1960').max(new Date(), 'Hire date is cannot greater than current day').required('Hire date is Required'),\n  jobSalary: Yup.number().typeError('Salary must be number'),\n  jobCurrentSalary: Yup.number().typeError('Current salary must be number') // bond: Yup.number()\n  //   .required('Required'),\n\n});\n\nfunction JobDetails(props) {\n  var classes = useStyles();\n\n  var _useContext = useContext(EmployeeContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      employeeData = _useContext2[0],\n      setEmployeeData = _useContext2[1];\n\n  var _useContext3 = useContext(StepContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      activeStep = _useContext4[0],\n      setActiveStep = _useContext4[1];\n\n  var _useState = useState(new Set()),\n      _useState2 = _slicedToArray(_useState, 2),\n      skipped = _useState2[0],\n      setSkipped = _useState2[1];\n\n  var _useContext5 = useContext(TitleContext),\n      _useContext6 = _slicedToArray(_useContext5, 2),\n      title = _useContext6[0],\n      setTitle = _useContext6[1];\n\n  setTitle('Job Details');\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      hireDate = _useState4[0],\n      setHireDate = _useState4[1];\n\n  function handleDateChange(date) {\n    // setHireDate(format(date, 'dd/MM/yyyy'))\n    setHireDate(date);\n  }\n\n  return React.createElement(Formik, {\n    initialValues: employeeData,\n    validationSchema: validationSchema,\n    onSubmit: function onSubmit(values) {\n      //handleNext()\n      var newSkipped = skipped;\n\n      var isStepSkipped = function isStepSkipped(step) {\n        return skipped.has(step);\n      };\n\n      if (isStepSkipped(activeStep)) {\n        newSkipped = new Set(newSkipped.values());\n        newSkipped[\"delete\"](activeStep);\n      }\n\n      setActiveStep(function (prevActiveStep) {\n        return prevActiveStep + 1;\n      });\n      setSkipped(newSkipped);\n      setEmployeeData(_objectSpread({}, employeeData, {\n        jobHireDate: values.hireDate,\n        jobSalary: values.jobSalary,\n        jobCurrentSalary: values.jobCurrentSalary,\n        jobBond: values.jobBond\n      }));\n    },\n    render: function render() {\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        style: {\n          textAlign: 'left'\n        },\n        className: classes.field,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Hire Date\"), React.createElement(Field, {\n        name: \"birthDate\",\n        component: CustomDatePicker // label=\"Date\"\n        ,\n        placeholder: \"Enter Date of Birth\",\n        fullWidth: true,\n        format: \"dd/MM/yyyy\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Salary\",\n        className: classes.field // placeholder=\"Please Provide salary when you have joined\"\n        ,\n        helperText: \"Please provide salary when you have joined\",\n        id: \"jobSalary\",\n        name: \"jobSalary\",\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Current Salary\",\n        className: classes.field,\n        id: \"jobCurrentSalary\",\n        helperText: \"Please provide your current salary\",\n        name: \"jobCurrentSalary\",\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        style: {\n          textAlign: 'left'\n        },\n        className: classes.field,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Have you signed/agreed any bond?\"), React.createElement(Field, {\n        fullWidth: true,\n        id: \"jobBond\",\n        name: \"jobBond\",\n        component: RadioGroup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        id: \"bond\",\n        label: \"1 Year\",\n        control: React.createElement(Radio, {\n          id: \"jobBond\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }),\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        id: \"bond\",\n        value: \"2\",\n        control: React.createElement(Radio, {\n          id: \"jobBond\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }),\n        label: \"2 Year\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        id: \"bond\",\n        value: \"no\",\n        control: React.createElement(Radio, {\n          id: \"jobBond\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }),\n        label: \"No\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }))), React.createElement(GridItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(StepperNavigationButtons, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  });\n}\n\nexport default JobDetails;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/components/AddEmployeeForms/JobDetails.js"],"names":["React","useState","useContext","FormLabel","Radio","FormControlLabel","TextField","RadioGroup","GridItem","GridContainer","DateFnsUtils","DatePicker","MuiPickersUtilsProvider","Formik","Field","Form","StepContext","EmployeeContext","TitleContext","StepperNavigationButtons","Yup","makeStyles","useStyles","field","marginTop","validationSchema","object","shape","jobHireDate","date","nullable","min","Date","max","required","jobSalary","number","typeError","jobCurrentSalary","JobDetails","props","classes","employeeData","setEmployeeData","activeStep","setActiveStep","Set","skipped","setSkipped","title","setTitle","hireDate","setHireDate","handleDateChange","values","newSkipped","isStepSkipped","step","has","prevActiveStep","jobBond","textAlign","CustomDatePicker"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,gBAA3B,QAAmD,mBAAnD;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,oBAAtC;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SAASC,UAAT,EAAqBC,uBAArB,QAAmD,qBAAnD;AACA,SAASC,MAAT,EAAkBC,KAAlB,EAAyBC,IAAzB,QAAoC,QAApC;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,YAAvC,QAA2D,oBAA3D;AACA,OAAOC,wBAAP,MAAqC,6CAArC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,IAAMC,SAAS,GAACD,UAAU,CAAC;AACzBE,EAAAA,KAAK,EAAC;AACJC,IAAAA,SAAS,EAAE;AADP;AADmB,CAAD,CAA1B;AAKA,IAAMC,gBAAgB,GAAGL,GAAG,CAACM,MAAJ,GAAaC,KAAb,CAAmB;AAC1CC,EAAAA,WAAW,EAAER,GAAG,CAACS,IAAJ,GAAWC,QAAX,GACZC,GADY,CACR,IAAIC,IAAJ,CAAS,YAAT,CADQ,EACe,2CADf,EAEZC,GAFY,CAER,IAAID,IAAJ,EAFQ,EAEG,8CAFH,EAGZE,QAHY,CAGH,uBAHG,CAD6B;AAK1CC,EAAAA,SAAS,EAAEf,GAAG,CAACgB,MAAJ,GAAaC,SAAb,CAAuB,uBAAvB,CAL+B;AAM1CC,EAAAA,gBAAgB,EAAElB,GAAG,CAACgB,MAAJ,GAAaC,SAAb,CAAuB,+BAAvB,CANwB,CAO1C;AACA;;AAR0C,CAAnB,CAAzB;;AAWA,SAASE,UAAT,CAAoBC,KAApB,EAA2B;AACzB,MAAMC,OAAO,GAACnB,SAAS,EAAvB;;AADyB,oBAEYpB,UAAU,CAACe,eAAD,CAFtB;AAAA;AAAA,MAElByB,YAFkB;AAAA,MAELC,eAFK;;AAAA,qBAGWzC,UAAU,CAACc,WAAD,CAHrB;AAAA;AAAA,MAGlB4B,UAHkB;AAAA,MAGNC,aAHM;;AAAA,kBAIK5C,QAAQ,CAAC,IAAI6C,GAAJ,EAAD,CAJb;AAAA;AAAA,MAIlBC,OAJkB;AAAA,MAITC,UAJS;;AAAA,qBAKC9C,UAAU,CAACgB,YAAD,CALX;AAAA;AAAA,MAKlB+B,KALkB;AAAA,MAKXC,QALW;;AAMzBA,EAAAA,QAAQ,CAAC,aAAD,CAAR;;AANyB,mBAOMjD,QAAQ,CAAC,IAAD,CAPd;AAAA;AAAA,MAOhBkD,QAPgB;AAAA,MAOPC,WAPO;;AAQvB,WAASC,gBAAT,CAA0BxB,IAA1B,EAA+B;AAC3B;AACAuB,IAAAA,WAAW,CAACvB,IAAD,CAAX;AACH;;AACD,SACG,oBAAC,MAAD;AACK,IAAA,aAAa,EAAEa,YADpB;AAEK,IAAA,gBAAgB,EAAEjB,gBAFvB;AAGK,IAAA,QAAQ,EAAE,kBAAA6B,MAAM,EAAI;AAClB;AACA,UAAIC,UAAU,GAAGR,OAAjB;;AACA,UAAMS,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,IAAI,EAAI;AAC5B,eAAOV,OAAO,CAACW,GAAR,CAAYD,IAAZ,CAAP;AACD,OAFD;;AAGA,UAAID,aAAa,CAACZ,UAAD,CAAjB,EAA+B;AAC7BW,QAAAA,UAAU,GAAG,IAAIT,GAAJ,CAAQS,UAAU,CAACD,MAAX,EAAR,CAAb;AACAC,QAAAA,UAAU,UAAV,CAAkBX,UAAlB;AACD;;AACDC,MAAAA,aAAa,CAAC,UAAAc,cAAc;AAAA,eAAIA,cAAc,GAAG,CAArB;AAAA,OAAf,CAAb;AACAX,MAAAA,UAAU,CAACO,UAAD,CAAV;AACAZ,MAAAA,eAAe,mBAAKD,YAAL;AACbd,QAAAA,WAAW,EAAC0B,MAAM,CAACH,QADN;AAEbhB,QAAAA,SAAS,EAACmB,MAAM,CAACnB,SAFJ;AAGbG,QAAAA,gBAAgB,EAACgB,MAAM,CAAChB,gBAHX;AAIbsB,QAAAA,OAAO,EAACN,MAAM,CAACM;AAJF,SAAf;AAMC,KArBR;AAsBK,IAAA,MAAM,EAAG;AAAA,aACP,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE,EAAd;AAAkB,QAAA,EAAE,EAAE,EAAtB;AAA0B,QAAA,EAAE,EAAE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,QAArB;AAA8B,QAAA,KAAK,EAAE;AAACC,UAAAA,SAAS,EAAC;AAAX,SAArC;AAAyD,QAAA,SAAS,EAAEpB,OAAO,CAAClB,KAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,KAAD;AACF,QAAA,IAAI,EAAC,WADH;AAEF,QAAA,SAAS,EAAEuC,gBAFT,CAGF;AAHE;AAIF,QAAA,WAAW,EAAC,qBAJV;AAKF,QAAA,SAAS,MALP;AAMF,QAAA,MAAM,EAAC,YANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAFJ,EAaE,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE,EAAd;AAAkB,QAAA,EAAE,EAAE,EAAtB;AAA0B,QAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,KAAD;AACE,QAAA,KAAK,EAAC,QADR;AAEE,QAAA,SAAS,EAAErB,OAAO,CAAClB,KAFrB,CAGE;AAHF;AAIE,QAAA,UAAU,EAAC,4CAJb;AAKE,QAAA,EAAE,EAAC,WALL;AAME,QAAA,IAAI,EAAC,WANP;AAOE,QAAA,SAAS,EAAEjB,SAPb;AAQE,QAAA,SAAS,MARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAbF,EA2BE,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE,EAAd;AAAkB,QAAA,EAAE,EAAE,EAAtB;AAA0B,QAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,KAAK,EAAC,gBADR;AAEE,QAAA,SAAS,EAAEmC,OAAO,CAAClB,KAFrB;AAGE,QAAA,EAAE,EAAC,kBAHL;AAIE,QAAA,UAAU,EAAC,oCAJb;AAKE,QAAA,IAAI,EAAC,kBALP;AAME,QAAA,SAAS,EAAEjB,SANb;AAOE,QAAA,SAAS,MAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CA3BF,EAyCE,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE,EAAd;AAAkB,QAAA,EAAE,EAAE,EAAtB;AAA0B,QAAA,EAAE,EAAE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,QAArB;AAA8B,QAAA,KAAK,EAAE;AAACuD,UAAAA,SAAS,EAAC;AAAX,SAArC;AAAyD,QAAA,SAAS,EAAEpB,OAAO,CAAClB,KAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADA,EAEI,oBAAC,KAAD;AAAO,QAAA,SAAS,MAAhB;AACE,QAAA,EAAE,EAAC,SADL;AAEE,QAAA,IAAI,EAAC,SAFP;AAGE,QAAA,SAAS,EAAEhB,UAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKA,oBAAC,gBAAD;AACI,QAAA,EAAE,EAAC,MADP;AAEI,QAAA,KAAK,EAAC,QAFV;AAGI,QAAA,OAAO,EAAE,oBAAC,KAAD;AAAO,UAAA,EAAE,EAAC,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHb;AAII,QAAA,KAAK,EAAC,GAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALA,EAWE,oBAAC,gBAAD;AACE,QAAA,EAAE,EAAC,MADL;AAEE,QAAA,KAAK,EAAC,GAFR;AAGE,QAAA,OAAO,EAAE,oBAAC,KAAD;AAAO,UAAA,EAAE,EAAC,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHX;AAIE,QAAA,KAAK,EAAC,QAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,EAkBE,oBAAC,gBAAD;AACE,QAAA,EAAE,EAAC,MADL;AAEE,QAAA,KAAK,EAAC,IAFR;AAGE,QAAA,OAAO,EAAE,oBAAC,KAAD;AAAO,UAAA,EAAE,EAAC,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHX;AAIE,QAAA,KAAK,EAAC,IAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBF,CAFJ,CAzCF,EAsEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAtEF,CADA,CADO;AAAA,KAtBd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH;AA2GH;;AAED,eAAegC,UAAf","sourcesContent":["import React ,{useState, useContext} from 'react';\nimport { FormLabel, Radio, FormControlLabel } from \"@material-ui/core\";\nimport { TextField, RadioGroup } from 'formik-material-ui'; \nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { DatePicker, MuiPickersUtilsProvider} from \"material-ui-pickers\";\nimport { Formik , Field, Form} from 'formik'\nimport { StepContext, EmployeeContext, TitleContext } from 'views/Employee/Add'\nimport StepperNavigationButtons from 'components/Stepper/StepperNavigationButtons';\nimport * as Yup from 'yup'\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles=makeStyles({\n  field:{\n    marginTop: \"32px\"\n  }\n})\nconst validationSchema = Yup.object().shape({\n  jobHireDate: Yup.date().nullable()\n  .min(new Date('01-01-1960'),'Hire date must be greater than 01-01-1960')\n  .max(new Date(),'Hire date is cannot greater than current day')\n  .required('Hire date is Required'),\n  jobSalary: Yup.number().typeError('Salary must be number'),\n  jobCurrentSalary: Yup.number().typeError('Current salary must be number')\n  // bond: Yup.number()\n  //   .required('Required'),\n   \n}); \nfunction JobDetails(props) {\n  const classes=useStyles()\n  const [employeeData,setEmployeeData]=useContext(EmployeeContext)\n  const [activeStep, setActiveStep] = useContext(StepContext);\n  const [skipped, setSkipped] = useState(new Set());\n  const [title, setTitle] = useContext(TitleContext);\n  setTitle('Job Details')\n    const [hireDate,setHireDate]=useState(null)\n    function handleDateChange(date){\n        // setHireDate(format(date, 'dd/MM/yyyy'))\n        setHireDate(date)\n    }\n    return (\n       <Formik\n            initialValues={employeeData}\n            validationSchema={validationSchema}\n            onSubmit={values => {\n              //handleNext()\n              let newSkipped = skipped;\n              const isStepSkipped = step => {\n                return skipped.has(step);\n              };\n              if (isStepSkipped(activeStep)) {\n                newSkipped = new Set(newSkipped.values());\n                newSkipped.delete(activeStep);\n              }\n              setActiveStep(prevActiveStep => prevActiveStep + 1);\n              setSkipped(newSkipped);\n              setEmployeeData({...employeeData,\n                jobHireDate:values.hireDate,\n                jobSalary:values.jobSalary,\n                jobCurrentSalary:values.jobCurrentSalary,\n                jobBond:values.jobBond\n              })\n              }} \n            render= {() => (\n              <Form>\n              <GridContainer>\n\n                  <GridItem xs={12} sm={12} md={12}>\n                    <FormLabel component=\"legend\" style={{textAlign:'left'}} className={classes.field}>Hire Date</FormLabel>\n                    <Field\n                  name=\"birthDate\"\n                  component={CustomDatePicker}\n                  // label=\"Date\"\n                  placeholder=\"Enter Date of Birth\"\n                  fullWidth\n                  format=\"dd/MM/yyyy\"\n                /> \n                </GridItem>\n                <GridItem xs={12} sm={12} md={6}>\n                  {/* we can use CustomInput also insted of field */}\n                  <Field\n                    label=\"Salary\"\n                    className={classes.field}\n                    // placeholder=\"Please Provide salary when you have joined\"\n                    helperText=\"Please provide salary when you have joined\"\n                    id=\"jobSalary\"\n                    name=\"jobSalary\"\n                    component={TextField}\n                    fullWidth\n                \n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={6}>\n                  <Field\n                    label=\"Current Salary\"\n                    className={classes.field}\n                    id=\"jobCurrentSalary\"\n                    helperText=\"Please provide your current salary\"\n                    name=\"jobCurrentSalary\"\n                    component={TextField}\n                    fullWidth\n                  />\n                </GridItem>\n               \n                \n              \n                <GridItem xs={12} sm={12} md={12}>\n                <FormLabel component=\"legend\" style={{textAlign:'left'}} className={classes.field}>Have you signed/agreed any bond?</FormLabel>\n                    <Field fullWidth\n                      id=\"jobBond\"\n                      name=\"jobBond\"\n                      component={RadioGroup}\n                    >\n                    <FormControlLabel\n                        id=\"bond\"\n                        label=\"1 Year\"\n                        control={<Radio id=\"jobBond\" />}\n                        value=\"1\"\n                      />\n                      <FormControlLabel\n                        id=\"bond\"\n                        value=\"2\"\n                        control={<Radio id=\"jobBond\"/>}\n                        label=\"2 Year\"\n                      />\n\n                      <FormControlLabel\n                        id=\"bond\"\n                        value=\"no\"\n                        control={<Radio id=\"jobBond\"/>}\n                        label=\"No\"\n                      />\n                    </Field>\n                </GridItem>\n              \n                <GridItem>\n                <StepperNavigationButtons />\n                {/* <Button type=\"submit\">fds</Button> */}\n                </GridItem>\n              </GridContainer>\n              </Form>\n               )\n               } \n            >\n\n            </Formik>\n    );\n}\n\nexport default JobDetails;"]},"metadata":{},"sourceType":"module"}