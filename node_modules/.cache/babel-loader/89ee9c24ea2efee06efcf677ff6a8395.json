{"ast":null,"code":"import _defineProperty from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/components/AddEmployeeForms/IdProof.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from 'react';\nimport { FormLabel } from \"@material-ui/core\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport { Formik, Form, Field } from 'formik';\nimport StepperNavigationButtons from 'components/Stepper/StepperNavigationButtons';\nimport { StepContext, EmployeeContext, TitleContext } from 'views/Employee/Add';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CustomDropzone from 'components/Dropzone/Dropzone';\nimport { IdProofContext } from 'views/Employee/Add';\nimport Chip from '@material-ui/core/Chip';\nvar useStyles = makeStyles({\n  field: {\n    marginTop: \"32px\"\n  }\n});\n\nfunction IdProof(props) {\n  var classes = useStyles();\n\n  var _useContext = useContext(EmployeeContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      employeeData = _useContext2[0],\n      setEmployeeData = _useContext2[1];\n\n  var _useContext3 = useContext(StepContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      activeStep = _useContext4[0],\n      setActiveStep = _useContext4[1];\n\n  var _useState = useState(new Set()),\n      _useState2 = _slicedToArray(_useState, 2),\n      skipped = _useState2[0],\n      setSkipped = _useState2[1];\n\n  var _useContext5 = useContext(TitleContext),\n      _useContext6 = _slicedToArray(_useContext5, 2),\n      title = _useContext6[0],\n      setTitle = _useContext6[1];\n\n  var fileList = [];\n\n  var _useContext7 = useContext(IdProofContext),\n      _useContext8 = _slicedToArray(_useContext7, 2),\n      idProof = _useContext8[0],\n      setIdProof = _useContext8[1];\n\n  setTitle('ID Proof');\n  return React.createElement(Formik, {\n    initialValues: employeeData // validationSchema={ValidationSchema}\n    ,\n    onSubmit: function onSubmit(values) {\n      //handleNext()\n      var newSkipped = skipped;\n\n      var isStepSkipped = function isStepSkipped(step) {\n        return skipped.has(step);\n      };\n\n      if (isStepSkipped(activeStep)) {\n        newSkipped = new Set(newSkipped.values());\n        newSkipped[\"delete\"](activeStep);\n      }\n\n      setActiveStep(function (prevActiveStep) {\n        return prevActiveStep + 1;\n      });\n      setSkipped(newSkipped);\n      setEmployeeData(_objectSpread({}, employeeData, {\n        idProof: idProof\n      }));\n    },\n    render: function render() {\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        style: {\n          textAlign: 'left'\n        },\n        className: classes.field,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Upload ID Proof\"), React.createElement(CustomDropzone, {\n        list: idProof,\n        callBack: function callBack(files) {\n          files.map(function (file) {\n            fileList.push(file);\n          });\n          console.log(\"filelist\", fileList);\n          setIdProof(fileList);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(StepperNavigationButtons, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  });\n}\n\nexport default IdProof;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/components/AddEmployeeForms/IdProof.js"],"names":["React","useState","useContext","FormLabel","GridItem","GridContainer","Formik","Form","Field","StepperNavigationButtons","StepContext","EmployeeContext","TitleContext","makeStyles","CustomDropzone","IdProofContext","Chip","useStyles","field","marginTop","IdProof","props","classes","employeeData","setEmployeeData","activeStep","setActiveStep","Set","skipped","setSkipped","title","setTitle","fileList","idProof","setIdProof","values","newSkipped","isStepSkipped","step","has","prevActiveStep","textAlign","files","map","file","push","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { FormLabel } from \"@material-ui/core\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport { Formik, Form, Field } from 'formik'\nimport StepperNavigationButtons from 'components/Stepper/StepperNavigationButtons';\nimport { StepContext, EmployeeContext, TitleContext } from 'views/Employee/Add'\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CustomDropzone from 'components/Dropzone/Dropzone'\nimport { IdProofContext } from 'views/Employee/Add';\nimport Chip from '@material-ui/core/Chip';\n\nconst useStyles = makeStyles({\n  field: {\n    marginTop: \"32px\"\n  }\n})\nfunction IdProof(props) {\n\n  const classes = useStyles()\n  const [employeeData, setEmployeeData] = useContext(EmployeeContext)\n  const [activeStep, setActiveStep] = useContext(StepContext);\n  const [skipped, setSkipped] = useState(new Set());\n  const [title, setTitle] = useContext(TitleContext);\n  const fileList=[]\n  const [idProof,setIdProof]=useContext(IdProofContext)\n  setTitle('ID Proof')\n\n  return (\n    <Formik\n      initialValues={employeeData}\n      // validationSchema={ValidationSchema}\n      onSubmit={values => {\n        //handleNext()\n        let newSkipped = skipped;\n        const isStepSkipped = step => {\n          return skipped.has(step);\n        };\n        if (isStepSkipped(activeStep)) {\n          newSkipped = new Set(newSkipped.values());\n          newSkipped.delete(activeStep);\n        }\n        setActiveStep(prevActiveStep => prevActiveStep + 1);\n        setSkipped(newSkipped);\n        setEmployeeData({\n          ...employeeData,\n          idProof: idProof,\n        })\n      }}\n      render={() => (\n        <Form>\n          <GridContainer>\n            <GridItem xs={12} sm={12} md={12}>\n              <FormLabel component=\"legend\" style={{ textAlign: 'left' }} className={classes.field}>Upload ID Proof</FormLabel>\n              <CustomDropzone list={idProof} callBack={files=>{\n                \n                files.map(file=>{\n                  fileList.push(file)\n                })\n                console.log(\"filelist\",fileList)\n                setIdProof(fileList)\n              }} />\n              {/* <Field\n                // label=\"Image\"\n                id=\"idProof\"\n                name=\"idProof\"\n                component={CustomDropzone}\n                fullWidth\n              /> */}\n            {/* {idProof?idProof.map(a=>{\n                return(<div>\n               <Chip label={a.name} color=\"primary\" /><br/><br/></div>\n              //  onDelete={handleDelete}\n                )})\n              :\"\"} */}\n            </GridItem>\n            <GridItem xs={12} sm={12} md={12}>\n              <StepperNavigationButtons />\n            </GridItem>\n          </GridContainer>\n        </Form>\n      )}\n    >\n    </Formik>\n  );\n}\n\nexport default IdProof;"]},"metadata":{},"sourceType":"module"}