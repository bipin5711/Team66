{"ast":null,"code":"import _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/components/AddEmployeeForms/CurrentAddress.js\";\nimport React, { useState, useContext } from 'react'; // import { makeStyles } from \"@material-ui/core/styles\";\n\nimport { FormLabel } from \"@material-ui/core\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport Dropzone from 'react-dropzone';\nimport StepperNavigationButtons from 'views/Employee/StepperNavigationButtons';\nimport { EmployeeContext } from 'views/Employee/AddEmployee'; // const styles = {\n//     cardCategoryWhite: {\n//       color: \"rgba(255,255,255,.62)\",\n//       margin: \"0\",\n//       fontSize: \"14px\",\n//       marginTop: \"0\",\n//       marginBottom: \"0\"\n//     },\n//     cardTitleWhite: {\n//       color: \"#FFFFFF\",\n//       marginTop: \"0px\",\n//       minHeight: \"auto\",\n//       fontWeight: \"300\",\n//       fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n//       marginBottom: \"3px\",\n//       textDecoration: \"none\"\n//     }\n//   };\n// const useStyles = makeStyles(styles);\n\nfunction CurrentAddress(props) {\n  var _useContext = useContext(EmployeeContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      employeeData = _useContext2[0],\n      setEmployeeData = _useContext2[1]; // setEmployeeData({...employeeData,street1:'helllo'})\n  // console.log(\"child2\",employeeData)\n  // const classes = useStyles();\n\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      filename = _useState2[0],\n      setFilename = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      file = _useState4[0],\n      setFile = _useState4[1];\n\n  function handleOnDrop(files, rejectedFiles) {\n    var curfile = files[0];\n    console.log(files[0].name);\n    setFilename(files[0].name); // this.setState({imagename:files[0].name})\n\n    var reader = new FileReader();\n    reader.addEventListener(\"load\", function () {\n      console.log(\"ondrop called\");\n      setFile(reader.result); // this.setState({\n      //       image:reader.result\n      //   })\n    }, false);\n    reader.readAsDataURL(curfile);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, console.log(\"actual2\", employeeData), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(CustomInput, {\n    labelText: \"Street 1\",\n    id: \"street1\",\n    formControlProps: {\n      fullWidth: true\n    } // inputProps={{\n    //   disabled: true\n    // }}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(CustomInput, {\n    labelText: \"Street 2\",\n    id: \"street2\",\n    formControlProps: {\n      fullWidth: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(CustomInput, {\n    labelText: \"City\",\n    id: \"city\",\n    formControlProps: {\n      fullWidth: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(CustomInput, {\n    labelText: \"State\",\n    id: \"state\",\n    formControlProps: {\n      fullWidth: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(CustomInput, {\n    labelText: \"Country\",\n    id: \"country\",\n    formControlProps: {\n      fullWidth: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    component: \"legend\",\n    style: {\n      textAlign: 'left'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Image\"), React.createElement(Dropzone, {\n    onDrop: handleOnDrop,\n    multiple: \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, function (_ref) {\n    var getRootProps = _ref.getRootProps,\n        getInputProps = _ref.getInputProps;\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"div\", Object.assign({}, getRootProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, filename === \"\" ? \"Drag and drop file here, or click to select file\" : filename)));\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(StepperNavigationButtons, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }))));\n}\n\nexport default CurrentAddress;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/components/AddEmployeeForms/CurrentAddress.js"],"names":["React","useState","useContext","FormLabel","GridItem","GridContainer","CustomInput","Card","CardHeader","CardBody","Dropzone","StepperNavigationButtons","EmployeeContext","CurrentAddress","props","employeeData","setEmployeeData","filename","setFilename","file","setFile","handleOnDrop","files","rejectedFiles","curfile","console","log","name","reader","FileReader","addEventListener","result","readAsDataURL","fullWidth","textAlign","getRootProps","getInputProps"],"mappings":"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","sourcesContent":["import React ,{useState,useContext} from 'react';\n// import { makeStyles } from \"@material-ui/core/styles\";\nimport { FormLabel } from \"@material-ui/core\";\n// core components\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport Dropzone from 'react-dropzone';\n\nimport  StepperNavigationButtons  from 'views/Employee/StepperNavigationButtons';\nimport {EmployeeContext} from 'views/Employee/AddEmployee'\n// const styles = {\n//     cardCategoryWhite: {\n//       color: \"rgba(255,255,255,.62)\",\n//       margin: \"0\",\n//       fontSize: \"14px\",\n//       marginTop: \"0\",\n//       marginBottom: \"0\"\n//     },\n//     cardTitleWhite: {\n//       color: \"#FFFFFF\",\n//       marginTop: \"0px\",\n//       minHeight: \"auto\",\n//       fontWeight: \"300\",\n//       fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n//       marginBottom: \"3px\",\n//       textDecoration: \"none\"\n//     }\n//   };\n  \n// const useStyles = makeStyles(styles);\n\nfunction CurrentAddress(props) {\n  const [employeeData,setEmployeeData]=useContext(EmployeeContext)\n  // setEmployeeData({...employeeData,street1:'helllo'})\n  // console.log(\"child2\",employeeData)\n    // const classes = useStyles();\n    const [filename,setFilename]=useState('')\n    const [file,setFile]=useState('')\n\n    function handleOnDrop(files,rejectedFiles){\n        const curfile=files[0]\n        console.log(files[0].name)\n        setFilename(files[0].name)\n        \n        // this.setState({imagename:files[0].name})\n        const reader=new FileReader()\n        reader.addEventListener(\"load\",()=>{\n            console.log(\"ondrop called\")\n            \n        setFile(reader.result)\n            // this.setState({\n            //       image:reader.result\n            //   })\n         },false)\n              reader.readAsDataURL(curfile)\n    }\n    return (\n        <div>\n        {/* <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"primary\">\n              <h4 className={classes.cardTitleWhite}>Add Employee</h4>\n              <p className={classes.cardCategoryWhite}>Current Address</p>\n            </CardHeader>\n            <CardBody> */}\n              <GridContainer>{\n                console.log(\"actual2\",employeeData)}\n                <GridItem xs={12} sm={12} md={12}>\n                  <CustomInput\n                    labelText=\"Street 1\"\n                    id=\"street1\"\n                    formControlProps={{\n                      fullWidth: true\n                    }}\n                    // inputProps={{\n                    //   disabled: true\n                    // }}\n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={12}>\n                  <CustomInput\n                    labelText=\"Street 2\"\n                    id=\"street2\"\n                    formControlProps={{\n                      fullWidth: true\n                    }}\n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={12}>\n                  <CustomInput\n                    labelText=\"City\"\n                    id=\"city\"\n                    formControlProps={{\n                      fullWidth: true\n                    }}\n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={12}>\n                  <CustomInput\n                    labelText=\"State\"\n                    id=\"state\"\n                    formControlProps={{\n                      fullWidth: true\n                    }}\n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={12}>\n                  <CustomInput\n                    labelText=\"Country\"\n                    id=\"country\"\n                    formControlProps={{\n                      fullWidth: true\n                    }}\n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={12}>\n                <FormLabel component=\"legend\" style={{textAlign:'left'}}>Image</FormLabel>\n                <Dropzone onDrop={handleOnDrop} multiple=\"true\">\n                    \n                {({getRootProps, getInputProps}) => (\n                    <section>\n                    <div {...getRootProps()}>\n                        <input {...getInputProps()} />\n                        <p>{filename===\"\"?\"Drag and drop file here, or click to select file\":filename}</p>\n                        \n                    </div>\n                    </section>\n                )}\n                </Dropzone>\n                </GridItem>\n                <GridItem xs={12} sm={12} md={12}>\n                <StepperNavigationButtons/>\n                </GridItem>\n              </GridContainer>\n              \n            {/* </CardBody>\n             <CardFooter>\n              <Button color=\"primary\">Update Profile</Button>\n            </CardFooter> \n          </Card>\n        </GridItem>\n      \n      </GridContainer> */}\n    </div>\n    );\n}\n\nexport default CurrentAddress;"]},"metadata":{},"sourceType":"module"}