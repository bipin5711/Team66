{"ast":null,"code":"import _defineProperty from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/components/AddEmployeeForms/JobDetails.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from 'react';\nimport { FormLabel, RadioGroup, Radio, FormControlLabel } from \"@material-ui/core\";\nimport { TextField } from 'formik-material-ui';\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { DatePicker, MuiPickersUtilsProvider } from \"material-ui-pickers\";\nimport { Formik, Field, Form } from 'formik';\nimport { EmployeeContext } from 'views/Employee/AddEmployee';\nimport StepperNavigationButtons from 'views/Employee/StepperNavigationButtons';\nimport * as Yup from 'yup';\nimport { StepContext } from 'views/Employee/AddEmployee';\nvar ValidationSchema = Yup.object().shape({\n  hireDate: Yup.date().required('Required'),\n  salary: Yup.number(),\n  currentSalary: Yup.number().required('Required')\n});\n\nfunction JobDetails(props) {\n  var _useContext = useContext(EmployeeContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      employeeData = _useContext2[0],\n      setEmployeeData = _useContext2[1];\n\n  var _useContext3 = useContext(StepContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      activeStep = _useContext4[0],\n      setActiveStep = _useContext4[1];\n\n  var _useState = useState(new Set()),\n      _useState2 = _slicedToArray(_useState, 2),\n      skipped = _useState2[0],\n      setSkipped = _useState2[1];\n\n  var _useState3 = useState(new Date()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      hireDate = _useState4[0],\n      setHireDate = _useState4[1];\n\n  function handleDateChange(date) {\n    // setHireDate(format(date, 'dd/MM/yyyy'))\n    setHireDate(date);\n  }\n\n  return React.createElement(Formik, {\n    initialValues: employeeData // validationSchema={ValidationSchema}\n    ,\n    onSubmit: function onSubmit(values) {\n      //handleNext()\n      var newSkipped = skipped;\n\n      var isStepSkipped = function isStepSkipped(step) {\n        return skipped.has(step);\n      };\n\n      if (isStepSkipped(activeStep)) {\n        newSkipped = new Set(newSkipped.values());\n        newSkipped[\"delete\"](activeStep);\n      }\n\n      setActiveStep(function (prevActiveStep) {\n        return prevActiveStep + 1;\n      });\n      setSkipped(newSkipped);\n      alert(\"fd\");\n      setEmployeeData(_objectSpread({}, employeeData, {\n        jobHireDate: hireDate,\n        jobSalary: values.salary,\n        jobCurrentsalary: values.currentSalary,\n        jobBond: values.bond\n      }));\n      console.log(\"information\", employeeData);\n    },\n    render: function render(_ref) {\n      var errors = _ref.errors,\n          values = _ref.values,\n          touched = _ref.touched,\n          handleChange = _ref.handleChange,\n          handleSubmit = _ref.handleSubmit;\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        style: {\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Hire Date\"), React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        name: \"hireDate\",\n        id: \"hireDate\",\n        fullWidth: true,\n        value: hireDate,\n        format: \"dd-MM-yyyy\",\n        placeholder: \"Enter date\",\n        onChange: handleDateChange,\n        label: \"Hire Date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }))), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Salary\" // placeholder=\"Please Provide salary when you have joined\"\n        ,\n        helperText: \"Please Provide salary when you have joined\",\n        id: \"salary\",\n        name: \"salary\",\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Current Salary\",\n        id: \"currentSalary\",\n        helperText: \"Please Provide salary when you have joined\",\n        name: \"currentSalary\",\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        style: {\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Have you signed/agreed any bond?\"), React.createElement(Field, {\n        fullWidth: true,\n        id: \"bond\",\n        name: \"bond\",\n        value: values.bond,\n        error: errors.bond,\n        component: RadioGroup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        id: \"bond\",\n        label: \"1 Year\",\n        control: React.createElement(Radio, {\n          id: \"bond\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }),\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        id: \"bond\",\n        value: \"2\",\n        control: React.createElement(Radio, {\n          id: \"bond\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }),\n        label: \"2 Year\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        id: \"bond\",\n        value: \"no\",\n        control: React.createElement(Radio, {\n          id: \"bond\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }),\n        label: \"No\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }))), React.createElement(GridItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(StepperNavigationButtons, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  });\n}\n\nexport default JobDetails;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/components/AddEmployeeForms/JobDetails.js"],"names":["React","useState","useContext","FormLabel","RadioGroup","Radio","FormControlLabel","TextField","GridItem","GridContainer","DateFnsUtils","DatePicker","MuiPickersUtilsProvider","Formik","Field","Form","EmployeeContext","StepperNavigationButtons","Yup","StepContext","ValidationSchema","object","shape","hireDate","date","required","salary","number","currentSalary","JobDetails","props","employeeData","setEmployeeData","activeStep","setActiveStep","Set","skipped","setSkipped","Date","setHireDate","handleDateChange","values","newSkipped","isStepSkipped","step","has","prevActiveStep","alert","jobHireDate","jobSalary","jobCurrentsalary","jobBond","bond","console","log","errors","touched","handleChange","handleSubmit","textAlign"],"mappings":"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","sourcesContent":["import React ,{useState, useContext} from 'react';\nimport { FormLabel,RadioGroup, Radio, FormControlLabel } from \"@material-ui/core\";\nimport { TextField } from 'formik-material-ui'; \nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { DatePicker, MuiPickersUtilsProvider} from \"material-ui-pickers\";\nimport { Formik , Field, Form} from 'formik'\nimport {EmployeeContext} from 'views/Employee/AddEmployee'\nimport  StepperNavigationButtons  from 'views/Employee/StepperNavigationButtons';\nimport * as Yup from 'yup'\nimport {StepContext} from 'views/Employee/AddEmployee'\n\nconst ValidationSchema = Yup.object().shape({\n  hireDate: Yup.date()\n    .required('Required'),\n  salary: Yup.number(),\n  currentSalary: Yup.number()\n    .required('Required'),\n   \n}); \nfunction JobDetails(props) {\n  const [employeeData,setEmployeeData]=useContext(EmployeeContext)\n  const [activeStep, setActiveStep] = useContext(StepContext);\n  const [skipped, setSkipped] = useState(new Set());\n    const [hireDate,setHireDate]=useState(new Date())\n    function handleDateChange(date){\n        // setHireDate(format(date, 'dd/MM/yyyy'))\n        setHireDate(date)\n    }\n    return (\n       <Formik\n            initialValues={employeeData}\n            // validationSchema={ValidationSchema}\n            onSubmit={values => {\n              //handleNext()\n              let newSkipped = skipped;\n              const isStepSkipped = step => {\n                return skipped.has(step);\n              };\n              if (isStepSkipped(activeStep)) {\n                newSkipped = new Set(newSkipped.values());\n                newSkipped.delete(activeStep);\n              }\n              setActiveStep(prevActiveStep => prevActiveStep + 1);\n              setSkipped(newSkipped);\n\n\n              alert(\"fd\")\n              setEmployeeData({...employeeData,\n                jobHireDate:hireDate,\n                jobSalary:values.salary,\n                jobCurrentsalary:values.currentSalary,\n                jobBond:values.bond\n              })\n              console.log(\"information\",employeeData)\n              }} \n            render= {({errors,values, touched ,handleChange, handleSubmit}) => (\n              <Form>\n              <GridContainer>\n\n                  <GridItem xs={12} sm={12} md={12}>\n                    <FormLabel component=\"legend\" style={{textAlign:'left'}}>Hire Date</FormLabel>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils} >\n                   \n                         <DatePicker \n                         name=\"hireDate\" \n                         id=\"hireDate\" \n                          fullWidth \n                         value={hireDate} \n                         format='dd-MM-yyyy' \n                         placeholder='Enter date' \n                         onChange={handleDateChange} \n                         label=\"Hire Date\"\n                         />\n                      \n                    </MuiPickersUtilsProvider>\n                </GridItem>\n                <GridItem xs={12} sm={12} md={12}>\n                  {/* we can use CustomInput also insted of field */}\n                  <Field\n                    label=\"Salary\"\n                    // placeholder=\"Please Provide salary when you have joined\"\n                   \n                    helperText=\"Please Provide salary when you have joined\"\n                    id=\"salary\"\n                    name=\"salary\"\n                    component={TextField}\n                    fullWidth\n                \n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={12}>\n                  <Field\n                    label=\"Current Salary\"\n                    id=\"currentSalary\"\n                    helperText=\"Please Provide salary when you have joined\"\n                    name=\"currentSalary\"\n                    component={TextField}\n                    fullWidth\n                  />\n                </GridItem>\n               \n                \n              \n                <GridItem xs={12} sm={12} md={12}>\n                <FormLabel component=\"legend\" style={{textAlign:'left'}}>Have you signed/agreed any bond?</FormLabel>\n                    <Field fullWidth\n                      id=\"bond\"\n                      name=\"bond\"\n                      value={values.bond}\n                      error={errors.bond}\n                      component={RadioGroup}\n                    >\n                    <FormControlLabel\n                        id=\"bond\"\n                        label=\"1 Year\"\n                        control={<Radio id=\"bond\" />}\n                        value=\"1\"\n                      />\n                      <FormControlLabel\n                        id=\"bond\"\n                        value=\"2\"\n                        control={<Radio id=\"bond\"/>}\n                        label=\"2 Year\"\n                      />\n\n                      <FormControlLabel\n                        id=\"bond\"\n                        value=\"no\"\n                        control={<Radio id=\"bond\"/>}\n                        label=\"No\"\n                      />\n                    </Field>\n                </GridItem>\n              \n                <GridItem>\n                <StepperNavigationButtons />\n                {/* <Button type=\"submit\">fds</Button> */}\n                </GridItem>\n              </GridContainer>\n              </Form>\n               )\n               } \n            >\n\n            </Formik>\n    );\n}\n\nexport default JobDetails;"]},"metadata":{},"sourceType":"module"}