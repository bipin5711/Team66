{"ast":null,"code":"var _jsxFileName = \"/home/bipin/Downloads/team66/src/views/Employee/List.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\"; // import Table from \"components/Table/Table.js\";\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { EmployeeDataContext } from 'views/Employee/Add';\nimport { ShowEmployee } from 'redux/EmployeeAction';\nimport { connect, useSelector, useDispatch } from 'react-redux';\nimport { showEmployee as _showEmployee } from 'redux/EmployeeAction';\nimport { addEmployee } from 'redux/EmployeeAction';\nvar styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n      fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\"\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\"\n    }\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  } // button:{\n  //     flexDirection: 'row', \n  //     justifyContent: 'flex-end',\n  //     alignSelf: 'flex-end',\n  //     alignItems: 'flex-end'\n  // }\n\n};\nvar useStyles = makeStyles(styles);\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return {\n    name: name,\n    calories: calories,\n    fat: fat,\n    carbs: carbs,\n    protein: protein\n  };\n}\n\nfunction Employee(props) {\n  // const employeeData=useContext(EmployeeDataContext)\n  // console.log(\"Ds\",employeeData)\n  var classes = useStyles();\n  var data = useSelector(function (state) {\n    return state;\n  });\n  var dispatch = useDispatch();\n  useEffect(function () {\n    console.log(\"useefect Show\");\n    dispatch({\n      type: 'SHOW_EMPLOYEE'\n    }); // showEmployee()\n  }, []);\n  var rows = [//  employeeData.fullName===\"undefined\"?\"\":createData(employeeData.fullName,employeeData.fullName,employeeData.fullName,employeeData.fullName,employeeData.fullName)\n    // createData('A', 'X', 'X', 'X', 43000),\n    // createData('E', 'X', 'X', 'X', 60000),\n    // createData('C', 'X', 'X', 'X', 43000),\n    // createData('G', 'X', 'X', 'X', 39000),\n  ]; // const data=props.data;\n  // console.log(\"hii\",employeeData)\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: classes.cardTitleWhite,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Employee Information\"), React.createElement(Button, {\n    variant: \"contained\",\n    style: {\n      \"float\": 'right'\n    },\n    color: \"primary\",\n    component: Link,\n    to: \"/admin/addEmployee\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Add Employee\")), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Table, {\n    \"aria-label\": \"simple table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Name\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"City\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"State\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Country\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Salary\"), React.createElement(TableCell, {\n    align: \"center\",\n    colSpan: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Action\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, state.fullName), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, props.currentCity), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, props.currentState), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, props.currentState), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, props.currentCountry), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    component: Link,\n    to: \"/admin/editEmployee\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"Edit\")), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    component: Link,\n    to: \"/admin/deleteEmployee\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Delete\"))))))))));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log(\"hii\", state.fullName);\n  return {\n    // name:state.name,\n    // age:state.age\n    fullName: state.fullName,\n    preferredName: state.preferredName,\n    birthDate: state.birthDate,\n    gender: state.gender,\n    maritalStatus: state.maritalStatus,\n    currentStreet1: state.currentStreet1,\n    currentStreet2: state.currentStreet2,\n    currentCity: state.currentCity,\n    currentState: state.currentState,\n    currentCountry: state.currentCountry,\n    currentAddressProof: state.currentAddressProof,\n    permanentStreet1: state.permanentStreet1,\n    permanentStreet2: state.permanentStreet2,\n    permanentCity: state.permanentCity,\n    permanentState: state.permanentState,\n    permanentCountry: state.permanentCountry,\n    permanentAddressProof: state.permanentAddressProof,\n    emergencyName1: state.emergencyName1,\n    emergencyMobile1: state.emergencyMobile1,\n    emergencyRelationship1: state.emergencyRelationship1,\n    emergencyName2: state.emergencyName2,\n    emergencyMobile2: state.emergencyMobile2,\n    emergencyRelationship2: state.emergencyRelationship2,\n    jobHireDate: state.jobHireDate,\n    jobSalary: state.jobSalary,\n    jobCurrentSalary: state.jobCurrentSalary,\n    jobBond: state.jobBond,\n    idProof: state.idProof,\n    picture: state.picture,\n    feedback: state.feedback\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    showEmployee: function showEmployee() {\n      return dispatch(_showEmployee());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Employee);\n{\n  /* <Table aria-label=\"simple table\">\n     <TableHead>\n       <TableRow>\n         <TableCell>Name</TableCell>\n         <TableCell align=\"right\">City</TableCell>\n         <TableCell align=\"right\">State</TableCell>\n         <TableCell align=\"right\">Country</TableCell>\n         <TableCell align=\"right\">Salary</TableCell>\n         <TableCell align=\"center\" colSpan={2}>Action</TableCell>\n       </TableRow>\n     </TableHead>\n     <TableBody>\n       {rows.map(row => (\n         <TableRow key={row.name}>\n           <TableCell component=\"th\" scope=\"row\">\n             {row.name}\n           </TableCell>\n           <TableCell align=\"right\">{row.calories}</TableCell>\n           <TableCell align=\"right\">{row.fat}</TableCell>\n           <TableCell align=\"right\">{row.carbs}</TableCell>\n           <TableCell align=\"right\">{row.protein}</TableCell>\n           <TableCell align=\"right\"><Button variant=\"contained\" color=\"primary\"  component={Link} to=\"/admin/editEmployee\">\n             Edit\n         </Button></TableCell>\n           <TableCell align=\"right\"><Button variant=\"contained\" color=\"primary\"  component={Link} to=\"/admin/deleteEmployee\">\n             Delete\n         </Button></TableCell>\n         </TableRow>\n       ))}\n     </TableBody>\n   </Table> */\n}\n{\n  /* <Table\n   tableHeaderColor=\"primary\"\n   tableHead={[\"Name\", \"State\",\"Country\", \"City\", \"Salary\"]}\n   tableData={[\n     // data\n     [\"1\", \"Dakota Rice\", \"$36,738\", \"Niger\", \"Oud-Turnhout\"],\n     [\"2\", \"Minerva Hooper\", \"$23,789\", \"Curaçao\", \"Sinaai-Waas\"],\n     [\"3\", \"Sage Rodriguez\", \"$56,142\", \"Netherlands\", \"Baileux\"],\n     [\n       \"4\",\n       \"Philip Chaney\",\n       \"$38,735\",\n       \"Korea, South\",\n       \"Overland Park\"\n     ],\n     [\n       \"5\",\n       \"Doris Greene\",\n       \"$63,542\",\n       \"Malawi\",\n       \"Feldkirchen in Kärnten\"\n     ],\n     [\"6\", \"Mason Porter\", \"$78,615\", \"Chile\", \"Gloucester\"]\n   ]}\n  /> */\n}","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/views/Employee/List.js"],"names":["React","useState","useContext","useEffect","GridItem","GridContainer","Table","TableBody","TableCell","TableHead","TableRow","Card","CardHeader","CardBody","makeStyles","Button","Link","EmployeeDataContext","ShowEmployee","connect","useSelector","useDispatch","showEmployee","addEmployee","styles","cardCategoryWhite","color","margin","fontSize","marginTop","marginBottom","fontFamily","cardTitleWhite","minHeight","fontWeight","textDecoration","lineHeight","useStyles","createData","name","calories","fat","carbs","protein","Employee","props","classes","data","state","dispatch","console","log","type","rows","fullName","currentCity","currentState","currentCountry","mapStateToProps","preferredName","birthDate","gender","maritalStatus","currentStreet1","currentStreet2","currentAddressProof","permanentStreet1","permanentStreet2","permanentCity","permanentState","permanentCountry","permanentAddressProof","emergencyName1","emergencyMobile1","emergencyRelationship1","emergencyName2","emergencyMobile2","emergencyRelationship2","jobHireDate","jobSalary","jobCurrentSalary","jobBond","idProof","picture","feedback","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React ,{ useState, useContext, useEffect } from 'react';\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\n// import Table from \"components/Table/Table.js\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from '@material-ui/core/Button'\nimport {Link} from 'react-router-dom'\nimport { EmployeeDataContext } from 'views/Employee/Add'\nimport {ShowEmployee} from 'redux/EmployeeAction'\nimport {connect, useSelector, useDispatch} from 'react-redux'\nimport { showEmployee } from 'redux/EmployeeAction';\nimport { addEmployee } from 'redux/EmployeeAction';\n\nconst styles = {\n    cardCategoryWhite: {\n      \"&,& a,& a:hover,& a:focus\": {\n        color: \"rgba(255,255,255,.62)\",\n        margin: \"0\",\n        fontSize: \"14px\",\n        marginTop: \"0\",\n        marginBottom: \"0\",\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\"\n      },\n      \"& a,& a:hover,& a:focus\": {\n        color: \"#FFFFFF\"\n      }\n    },\n    cardTitleWhite: {\n      color: \"#FFFFFF\",\n      marginTop: \"0px\",\n      minHeight: \"auto\",\n      fontWeight: \"300\",\n      fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n      marginBottom: \"3px\",\n      textDecoration: \"none\",\n      \"& small\": {\n        color: \"#777\",\n        fontSize: \"65%\",\n        fontWeight: \"400\",\n        lineHeight: \"1\"\n      }\n    },\n    // button:{\n    //     flexDirection: 'row', \n    //     justifyContent: 'flex-end',\n    //     alignSelf: 'flex-end',\n    //     alignItems: 'flex-end'\n    // }\n  };\n  \n  const useStyles = makeStyles(styles);\n  function createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n  }\n  \n\n  \n\nfunction Employee(props) {\n  // const employeeData=useContext(EmployeeDataContext)\n  // console.log(\"Ds\",employeeData)\n  const classes = useStyles();\n  const data=useSelector(state=>state)\n  const dispatch = useDispatch();\n  useEffect(()=>{\n    console.log(\"useefect Show\")\n    dispatch({ type:'SHOW_EMPLOYEE' })\n    // showEmployee()\n  },[])\n  const rows = [\n  //  employeeData.fullName===\"undefined\"?\"\":createData(employeeData.fullName,employeeData.fullName,employeeData.fullName,employeeData.fullName,employeeData.fullName)\n    // createData('A', 'X', 'X', 'X', 43000),\n    // createData('E', 'X', 'X', 'X', 60000),\n    // createData('C', 'X', 'X', 'X', 43000),\n    // createData('G', 'X', 'X', 'X', 39000),\n  ];\n  // const data=props.data;\n  // console.log(\"hii\",employeeData)\n    return (\n        <div>\n            <GridContainer>\n      <GridItem xs={12} sm={12} md={12}>\n        <Card>\n          {/* in cardheader we can use plain attribute */}\n          <CardHeader color=\"primary\"> \n            <h4 className={classes.cardTitleWhite}>\n            Employee Information\n              {/* {props.location.state.data} */}\n            </h4>\n            {/* <p className={classes.cardCategoryWhite} style={{display:' inline'}}>\n              Employee Information\n            </p> */}\n            <Button variant=\"contained\" style={{float:'right'}} color=\"primary\"  component={Link} to=\"/admin/addEmployee\">\n                Add Employee\n            </Button>\n            {/* <button  onClick={props.showEmployee}>\n                Show Employeee\n            </button> */}\n          </CardHeader>\n          <CardBody>\n          <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell align=\"right\">City</TableCell>\n            <TableCell align=\"right\">State</TableCell>\n            <TableCell align=\"right\">Country</TableCell>\n            <TableCell align=\"right\">Salary</TableCell>\n            <TableCell align=\"center\" colSpan={2}>Action</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {/* {rows.map(row => ( */}\n            <TableRow>\n              <TableCell component=\"th\" scope=\"row\">\n                {state.fullName}\n              </TableCell>\n              <TableCell align=\"right\">{props.currentCity}</TableCell>\n              <TableCell align=\"right\">{props.currentState}</TableCell>\n              <TableCell align=\"right\">{props.currentState}</TableCell>\n              <TableCell align=\"right\">{props.currentCountry}</TableCell>\n              <TableCell align=\"right\"><Button variant=\"contained\" color=\"primary\"  component={Link} to=\"/admin/editEmployee\">\n                Edit\n            </Button></TableCell>\n              <TableCell align=\"right\"><Button variant=\"contained\" color=\"primary\"  component={Link} to=\"/admin/deleteEmployee\">\n                Delete\n            </Button></TableCell>\n            </TableRow>\n          {/* ))} */}\n        </TableBody>\n      </Table> \n          </CardBody>\n        </Card>\n      </GridItem>\n     \n    </GridContainer>\n        </div>\n    );\n}\nconst mapStateToProps=state=>{\n  console.log(\"hii\",state.fullName)\n  return{\n      // name:state.name,\n      // age:state.age\n      fullName: state.fullName,\n      preferredName: state.preferredName,\n      birthDate: state.birthDate,\n      gender: state.gender,\n      maritalStatus: state.maritalStatus,\n      currentStreet1: state.currentStreet1,\n      currentStreet2: state.currentStreet2,\n      currentCity: state.currentCity,\n      currentState: state.currentState,\n      currentCountry: state.currentCountry,\n      currentAddressProof: state.currentAddressProof,\n      permanentStreet1: state.permanentStreet1,\n      permanentStreet2: state.permanentStreet2,\n      permanentCity: state.permanentCity,\n      permanentState: state.permanentState,\n      permanentCountry: state.permanentCountry,\n      permanentAddressProof: state.permanentAddressProof,\n      emergencyName1: state.emergencyName1,\n      emergencyMobile1: state.emergencyMobile1,\n      emergencyRelationship1: state.emergencyRelationship1,\n      emergencyName2: state.emergencyName2,\n      emergencyMobile2: state.emergencyMobile2,\n      emergencyRelationship2: state.emergencyRelationship2,\n      jobHireDate: state.jobHireDate,\n      jobSalary: state.jobSalary,\n      jobCurrentSalary: state.jobCurrentSalary,\n      jobBond: state.jobBond,\n      idProof: state.idProof,\n      picture: state.picture,\n      feedback: state.feedback\n  }\n}\nconst mapDispatchToProps=dispatch=>{\n  return{\n      showEmployee:()=>dispatch(showEmployee())\n      \n  }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(Employee);\n\n    {/* <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell align=\"right\">City</TableCell>\n            <TableCell align=\"right\">State</TableCell>\n            <TableCell align=\"right\">Country</TableCell>\n            <TableCell align=\"right\">Salary</TableCell>\n            <TableCell align=\"center\" colSpan={2}>Action</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.name}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">{row.calories}</TableCell>\n              <TableCell align=\"right\">{row.fat}</TableCell>\n              <TableCell align=\"right\">{row.carbs}</TableCell>\n              <TableCell align=\"right\">{row.protein}</TableCell>\n              <TableCell align=\"right\"><Button variant=\"contained\" color=\"primary\"  component={Link} to=\"/admin/editEmployee\">\n                Edit\n            </Button></TableCell>\n              <TableCell align=\"right\"><Button variant=\"contained\" color=\"primary\"  component={Link} to=\"/admin/deleteEmployee\">\n                Delete\n            </Button></TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table> */}\n            {/* <Table\n              tableHeaderColor=\"primary\"\n              tableHead={[\"Name\", \"State\",\"Country\", \"City\", \"Salary\"]}\n              tableData={[\n                // data\n                [\"1\", \"Dakota Rice\", \"$36,738\", \"Niger\", \"Oud-Turnhout\"],\n                [\"2\", \"Minerva Hooper\", \"$23,789\", \"Curaçao\", \"Sinaai-Waas\"],\n                [\"3\", \"Sage Rodriguez\", \"$56,142\", \"Netherlands\", \"Baileux\"],\n                [\n                  \"4\",\n                  \"Philip Chaney\",\n                  \"$38,735\",\n                  \"Korea, South\",\n                  \"Overland Park\"\n                ],\n                [\n                  \"5\",\n                  \"Doris Greene\",\n                  \"$63,542\",\n                  \"Malawi\",\n                  \"Feldkirchen in Kärnten\"\n                ],\n                [\"6\", \"Mason Porter\", \"$78,615\", \"Chile\", \"Gloucester\"]\n              ]}\n            /> */}"]},"metadata":{},"sourceType":"module"}