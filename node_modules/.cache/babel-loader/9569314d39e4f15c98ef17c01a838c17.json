{"ast":null,"code":"import _toConsumableArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/components/AddEmployeeForms/CurrentAddress.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from 'react';\nimport { FormLabel } from \"@material-ui/core\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport StepperNavigationButtons from 'components/Stepper/StepperNavigationButtons';\nimport { StepContext, EmployeeContext, TitleContext } from 'views/Employee/Add';\nimport * as Yup from 'yup';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CustomDropzone from 'components/Dropzone/Dropzone';\nimport api, { toFormData } from '../../lib/axios';\nvar useStyles = makeStyles({\n  field: {\n    marginTop: \"32px\"\n  }\n});\nvar validationSchema = Yup.object().shape({\n  currentAddress: Yup.object().shape({\n    street1: Yup.string().required('Required')\n  }),\n  city: Yup.string().required('Required') //  addressProof: Yup.string().required('Required')\n\n});\n\nfunction CurrentAddress(props) {\n  var classes = useStyles();\n\n  var _useContext = useContext(EmployeeContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      employeeData = _useContext2[0],\n      setEmployeeData = _useContext2[1];\n\n  var _useContext3 = useContext(StepContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      activeStep = _useContext4[0],\n      setActiveStep = _useContext4[1];\n\n  var _useState = useState(new Set()),\n      _useState2 = _slicedToArray(_useState, 2),\n      skipped = _useState2[0],\n      setSkipped = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      file = _useState4[0],\n      setFile = _useState4[1];\n\n  var _useContext5 = useContext(TitleContext),\n      _useContext6 = _slicedToArray(_useContext5, 2),\n      title = _useContext6[0],\n      setTitle = _useContext6[1];\n\n  var fileList = [];\n  var fileAttachments = [];\n  var a;\n  setTitle('Current Address');\n  return React.createElement(Formik, {\n    initialValues: employeeData,\n    validationSchema: validationSchema,\n    onSubmit: function onSubmit(values) {\n      //handleNext()\n      var newSkipped = skipped;\n\n      var isStepSkipped = function isStepSkipped(step) {\n        return skipped.has(step);\n      };\n\n      if (isStepSkipped(activeStep)) {\n        newSkipped = new Set(newSkipped.values());\n        newSkipped[\"delete\"](activeStep);\n      }\n\n      setActiveStep(function (prevActiveStep) {\n        return prevActiveStep + 1;\n      });\n      setSkipped(newSkipped);\n      setEmployeeData(_objectSpread({}, employeeData, {\n        currentAddress: {\n          street1: values.currentAddress.street1,\n          street2: values.currentAddress.street2,\n          city: values.currentAddress.city,\n          state: values.currentAddress.state,\n          country: values.currentAddress.country\n        },\n        employeeAttachments: [].concat(_toConsumableArray(employeeData.employeeAttachments), _toConsumableArray(values.attachments))\n      }));\n      console.log(\"2\", values.attachments);\n    },\n    render: function render(_ref) {\n      var values = _ref.values,\n          setFieldValue = _ref.setFieldValue;\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Street 1\",\n        id: \"currentAddress.street1\",\n        name: \"currentAddress.street1\",\n        className: classes.field,\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Street 2\",\n        id: \"currentAddress.street2\",\n        name: \"currentAddress.street2\",\n        className: classes.field,\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"City\",\n        id: \"currentAddress.city\",\n        name: \"currentAddress.city\",\n        className: classes.field,\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"State\",\n        id: \"currentAddress.state\",\n        name: \"currentAddress.state\",\n        className: classes.field,\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Country\",\n        id: \"currentAddress.country\",\n        name: \"currentAddress.country\",\n        className: classes.field,\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        style: {\n          textAlign: 'left'\n        },\n        className: classes.field,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Current Address Proof\"), React.createElement(CustomDropzone, {\n        list: values.addressProof ? values.addressProof : [],\n        callBack: function callBack(files) {\n          files.map(function (file) {\n            var exist = 0;\n            fileList.map(function (existingFile) {\n              if (existingFile.name === file.name && existingFile.size === file.size) {\n                exist = 1; // alert(\"File has already selected\")\n              }\n            });\n\n            if (exist === 1) {\n              exist = 0;\n            } else {\n              fileList.push(file);\n              var test = {\n                file: file,\n                type: 'Current Address Proof'\n              };\n              var fileData = toFormData(test); // console.log(fileData)\n\n              api.post('employees/file', fileData).then(function (res) {\n                a = res.data.data;\n                fileAttachments.push(res.data.data);\n                setFieldValue('attachments', fileAttachments);\n              })[\"catch\"](function (err) {\n                console.log(\"err\", err);\n              });\n            }\n          });\n          console.log(\"filelist\", fileList);\n          setFieldValue('addressProof', fileList);\n          setFile(fileList);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(StepperNavigationButtons, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  });\n}\n\nexport default CurrentAddress;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/components/AddEmployeeForms/CurrentAddress.js"],"names":["React","useState","useContext","FormLabel","GridItem","GridContainer","StepperNavigationButtons","StepContext","EmployeeContext","TitleContext","Yup","Formik","Form","Field","ErrorMessage","TextField","makeStyles","CustomDropzone","api","toFormData","useStyles","field","marginTop","validationSchema","object","shape","currentAddress","street1","string","required","city","CurrentAddress","props","classes","employeeData","setEmployeeData","activeStep","setActiveStep","Set","skipped","setSkipped","file","setFile","title","setTitle","fileList","fileAttachments","a","values","newSkipped","isStepSkipped","step","has","prevActiveStep","street2","state","country","employeeAttachments","attachments","console","log","setFieldValue","textAlign","addressProof","files","map","exist","existingFile","name","size","push","test","type","fileData","post","then","res","data","err"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { FormLabel } from \"@material-ui/core\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport StepperNavigationButtons from 'components/Stepper/StepperNavigationButtons';\nimport { StepContext, EmployeeContext, TitleContext } from 'views/Employee/Add'\nimport * as Yup from 'yup'\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\nimport { TextField } from 'formik-material-ui';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CustomDropzone from 'components/Dropzone/Dropzone'\nimport api, { toFormData } from '../../lib/axios';\n\nconst useStyles = makeStyles({\n  field: {\n    marginTop: \"32px\"\n  }\n})\n\nconst validationSchema = Yup.object().shape({\n  currentAddress:Yup.object().shape(\n    {street1: Yup.string().required('Required')}\n  ),\n  city: Yup.string().required('Required')\n  //  addressProof: Yup.string().required('Required')\n\n});\n\nfunction CurrentAddress(props) {\n\n  const classes = useStyles()\n  const [employeeData, setEmployeeData] = useContext(EmployeeContext)\n  const [activeStep, setActiveStep] = useContext(StepContext);\n  const [skipped, setSkipped] = useState(new Set());\n  const [file,setFile]=useState()\n  const [title, setTitle] = useContext(TitleContext);\n  const fileList = []\n  const  fileAttachments=[]\n  var a;\n  setTitle('Current Address')\n\n  return (\n    <Formik\n      initialValues={employeeData}\n      validationSchema={validationSchema}\n      onSubmit={values => {\n        //handleNext()\n        let newSkipped = skipped;\n        const isStepSkipped = step => {\n          return skipped.has(step);\n        };\n        if (isStepSkipped(activeStep)) {\n          newSkipped = new Set(newSkipped.values());\n          newSkipped.delete(activeStep);\n        }\n        setActiveStep(prevActiveStep => prevActiveStep + 1);\n        setSkipped(newSkipped);\n        setEmployeeData({\n          ...employeeData,\n          currentAddress:{\n          street1: values.currentAddress.street1,\n          street2: values.currentAddress.street2,\n          city: values.currentAddress.city,\n          state: values.currentAddress.state,\n          country: values.currentAddress.country\n          },\n          employeeAttachments:[...employeeData.employeeAttachments,...values.attachments]\n        \n        })\n        console.log(\"2\",values.attachments)\n      }}\n      render={({ values, setFieldValue }) => {\n        return (<Form>\n          <GridContainer>\n\n            <GridItem xs={12} sm={12} md={6}>\n              <Field\n                label=\"Street 1\"\n                id=\"currentAddress.street1\"\n                name=\"currentAddress.street1\"\n                className={classes.field}\n                component={TextField}\n                fullWidth\n              />\n            </GridItem>\n\n            <GridItem xs={12} sm={12} md={6}>\n              <Field\n                label=\"Street 2\"\n                id=\"currentAddress.street2\"\n                name=\"currentAddress.street2\"\n                className={classes.field}\n                component={TextField}\n                fullWidth\n              />\n            </GridItem>\n\n            <GridItem xs={12} sm={12} md={4}>\n              <Field\n                label=\"City\"\n                id=\"currentAddress.city\"\n                name=\"currentAddress.city\"\n                className={classes.field}\n                component={TextField}\n                fullWidth\n              />\n            </GridItem>\n\n            <GridItem xs={12} sm={12} md={4}>\n              <Field\n                label=\"State\"\n                id=\"currentAddress.state\"\n                name=\"currentAddress.state\"\n                className={classes.field}\n                component={TextField}\n                fullWidth\n              />\n            </GridItem>\n\n            <GridItem xs={12} sm={12} md={4}>\n              <Field\n                label=\"Country\"\n                id=\"currentAddress.country\"\n                name=\"currentAddress.country\"\n                className={classes.field}\n                component={TextField}\n                fullWidth\n              />\n            </GridItem>\n\n            <GridItem xs={12} sm={12} md={12}>\n              <FormLabel component=\"legend\" style={{ textAlign: 'left' }} className={classes.field}>Current Address Proof</FormLabel>\n              <CustomDropzone list={values.addressProof?values.addressProof:[]} callBack={files => {\n                \n                files.map(file => {\n                  var exist = 0\n                  fileList.map(existingFile => {\n\n                    if (existingFile.name === file.name && existingFile.size === file.size) {\n                      exist = 1;\n                      // alert(\"File has already selected\")\n                    }\n                  })\n                  if (exist === 1) {\n\n                    exist = 0;\n                  }\n                  else {\n                    fileList.push(file)\n                    let test = {\n                      file,\n                      type:'Current Address Proof'\n                    }\n                    const fileData=toFormData(test)\n                    // console.log(fileData)\n                    api.post('employees/file',fileData).then(res=>{\n                       a=res.data.data\n                       fileAttachments.push(res.data.data)\n                    setFieldValue('attachments',fileAttachments)\n                     \n                  }).catch(err=>{console.log(\"err\",err)})\n                 \n                   \n                  }\n                })\n                console.log(\"filelist\", fileList)\n                setFieldValue('addressProof', fileList)\n                setFile(fileList)\n              }} \n              \n              />\n\n            </GridItem>\n\n            <GridItem xs={12} sm={12} md={12}>\n              <StepperNavigationButtons />\n            </GridItem>\n\n          </GridContainer>\n        </Form>)\n      }}\n    >\n    </Formik>\n  );\n}\n\nexport default CurrentAddress;"]},"metadata":{},"sourceType":"module"}