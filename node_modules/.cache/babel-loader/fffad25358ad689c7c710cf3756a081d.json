{"ast":null,"code":"import _defineProperty from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/components/AddEmployeeForms/IdProof.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from 'react';\nimport { FormLabel, RadioGroup, Radio, FormControlLabel, Button, TextField } from \"@material-ui/core\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { DatePicker, MuiPickersUtilsProvider } from \"material-ui-pickers\";\nimport { Formik, Field, Form } from 'formik';\nimport { EmployeeContext } from 'views/Employee/AddEmployee';\nimport StepperNavigationButtons from 'views/Employee/StepperNavigationButtons';\nimport * as Yup from 'yup';\nimport { StepContext } from 'views/Employee/AddEmployee';\nimport Dropzone from 'react-dropzone';\n\nfunction IdProof(props) {\n  // const classes = useStyles();\n  var _useContext = useContext(EmployeeContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      employeeData = _useContext2[0],\n      setEmployeeData = _useContext2[1];\n\n  var _useContext3 = useContext(StepContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      activeStep = _useContext4[0],\n      setActiveStep = _useContext4[1];\n\n  var _useState = useState(new Set()),\n      _useState2 = _slicedToArray(_useState, 2),\n      skipped = _useState2[0],\n      setSkipped = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filename = _useState4[0],\n      setFilename = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      file = _useState6[0],\n      setFile = _useState6[1];\n\n  function handleOnDrop(files, rejectedFiles) {\n    var curfile = files[0];\n    console.log(files[0].name);\n    setFilename(files[0].name); // this.setState({imagename:files[0].name})\n\n    var reader = new FileReader();\n    reader.addEventListener(\"load\", function () {\n      console.log(\"ondrop called\");\n      setFile(reader.result); // this.setState({\n      //       image:reader.result\n      //   })\n    }, false);\n    reader.readAsDataURL(curfile);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    initialValues: employeeData // validationSchema={ValidationSchema}\n    ,\n    onSubmit: function onSubmit(values) {\n      //handleNext()\n      var newSkipped = skipped;\n\n      var isStepSkipped = function isStepSkipped(step) {\n        return skipped.has(step);\n      };\n\n      if (isStepSkipped(activeStep)) {\n        newSkipped = new Set(newSkipped.values());\n        newSkipped[\"delete\"](activeStep);\n      }\n\n      setActiveStep(function (prevActiveStep) {\n        return prevActiveStep + 1;\n      });\n      setSkipped(newSkipped);\n      alert(\"fd\");\n      setEmployeeData(_objectSpread({}, employeeData, {\n        idProof: filename\n      }));\n      console.log(\"information\", employeeData);\n    },\n    render: function render(_ref) {\n      var errors = _ref.errors,\n          values = _ref.values,\n          touched = _ref.touched,\n          handleChange = _ref.handleChange,\n          handleSubmit = _ref.handleSubmit;\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        style: {\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Upload ID Proof\"), React.createElement(Dropzone, {\n        onDrop: handleOnDrop,\n        multiple: \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, function (_ref2) {\n        var getRootProps = _ref2.getRootProps,\n            getInputProps = _ref2.getInputProps;\n        return React.createElement(\"section\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(\"div\", Object.assign({}, getRootProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        })), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, filename === \"\" ? \"Drag and drop file here, or click to select file\" : filename)));\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(StepperNavigationButtons, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }));\n}\n\nexport default IdProof;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/components/AddEmployeeForms/IdProof.js"],"names":["React","useState","useContext","FormLabel","RadioGroup","Radio","FormControlLabel","Button","TextField","GridItem","GridContainer","DateFnsUtils","DatePicker","MuiPickersUtilsProvider","Formik","Field","Form","EmployeeContext","StepperNavigationButtons","Yup","StepContext","Dropzone","IdProof","props","employeeData","setEmployeeData","activeStep","setActiveStep","Set","skipped","setSkipped","filename","setFilename","file","setFile","handleOnDrop","files","rejectedFiles","curfile","console","log","name","reader","FileReader","addEventListener","result","readAsDataURL","values","newSkipped","isStepSkipped","step","has","prevActiveStep","alert","idProof","errors","touched","handleChange","handleSubmit","textAlign","getRootProps","getInputProps"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AACA,SAASC,SAAT,EAAmBC,UAAnB,EAA+BC,KAA/B,EAAsCC,gBAAtC,EAAwDC,MAAxD,EAAgEC,SAAhE,QAAiF,mBAAjF,C,CACA;;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SAASC,UAAT,EAAqBC,uBAArB,QAAmD,qBAAnD;AACA,SAASC,MAAT,EAAkBC,KAAlB,EAAyBC,IAAzB,QAAoC,QAApC;AACA,SAAQC,eAAR,QAA8B,4BAA9B;AACA,OAAQC,wBAAR,MAAuC,yCAAvC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAAQC,WAAR,QAA0B,4BAA1B;AACA,OAAOC,QAAP,MAAqB,gBAArB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAEpB;AAFoB,oBAGiBrB,UAAU,CAACe,eAAD,CAH3B;AAAA;AAAA,MAGbO,YAHa;AAAA,MAGAC,eAHA;;AAAA,qBAIgBvB,UAAU,CAACkB,WAAD,CAJ1B;AAAA;AAAA,MAIbM,UAJa;AAAA,MAIDC,aAJC;;AAAA,kBAKU1B,QAAQ,CAAC,IAAI2B,GAAJ,EAAD,CALlB;AAAA;AAAA,MAKbC,OALa;AAAA,MAKJC,UALI;;AAAA,mBAMS7B,QAAQ,CAAC,EAAD,CANjB;AAAA;AAAA,MAMb8B,QANa;AAAA,MAMJC,WANI;;AAAA,mBAOC/B,QAAQ,CAAC,EAAD,CAPT;AAAA;AAAA,MAObgC,IAPa;AAAA,MAORC,OAPQ;;AASpB,WAASC,YAAT,CAAsBC,KAAtB,EAA4BC,aAA5B,EAA0C;AACtC,QAAMC,OAAO,GAACF,KAAK,CAAC,CAAD,CAAnB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAAC,CAAD,CAAL,CAASK,IAArB;AACAT,IAAAA,WAAW,CAACI,KAAK,CAAC,CAAD,CAAL,CAASK,IAAV,CAAX,CAHsC,CAKtC;;AACA,QAAMC,MAAM,GAAC,IAAIC,UAAJ,EAAb;AACAD,IAAAA,MAAM,CAACE,gBAAP,CAAwB,MAAxB,EAA+B,YAAI;AAC/BL,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAEJN,MAAAA,OAAO,CAACQ,MAAM,CAACG,MAAR,CAAP,CAHmC,CAI/B;AACA;AACA;AACF,KAPF,EAOG,KAPH;AAQMH,IAAAA,MAAM,CAACI,aAAP,CAAqBR,OAArB;AACT;;AACD,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,MAAD;AACC,IAAA,aAAa,EAAEd,YADhB,CAEC;AAFD;AAGC,IAAA,QAAQ,EAAE,kBAAAuB,MAAM,EAAI;AAClB;AACA,UAAIC,UAAU,GAAGnB,OAAjB;;AACA,UAAMoB,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,IAAI,EAAI;AAC5B,eAAOrB,OAAO,CAACsB,GAAR,CAAYD,IAAZ,CAAP;AACD,OAFD;;AAGA,UAAID,aAAa,CAACvB,UAAD,CAAjB,EAA+B;AAC7BsB,QAAAA,UAAU,GAAG,IAAIpB,GAAJ,CAAQoB,UAAU,CAACD,MAAX,EAAR,CAAb;AACAC,QAAAA,UAAU,UAAV,CAAkBtB,UAAlB;AACD;;AACDC,MAAAA,aAAa,CAAC,UAAAyB,cAAc;AAAA,eAAIA,cAAc,GAAG,CAArB;AAAA,OAAf,CAAb;AACAtB,MAAAA,UAAU,CAACkB,UAAD,CAAV;AAGAK,MAAAA,KAAK,CAAC,IAAD,CAAL;AACA5B,MAAAA,eAAe,mBAAKD,YAAL;AACb8B,QAAAA,OAAO,EAACvB;AADK,SAAf;AAGAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BhB,YAA1B;AACC,KAtBJ;AAuBC,IAAA,MAAM,EAAG;AAAA,UAAE+B,MAAF,QAAEA,MAAF;AAAA,UAASR,MAAT,QAASA,MAAT;AAAA,UAAiBS,OAAjB,QAAiBA,OAAjB;AAAA,UAA0BC,YAA1B,QAA0BA,YAA1B;AAAA,UAAwCC,YAAxC,QAAwCA,YAAxC;AAAA,aACP,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE,EAAd;AAAkB,QAAA,EAAE,EAAE,EAAtB;AAA0B,QAAA,EAAE,EAAE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,QAArB;AAA8B,QAAA,KAAK,EAAE;AAACC,UAAAA,SAAS,EAAC;AAAX,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAExB,YAAlB;AAAgC,QAAA,QAAQ,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEC;AAAA,YAAEyB,YAAF,SAAEA,YAAF;AAAA,YAAgBC,aAAhB,SAAgBA,aAAhB;AAAA,eACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,6CAASD,YAAY,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACI,+CAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAI9B,QAAQ,KAAG,EAAX,GAAc,kDAAd,GAAiEA,QAArE,CAFJ,CADA,CADH;AAAA,OAFD,CAFF,CADA,EAgBE,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE,EAAd;AAAkB,QAAA,EAAE,EAAE,EAAtB;AAA0B,QAAA,EAAE,EAAE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAhBF,CADA,CADO;AAAA,KAvBV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADJ;AAwDH;;AAED,eAAeT,OAAf","sourcesContent":["import React ,{useState, useContext} from 'react';\nimport { FormLabel,RadioGroup, Radio, FormControlLabel, Button, TextField } from \"@material-ui/core\";\n// core components\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { DatePicker, MuiPickersUtilsProvider} from \"material-ui-pickers\";\nimport { Formik , Field, Form} from 'formik'\nimport {EmployeeContext} from 'views/Employee/AddEmployee'\nimport  StepperNavigationButtons  from 'views/Employee/StepperNavigationButtons';\nimport * as Yup from 'yup'\nimport {StepContext} from 'views/Employee/AddEmployee'\nimport Dropzone from 'react-dropzone';\n\nfunction IdProof(props) {\n\n    // const classes = useStyles();\n    const [employeeData,setEmployeeData]=useContext(EmployeeContext)\n    const [activeStep, setActiveStep] = useContext(StepContext);\n    const [skipped, setSkipped] = useState(new Set());\n    const [filename,setFilename]=useState('')\n    const [file,setFile]=useState('')\n  \n    function handleOnDrop(files,rejectedFiles){\n        const curfile=files[0]\n        console.log(files[0].name)\n        setFilename(files[0].name)\n        \n        // this.setState({imagename:files[0].name})\n        const reader=new FileReader()\n        reader.addEventListener(\"load\",()=>{\n            console.log(\"ondrop called\")\n            \n        setFile(reader.result)\n            // this.setState({\n            //       image:reader.result\n            //   })\n         },false)\n              reader.readAsDataURL(curfile)\n    }\n    return (\n        <div>\n           <Formik\n            initialValues={employeeData}\n            // validationSchema={ValidationSchema}\n            onSubmit={values => {\n              //handleNext()\n              let newSkipped = skipped;\n              const isStepSkipped = step => {\n                return skipped.has(step);\n              };\n              if (isStepSkipped(activeStep)) {\n                newSkipped = new Set(newSkipped.values());\n                newSkipped.delete(activeStep);\n              }\n              setActiveStep(prevActiveStep => prevActiveStep + 1);\n              setSkipped(newSkipped);\n\n\n              alert(\"fd\")\n              setEmployeeData({...employeeData,\n                idProof:filename,\n              })\n              console.log(\"information\",employeeData)\n              }} \n            render= {({errors,values, touched ,handleChange, handleSubmit}) => (\n              <Form>\n              <GridContainer>\n              <GridItem xs={12} sm={12} md={12}>\n                <FormLabel component=\"legend\" style={{textAlign:'left'}}>Upload ID Proof</FormLabel>\n                <Dropzone onDrop={handleOnDrop} multiple=\"true\">\n                    \n                {({getRootProps, getInputProps}) => (\n                    <section>\n                    <div {...getRootProps()}>\n                        <input {...getInputProps()} />\n                        <p>{filename===\"\"?\"Drag and drop file here, or click to select file\":filename}</p>\n                        \n                    </div>\n                    </section>\n                )}\n                </Dropzone>\n                </GridItem>\n                <GridItem xs={12} sm={12} md={12}>\n                <StepperNavigationButtons/>\n                </GridItem>\n              </GridContainer>\n              </Form>\n               )\n               } \n            >\n              \n              </Formik>\n     \n    </div>\n    );\n}\n\nexport default IdProof;"]},"metadata":{},"sourceType":"module"}