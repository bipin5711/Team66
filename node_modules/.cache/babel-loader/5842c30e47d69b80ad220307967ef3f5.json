{"ast":null,"code":"import _defineProperty from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bipin/Downloads/team66/src/components/AddEmployeeForms/CurrentAddress.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from 'react';\nimport { FormLabel } from \"@material-ui/core\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport StepperNavigationButtons from 'components/Stepper/StepperNavigationButtons';\nimport { StepContext, EmployeeContext, TitleContext } from 'views/Employee/Add';\nimport * as Yup from 'yup';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CustomDropzone from 'components/Dropzone/Dropzone';\nimport Chip from '@material-ui/core/Chip';\nvar useStyles = makeStyles({\n  field: {\n    marginTop: \"32px\"\n  }\n});\nvar validationSchema = Yup.object().shape({\n  currentStreet1: Yup.string().required('Required'),\n  currentCity: Yup.string().required('Required') //  addressProof: Yup.string().required('Required')\n\n});\n\nfunction CurrentAddress(props) {\n  var classes = useStyles();\n\n  var _useContext = useContext(EmployeeContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      employeeData = _useContext2[0],\n      setEmployeeData = _useContext2[1];\n\n  var _useContext3 = useContext(StepContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      activeStep = _useContext4[0],\n      setActiveStep = _useContext4[1];\n\n  var _useState = useState(new Set()),\n      _useState2 = _slicedToArray(_useState, 2),\n      skipped = _useState2[0],\n      setSkipped = _useState2[1];\n\n  var _useContext5 = useContext(TitleContext),\n      _useContext6 = _slicedToArray(_useContext5, 2),\n      title = _useContext6[0],\n      setTitle = _useContext6[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentAddressProof = _useState4[0],\n      setCurrentAddressProof = _useState4[1];\n\n  var fileList = [];\n  var fileNameList = [];\n  setTitle('Current Address');\n\n  var handleDelete = function handleDelete() {\n    console.info('You clicked the delete icon.');\n  };\n\n  return React.createElement(Formik, {\n    initialValues: employeeData,\n    validationSchema: validationSchema,\n    onSubmit: function onSubmit(values) {\n      //handleNext()\n      var newSkipped = skipped;\n\n      var isStepSkipped = function isStepSkipped(step) {\n        return skipped.has(step);\n      };\n\n      if (isStepSkipped(activeStep)) {\n        newSkipped = new Set(newSkipped.values());\n        newSkipped[\"delete\"](activeStep);\n      }\n\n      setActiveStep(function (prevActiveStep) {\n        return prevActiveStep + 1;\n      });\n      setSkipped(newSkipped);\n      setEmployeeData(_objectSpread({}, employeeData, {\n        currentStreet1: values.currentStreet1,\n        currentStreet2: values.currentStreet2,\n        currentCity: values.currentCity,\n        currentState: values.currentState,\n        currentCountry: values.currentCountry,\n        currentAddressProof: currentAddressProof\n      }));\n    },\n    render: function render() {\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Street 1\",\n        id: \"currentStreet1\",\n        name: \"currentStreet1\",\n        className: classes.field,\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Street 2\",\n        id: \"currentStreet2\",\n        name: \"currentStreet2\",\n        className: classes.field,\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"City\",\n        id: \"currentCity\",\n        name: \"currentCity\",\n        className: classes.field,\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"State\",\n        id: \"currentState\",\n        name: \"currentState\",\n        className: classes.field,\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Country\",\n        id: \"currentCountry\",\n        name: \"currentCountry\",\n        className: classes.field,\n        component: TextField,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        style: {\n          textAlign: 'left'\n        },\n        className: classes.field,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Current Address Proof\"), React.createElement(CustomDropzone, {\n        list: currentAddressProof,\n        callBack: function callBack(files) {\n          files.map(function (file) {\n            fileList.push(file);\n            fileNameList.push(file.name); // console.log(\"myfile\",file)\n          });\n          console.log(\"filelist\", fileList);\n          setCurrentAddressProof(fileList);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(StepperNavigationButtons, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  });\n}\n\nexport default CurrentAddress;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/components/AddEmployeeForms/CurrentAddress.js"],"names":["React","useState","useContext","FormLabel","GridItem","GridContainer","StepperNavigationButtons","StepContext","EmployeeContext","TitleContext","Yup","Formik","Form","Field","ErrorMessage","TextField","makeStyles","CustomDropzone","Chip","useStyles","field","marginTop","validationSchema","object","shape","currentStreet1","string","required","currentCity","CurrentAddress","props","classes","employeeData","setEmployeeData","activeStep","setActiveStep","Set","skipped","setSkipped","title","setTitle","currentAddressProof","setCurrentAddressProof","fileList","fileNameList","handleDelete","console","info","values","newSkipped","isStepSkipped","step","has","prevActiveStep","currentStreet2","currentState","currentCountry","textAlign","files","map","file","push","name","log"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { FormLabel } from \"@material-ui/core\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport StepperNavigationButtons from 'components/Stepper/StepperNavigationButtons';\nimport { StepContext, EmployeeContext, TitleContext } from 'views/Employee/Add'\nimport * as Yup from 'yup'\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\nimport { TextField } from 'formik-material-ui'; \nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CustomDropzone from 'components/Dropzone/Dropzone'\nimport Chip from '@material-ui/core/Chip';\n\nconst useStyles=makeStyles({\n  field:{\n    marginTop: \"32px\"\n  }\n})\n\nconst validationSchema = Yup.object().shape({\n  currentStreet1:Yup.string().required('Required'),\n  currentCity:Yup.string().required('Required')\n  //  addressProof: Yup.string().required('Required')\n\n});\n\nfunction CurrentAddress(props) {\n\n  const classes=useStyles()\n  const [employeeData, setEmployeeData] = useContext(EmployeeContext)\n  const [activeStep, setActiveStep] = useContext(StepContext);\n  const [skipped, setSkipped] = useState(new Set());\n  const [title, setTitle] = useContext(TitleContext);\n  const [currentAddressProof,setCurrentAddressProof]=useState([])\n  const fileList=[]\n  const fileNameList=[]\n  setTitle('Current Address')\n  const handleDelete = () => {\n    console.info('You clicked the delete icon.');\n  };\n\n  return (\n      <Formik\n        initialValues={employeeData}\n        validationSchema={validationSchema}\n        onSubmit={values => {\n          //handleNext()\n          let newSkipped = skipped;\n          const isStepSkipped = step => {\n            return skipped.has(step);\n          };\n          if (isStepSkipped(activeStep)) {\n            newSkipped = new Set(newSkipped.values());\n            newSkipped.delete(activeStep);\n          }\n          setActiveStep(prevActiveStep => prevActiveStep + 1);\n          setSkipped(newSkipped);\n          setEmployeeData({\n            ...employeeData,\n            currentStreet1: values.currentStreet1,\n            currentStreet2: values.currentStreet2,\n            currentCity: values.currentCity,\n            currentState: values.currentState,\n            currentCountry: values.currentCountry,\n            currentAddressProof: currentAddressProof\n          })\n        }}\n        render={() => (\n          <Form>\n            <GridContainer>\n\n              <GridItem xs={12} sm={12} md={6}>\n                <Field\n                  label=\"Street 1\"\n                  id=\"currentStreet1\"\n                  name=\"currentStreet1\"\n                  className={classes.field}\n                  component={TextField}\n                  fullWidth\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={6}>\n                <Field\n                  label=\"Street 2\"\n                  id=\"currentStreet2\"\n                  name=\"currentStreet2\"\n                  className={classes.field}\n                  component={TextField}\n                  fullWidth\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={4}>\n                <Field\n                  label=\"City\"\n                  id=\"currentCity\"\n                  name=\"currentCity\"\n                  className={classes.field}\n                  component={TextField}\n                  fullWidth\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={4}>\n                <Field\n                  label=\"State\"\n                  id=\"currentState\"\n                  name=\"currentState\"\n                  className={classes.field}\n                  component={TextField}\n                  fullWidth\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={4}>\n                <Field\n                  label=\"Country\"\n                  id=\"currentCountry\"\n                  name=\"currentCountry\"\n                  className={classes.field}\n                  component={TextField}\n                  fullWidth\n                />\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={12}>\n                <FormLabel component=\"legend\" style={{ textAlign: 'left' }} className={classes.field}>Current Address Proof</FormLabel>\n                <CustomDropzone list={currentAddressProof} callBack={files=>{\n                \n                  files.map(file=>{\n                    fileList.push(file)\n                    fileNameList.push(file.name)\n                    // console.log(\"myfile\",file)\n                  })\n                  console.log(\"filelist\",fileList)\n                  setCurrentAddressProof(fileList)\n                }} />\n                {/* <Field\n                  // label=\"Image\"\n                  id=\"currentAddressProof\"\n                  name=\"currentAddressProof\"\n                  component={CustomDropzone}\n                  fullWidth\n                />\n             {currentAddressProof?currentAddressProof.map(a=>{\n                return(<div>\n               <Chip label={a.name} color=\"primary\" /><br/><br/></div>\n              //  onDelete={handleDelete}\n                )})\n              :\"\"} */}\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={12}>\n                <StepperNavigationButtons />\n              </GridItem>\n\n            </GridContainer>\n          </Form>\n        )}\n      > \n    </Formik>\n  );\n}\n\nexport default CurrentAddress;"]},"metadata":{},"sourceType":"module"}