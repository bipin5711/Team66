{"ast":null,"code":"import _slicedToArray from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/home/bipin/Downloads/team66/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { FormLabel, Radio, FormControlLabel } from \"@material-ui/core\";\nimport { TextField, RadioGroup } from 'formik-material-ui';\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomDatePicker from 'components/Pickers/DatePicker';\nimport { Formik, Field, Form } from 'formik';\nimport StepperNavigationButtons from 'components/Stepper/StepperNavigationButtons';\nimport * as Yup from 'yup';\nimport { StepContext, EmployeeContext, TitleContext } from 'views/Employee/Add';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { format } from 'date-fns';\nvar validationSchema = Yup.object().shape({\n  name: Yup.string().min(2, 'too Short!').required('Required'),\n  preferredName: Yup.string(),\n  birthDate: Yup.date().nullable().min(new Date('01-01-1900'), 'Birth Date must be greater than 01-01-1960').max(new Date(), 'Birth Date is cannot greater than current day').required('Birth date is Required')\n});\nvar useStyles = makeStyles({\n  field: _defineProperty({\n    marginTop: '32px'\n  }, '@media (max-width:769px)', {\n    // eslint-disable-line no-useless-computed-key\n    marginTop: '10px'\n  })\n});\n\nfunction EmployeeInformation(props) {\n  var classes = useStyles();\n\n  var _useContext = useContext(EmployeeContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      employeeData = _useContext2[0],\n      setEmployeeData = _useContext2[1];\n\n  var _useContext3 = useContext(StepContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      activeStep = _useContext4[0],\n      setActiveStep = _useContext4[1];\n\n  var _useState = useState(new Set()),\n      _useState2 = _slicedToArray(_useState, 2),\n      skipped = _useState2[0],\n      setSkipped = _useState2[1]; // const [data,setData]=useState({})\n\n\n  var _useContext5 = useContext(TitleContext),\n      _useContext6 = _slicedToArray(_useContext5, 2),\n      title = _useContext6[0],\n      setTitle = _useContext6[1];\n\n  setTitle('Employee Information');\n  return gf // <Formik\n  //   initialValues={employeeData}\n  //   // validationSchema={validationSchema}\n  //   onSubmit={values => {\n  //     //handleNext()\n  //     let newSkipped = skipped;\n  //     const isStepSkipped = step => {\n  //       return skipped.has(step);\n  //     };\n  //     if (isStepSkipped(activeStep)) {\n  //       newSkipped = new Set(newSkipped.values());\n  //       newSkipped.delete(activeStep);\n  //     }\n  //     // alert(values.birthDate.length)\n  //     setActiveStep(prevActiveStep => prevActiveStep + 1);\n  //     setSkipped(newSkipped);\n  //     setEmployeeData({\n  //       ...employeeData,\n  //       name: values.name,\n  //       maritalStatus: values.maritalStatus,\n  //       preferredName: values.preferredName,\n  //       birthDate: values.birthDate.length===undefined?format(values.birthDate, 'yyyy-MM-dd'):values.birthDate,\n  //       gender: values.gender\n  //     })\n  //   }}\n  //   render={(values) => (\n  //     <Form>\n  //       <GridContainer>\n  //         <GridItem xs={12} sm={12} md={7}>\n  //           <Field\n  //             label=\"Full Name(As on your ID)\"\n  //             id=\"name\"\n  //             name=\"name\"\n  //             component={TextField}\n  //             className={classes.field}\n  //             fullWidth\n  //           />\n  //         </GridItem>\n  //         <GridItem xs={12} sm={12} md={5}>\n  //           <Field\n  //             label=\"Preferred Name\"\n  //             id=\"preferredName\"\n  //             name=\"preferredName\"\n  //             className={classes.field}\n  //             component={TextField}\n  //             fullWidth\n  //           />\n  //         </GridItem>\n  //       </GridContainer>\n  //       <GridContainer>\n  //         <GridItem xs={12} sm={12} md={3}>\n  //           <FormLabel component=\"legend\" style={{ textAlign: 'left' }} className={classes.field}>Birth Date</FormLabel>\n  //           <Field\n  //             name=\"birthDate\"\n  //             component={CustomDatePicker}\n  //             // label=\"Date\"\n  //             placeholder=\"Enter Date of Birth\"\n  //             fullWidth\n  //             format=\"dd-MM-yyyy\"\n  //           />\n  //         </GridItem>\n  //         <GridItem xs={12} sm={12} md={4}>\n  //           <FormLabel component=\"legend\" style={{ textAlign: 'left' }} className={classes.field}>Gender</FormLabel>\n  //           <Field fullWidth\n  //             id=\"gender\"\n  //             name=\"gender\"\n  //             component={RadioGroup}\n  //             row\n  //           >\n  //             <FormControlLabel\n  //               id=\"gender\"\n  //               label=\"Male\"\n  //               control={<Radio id=\"gender\" color=\"secondary\" />}\n  //               value=\"Male\"\n  //             />\n  //             <FormControlLabel\n  //               id=\"gender\"\n  //               value=\"Female\"\n  //               control={<Radio id=\"gender\" color=\"secondary\" />}\n  //               label=\"Female\"\n  //             />\n  //           </Field>\n  //         </GridItem>\n  //         <GridItem xs={12} sm={12} md={5}>\n  //           <FormLabel component=\"legend\" style={{ textAlign: 'left' }} className={classes.field}>Marital Status</FormLabel>\n  //           <Field fullWidth\n  //             id=\"maritalStatus\"\n  //             name=\"maritalStatus\"\n  //             component={RadioGroup}\n  //             row\n  //           >\n  //             <FormControlLabel\n  //               id=\"maritalStatus\"\n  //               label=\"Married\"\n  //               control={<Radio id=\"maritalStatus\" color=\"secondary\" />}\n  //               value=\"Married\"\n  //             />\n  //             <FormControlLabel\n  //               id=\"maritalStatus\"\n  //               value=\"Single\"\n  //               control={<Radio id=\"maritalStatus\" color=\"secondary\" />}\n  //               label=\"Single\"\n  //             />\n  //             <FormControlLabel\n  //               id=\"maritalStatus\"\n  //               value=\"Other\"\n  //               control={<Radio id=\"maritalStatus\" color=\"secondary\" />}\n  //               label=\"Other\"\n  //             />\n  //           </Field>\n  //         </GridItem>\n  //       </GridContainer>\n  //       <GridContainer>\n  //         <GridItem xs={12} sm={12} md={5}>\n  //           <StepperNavigationButtons />\n  //         </GridItem>\n  //       </GridContainer>\n  //     </Form>\n  //   )}\n  // >\n  // </Formik>\n  ;\n}\n\nexport default EmployeeInformation;","map":{"version":3,"sources":["/home/bipin/Downloads/team66/src/components/AddEmployeeForms/EmployeeInformation.js"],"names":["React","useState","useContext","useEffect","FormLabel","Radio","FormControlLabel","TextField","RadioGroup","GridItem","GridContainer","CustomDatePicker","Formik","Field","Form","StepperNavigationButtons","Yup","StepContext","EmployeeContext","TitleContext","makeStyles","format","validationSchema","object","shape","name","string","min","required","preferredName","birthDate","date","nullable","Date","max","useStyles","field","marginTop","EmployeeInformation","props","classes","employeeData","setEmployeeData","activeStep","setActiveStep","Set","skipped","setSkipped","title","setTitle","gf"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,gBAA3B,QAAmD,mBAAnD;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,oBAAtC;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,QAAoC,QAApC;AACA,OAAOC,wBAAP,MAAqC,6CAArC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,YAAvC,QAA2D,oBAA3D;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,IAAMC,gBAAgB,GAAGN,GAAG,CAACO,MAAJ,GAAaC,KAAb,CAAmB;AAC1CC,EAAAA,IAAI,EAAET,GAAG,CAACU,MAAJ,GACHC,GADG,CACC,CADD,EACI,YADJ,EAEHC,QAFG,CAEM,UAFN,CADoC;AAI1CC,EAAAA,aAAa,EAAEb,GAAG,CAACU,MAAJ,EAJ2B;AAK1CI,EAAAA,SAAS,EAAEd,GAAG,CAACe,IAAJ,GAAWC,QAAX,GACRL,GADQ,CACJ,IAAIM,IAAJ,CAAS,YAAT,CADI,EACoB,4CADpB,EAERC,GAFQ,CAEJ,IAAID,IAAJ,EAFI,EAEQ,+CAFR,EAGRL,QAHQ,CAGC,wBAHD;AAL+B,CAAnB,CAAzB;AAYA,IAAMO,SAAS,GAAGf,UAAU,CAAC;AAE3BgB,EAAAA,KAAK;AACHC,IAAAA,SAAS,EAAE;AADR,KAEF,0BAFE,EAE2B;AAAE;AAC9BA,IAAAA,SAAS,EAAE;AADiB,GAF3B;AAFsB,CAAD,CAA5B;;AAUA,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAClC,MAAMC,OAAO,GAAGL,SAAS,EAAzB;;AADkC,oBAEMjC,UAAU,CAACgB,eAAD,CAFhB;AAAA;AAAA,MAE3BuB,YAF2B;AAAA,MAEbC,eAFa;;AAAA,qBAGExC,UAAU,CAACe,WAAD,CAHZ;AAAA;AAAA,MAG3B0B,UAH2B;AAAA,MAGfC,aAHe;;AAAA,kBAIJ3C,QAAQ,CAAC,IAAI4C,GAAJ,EAAD,CAJJ;AAAA;AAAA,MAI3BC,OAJ2B;AAAA,MAIlBC,UAJkB,kBAKlC;;;AALkC,qBAMR7C,UAAU,CAACiB,YAAD,CANF;AAAA;AAAA,MAM3B6B,KAN2B;AAAA,MAMpBC,QANoB;;AAOlCA,EAAAA,QAAQ,CAAC,sBAAD,CAAR;AAEA,SACFC,EADE,CAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AA/HF;AAiID;;AAED,eAAeZ,mBAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { FormLabel, Radio, FormControlLabel } from \"@material-ui/core\";\nimport { TextField, RadioGroup } from 'formik-material-ui';\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomDatePicker from 'components/Pickers/DatePicker'\nimport { Formik, Field, Form } from 'formik'\nimport StepperNavigationButtons from 'components/Stepper/StepperNavigationButtons';\nimport * as Yup from 'yup'\nimport { StepContext, EmployeeContext, TitleContext } from 'views/Employee/Add'\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { format } from 'date-fns';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'too Short!')\n    .required('Required'),\n  preferredName: Yup.string(),\n  birthDate: Yup.date().nullable()\n    .min(new Date('01-01-1900'), 'Birth Date must be greater than 01-01-1960')\n    .max(new Date(), 'Birth Date is cannot greater than current day')\n    .required('Birth date is Required'),\n\n\n});\nconst useStyles = makeStyles({\n  \n  field: {\n    marginTop: '32px',\n    ['@media (max-width:769px)']: { // eslint-disable-line no-useless-computed-key\n      marginTop: '10px'\n    }\n  }\n\n})\nfunction EmployeeInformation(props) {\n  const classes = useStyles()\n  const [employeeData, setEmployeeData] = useContext(EmployeeContext)\n  const [activeStep, setActiveStep] = useContext(StepContext);\n  const [skipped, setSkipped] = useState(new Set());\n  // const [data,setData]=useState({})\n  const [title, setTitle] = useContext(TitleContext);\n  setTitle('Employee Information')\n  \n  return (\ngf\n    // <Formik\n    //   initialValues={employeeData}\n    //   // validationSchema={validationSchema}\n    //   onSubmit={values => {\n    //     //handleNext()\n    //     let newSkipped = skipped;\n    //     const isStepSkipped = step => {\n    //       return skipped.has(step);\n    //     };\n    //     if (isStepSkipped(activeStep)) {\n    //       newSkipped = new Set(newSkipped.values());\n    //       newSkipped.delete(activeStep);\n    //     }\n    //     // alert(values.birthDate.length)\n    //     setActiveStep(prevActiveStep => prevActiveStep + 1);\n    //     setSkipped(newSkipped);\n    //     setEmployeeData({\n    //       ...employeeData,\n    //       name: values.name,\n    //       maritalStatus: values.maritalStatus,\n    //       preferredName: values.preferredName,\n    //       birthDate: values.birthDate.length===undefined?format(values.birthDate, 'yyyy-MM-dd'):values.birthDate,\n    //       gender: values.gender\n    //     })\n    //   }}\n    //   render={(values) => (\n    //     <Form>\n    //       <GridContainer>\n    //         <GridItem xs={12} sm={12} md={7}>\n    //           <Field\n    //             label=\"Full Name(As on your ID)\"\n    //             id=\"name\"\n    //             name=\"name\"\n    //             component={TextField}\n    //             className={classes.field}\n    //             fullWidth\n    //           />\n    //         </GridItem>\n\n    //         <GridItem xs={12} sm={12} md={5}>\n    //           <Field\n    //             label=\"Preferred Name\"\n    //             id=\"preferredName\"\n    //             name=\"preferredName\"\n    //             className={classes.field}\n    //             component={TextField}\n    //             fullWidth\n    //           />\n\n    //         </GridItem>\n    //       </GridContainer>\n    //       <GridContainer>\n    //         <GridItem xs={12} sm={12} md={3}>\n    //           <FormLabel component=\"legend\" style={{ textAlign: 'left' }} className={classes.field}>Birth Date</FormLabel>\n    //           <Field\n    //             name=\"birthDate\"\n    //             component={CustomDatePicker}\n    //             // label=\"Date\"\n    //             placeholder=\"Enter Date of Birth\"\n    //             fullWidth\n    //             format=\"dd-MM-yyyy\"\n    //           />\n    //         </GridItem>\n\n    //         <GridItem xs={12} sm={12} md={4}>\n    //           <FormLabel component=\"legend\" style={{ textAlign: 'left' }} className={classes.field}>Gender</FormLabel>\n    //           <Field fullWidth\n    //             id=\"gender\"\n    //             name=\"gender\"\n    //             component={RadioGroup}\n    //             row\n    //           >\n    //             <FormControlLabel\n    //               id=\"gender\"\n    //               label=\"Male\"\n    //               control={<Radio id=\"gender\" color=\"secondary\" />}\n    //               value=\"Male\"\n    //             />\n    //             <FormControlLabel\n    //               id=\"gender\"\n    //               value=\"Female\"\n    //               control={<Radio id=\"gender\" color=\"secondary\" />}\n    //               label=\"Female\"\n    //             />\n    //           </Field>\n    //         </GridItem>\n\n    //         <GridItem xs={12} sm={12} md={5}>\n    //           <FormLabel component=\"legend\" style={{ textAlign: 'left' }} className={classes.field}>Marital Status</FormLabel>\n    //           <Field fullWidth\n    //             id=\"maritalStatus\"\n    //             name=\"maritalStatus\"\n    //             component={RadioGroup}\n    //             row\n    //           >\n    //             <FormControlLabel\n    //               id=\"maritalStatus\"\n    //               label=\"Married\"\n    //               control={<Radio id=\"maritalStatus\" color=\"secondary\" />}\n    //               value=\"Married\"\n    //             />\n    //             <FormControlLabel\n    //               id=\"maritalStatus\"\n    //               value=\"Single\"\n    //               control={<Radio id=\"maritalStatus\" color=\"secondary\" />}\n    //               label=\"Single\"\n    //             />\n    //             <FormControlLabel\n    //               id=\"maritalStatus\"\n    //               value=\"Other\"\n    //               control={<Radio id=\"maritalStatus\" color=\"secondary\" />}\n    //               label=\"Other\"\n    //             />\n    //           </Field>\n    //         </GridItem>\n    //       </GridContainer>\n    //       <GridContainer>\n    //         <GridItem xs={12} sm={12} md={5}>\n    //           <StepperNavigationButtons />\n    //         </GridItem>\n\n    //       </GridContainer>\n    //     </Form>\n    //   )}\n    // >\n    // </Formik>\n  );\n}\n\nexport default EmployeeInformation;"]},"metadata":{},"sourceType":"module"}